(
	{display = 'AMQPConnection'; insert = '(${1:[array \\\$credentials = array()]})';},
	{display = 'AMQPExchange'; insert = '(${1:AMQPConnection \\\$connection}, ${2:[string \\\$exchange_name = \"\"]})';},
	{display = 'AMQPQueue'; insert = '(${1:AMQPConnection \\\$amqp_connection}, ${2:[string \\\$queue_name = \"\"]})';},
	{display = 'APCIterator'; insert = '(${1:string \\\$cache}, ${2:[mixed \\\$search = null]}, ${3:[int \\\$format]}, ${4:[int \\\$chunk_size = 100]}, ${5:[int \\\$list]})';},
	{display = 'AppendIterator'; insert = '()';},
	{display = 'ArrayIterator'; insert = '(${1:mixed \\\$array})';},
	{display = 'ArrayObject'; insert = '(${1:[mixed \\\$input]}, ${2:[int \\\$flags]}, ${3:[string \\\$iterator_class]})';},
	{display = 'BadFunctionCallException'; insert = '(${1:[string \\\$message = ""], [int \\\$code = 0], [Exception \\\$previous = NULL]})';},
	{display = 'BadMethodCallException'; insert = '(${1:[string \\\$message = ""], [int \\\$code = 0], [Exception \\\$previous = NULL]})';},
	{display = 'CachingIterator'; insert = '(${1:Iterator \\\$iterator}, ${2:[string \\\$flags]})';},
	{display = 'Collator'; insert = '(${1:string \\\$locale})';},
	{display = 'DOMAttr'; insert = '(${1:string \\\$name}, ${2:[string \\\$value]})';},
	{display = 'DOMComment'; insert = '(${1:[string \\\$value]})';},
	{display = 'DOMDocument'; insert = '(${1:[string \\\$version]}, ${2:[string \\\$encoding]})';},
	{display = 'DOMElement'; insert = '(${1:string \\\$name}, ${2:[string \\\$value]}, ${3:[string \\\$namespaceURI]})';},
	{display = 'DOMEntityReference'; insert = '(${1:string \\\$name})';},
	{display = 'DOMImplementation'; insert = '()';},
	{display = 'DOMProcessingInstruction'; insert = '(${1:string \\\$name}, ${2:[string \\\$value]})';},
	{display = 'DOMText'; insert = '(${1:[string \\\$value]})';},
	{display = 'DOMXPath'; insert = '(${1:DOMDocument \\\$doc})';},
	{display = 'DateInterval'; insert = '(${1:string \\\$interval_spec})';},
	{display = 'DatePeriod'; insert = '(${1:DateTime \\\$start}, ${2:DateInterval \\\$interval}, ${3:int \\\$recurrences}, ${4:[int \\\$options]}, ${5:DateTime \\\$end}, ${6:string \\\$isostr})';},
	{display = 'DateTime'; insert = '(${1:[string \\\$time = \"now\"]}, ${2:[DateTimeZone \\\$timezone]})';},
	{display = 'DateTimeZone'; insert = '(${1:string \\\$timezone})';},
	{display = 'DirectoryIterator'; insert = '(${1:string \\\$path})';},
	{display = 'DomainException'; insert = '(${1:[string \\\$message = ""], [int \\\$code = 0], [Exception \\\$previous = NULL]})';},
	{display = 'ErrorException'; insert = '(${1:[string \\\$message = ""], [int \\\$code = 0], [Exception \\\$previous = NULL]})';},
	{display = 'Exception'; insert = '(${1:[string \\\$message = ""], [int \\\$code = 0], [Exception \\\$previous = NULL]})';},
	{display = 'FilesystemIterator'; insert = '(${1:string \\\$path}, ${2:[int \\\$flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS]})';},
	{display = 'FilterIterator'; insert = '(${1:Iterator \\\$iterator})';},
	{display = 'FrenchToJD'; insert = '(${1:int \\\$month}, ${2:int \\\$day}, ${3:int \\\$year})';},
	{display = 'GlobIterator'; insert = '(${1:string \\\$path}, ${2:[int \\\$flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO]})';},
	{display = 'Gmagick'; insert = '(${1:[string \\\$filename]})';},
	{display = 'GmagickPixel'; insert = '(${1:[string \\\$color]})';},
	{display = 'GregorianToJD'; insert = '(${1:int \\\$month}, ${2:int \\\$day}, ${3:int \\\$year})';},
	{display = 'HaruDoc'; insert = '()';},
	{display = 'HttpDeflateStream'; insert = '(${1:[int \\\$flags]})';},
	{display = 'HttpInflateStream'; insert = '(${1:[int \\\$flags]})';},
	{display = 'HttpMessage'; insert = '(${1:[string \\\$message]})';},
	{display = 'HttpQueryString'; insert = '(${1:[bool \\\$global = true]}, ${2:[mixed \\\$add]})';},
	{display = 'HttpRequest'; insert = '(${1:[string \\\$url]}, ${2:[int \\\$request_method = HTTP_METH_GET]}, ${3:[array \\\$options]})';},
	{display = 'HttpRequestPool'; insert = '(${1:[HttpRequest \\\$request]}, ${2:[HttpRequest ...]})';},
	{display = 'Imagick'; insert = '(${1:[mixed \\\$files]})';},
	{display = 'ImagickDraw'; insert = '()';},
	{display = 'ImagickPixel'; insert = '(${1:[string \\\$color]})';},
	{display = 'ImagickPixelIterator'; insert = '(${1:Imagick \\\$wand})';},
	{display = 'InfiniteIterator'; insert = '(${1:Iterator \\\$iterator})';},
	{display = 'InvalidArgumentException'; insert = '(${1:[string \\\$message = ""], [int \\\$code = 0], [Exception \\\$previous = NULL]})';},
	{display = 'IteratorIterator'; insert = '(${1:Traversable \\\$iterator})';},
	{display = 'JDDayOfWeek'; insert = '(${1:int \\\$julianday}, ${2:[int \\\$mode = CAL_DOW_DAYNO]})';},
	{display = 'JDMonthName'; insert = '(${1:int \\\$julianday}, ${2:int \\\$mode})';},
	{display = 'JDToFrench'; insert = '(${1:int \\\$juliandaycount})';},
	{display = 'JDToGregorian'; insert = '(${1:int \\\$julianday})';},
	{display = 'JDToJulian'; insert = '(${1:int \\\$julianday})';},
	{display = 'JewishToJD'; insert = '(${1:int \\\$month}, ${2:int \\\$day}, ${3:int \\\$year})';},
	{display = 'JulianToJD'; insert = '(${1:int \\\$month}, ${2:int \\\$day}, ${3:int \\\$year})';},
	{display = 'KTaglib_MPEG_File'; insert = '(${1:string \\\$filename})';},
	{display = 'LengthException'; insert = '(${1:[string \\\$message = ""], [int \\\$code = 0], [Exception \\\$previous = NULL]})';},
	{display = 'LimitIterator'; insert = '(${1:Iterator \\\$iterator}, ${2:[int \\\$offset]}, ${3:[int \\\$count = -1]})';},
	{display = 'LogicException'; insert = '(${1:[string \\\$message = ""], [int \\\$code = 0], [Exception \\\$previous = NULL]})';},
	{display = 'Memcached'; insert = '(${1:[string \\\$persistent_id]})';},
	{display = 'Mongo'; insert = '(${1:[string \\\$server = \"mongodb://localhost:27017\"]}, ${2:[array \\\$options = )]})';},
	{display = 'MongoBinData'; insert = '(${1:string \\\$data}, ${2:[int \\\$type = 2]})';},
	{display = 'MongoCode'; insert = '(${1:string \\\$code}, ${2:[array \\\$scope = array()]})';},
	{display = 'MongoCollection'; insert = '(${1:MongoDB \\\$db}, ${2:string \\\$name})';},
	{display = 'MongoCursor'; insert = '(${1:Mongo \\\$connection}, ${2:string \\\$ns}, ${3:[array \\\$query = array()]}, ${4:[array \\\$fields = array()]})';},
	{display = 'MongoDB'; insert = '(${1:Mongo \\\$conn}, ${2:string \\\$name})';},
	{display = 'MongoDate'; insert = '(${1:[int \\\$sec]}, ${2:[int \\\$usec]})';},
	{display = 'MongoGridFS'; insert = '(${1:MongoDB \\\$db}, ${2:[string \\\$prefix = \"fs\"]}, ${3:[mixed \\\$chunks = \"fs\"]})';},
	{display = 'MongoGridFSCursor'; insert = '(${1:MongoGridFS \\\$gridfs}, ${2:resource \\\$connection}, ${3:string \\\$ns}, ${4:array \\\$query}, ${5:array \\\$fields})';},
	{display = 'MongoGridfsFile'; insert = '(${1:MongoGridFS \\\$gridfs}, ${2:array \\\$file})';},
	{display = 'MongoId'; insert = '(${1:[string \\\$id]})';},
	{display = 'MongoInt32'; insert = '(${1:string \\\$value})';},
	{display = 'MongoInt64'; insert = '(${1:string \\\$value})';},
	{display = 'MongoRegex'; insert = '(${1:string \\\$regex})';},
	{display = 'MongoTimestamp'; insert = '(${1:[int \\\$sec]}, ${2:[int \\\$inc]})';},
	{display = 'MultipleIterator'; insert = '(${1:int \\\$flags})';},
	{display = 'NoRewindIterator'; insert = '(${1:Iterator \\\$iterator})';},
	{display = 'OutOfBoundsException'; insert = '(${1:[string \\\$message = ""], [int \\\$code = 0], [Exception \\\$previous = NULL]})';},
	{display = 'OutOfRangeException'; insert = '(${1:[string \\\$message = ""], [int \\\$code = 0], [Exception \\\$previous = NULL]})';},
	{display = 'OverflowException'; insert = '(${1:[string \\\$message = ""], [int \\\$code = 0], [Exception \\\$previous = NULL]})';},
	{display = 'PDO'; insert = '(${1:string \\\$dsn}, ${2:[string \\\$username]}, ${3:[string \\\$password]}, ${4:[array \\\$driver_options]})';},
	{display = 'ParentIterator'; insert = '(${1:RecursiveIterator \\\$iterator})';},
	{display = 'Phar'; insert = '(${1:string \\\$fname}, ${2:[int \\\$flags]}, ${3:[string \\\$alias]})';},
	{display = 'PharData'; insert = '(${1:string \\\$fname}, ${2:[int \\\$flags]}, ${3:[string \\\$alias]}, ${4:[int \\\$format]})';},
	{display = 'PharFileInfo'; insert = '(${1:string \\\$entry})';},
	{display = 'RRDCreator'; insert = '(${1:string \\\$path}, ${2:[string \\\$startTime]}, ${3:[int \\\$step]})';},
	{display = 'RRDGraph'; insert = '(${1:string \\\$path})';},
	{display = 'RRDUpdater'; insert = '(${1:string \\\$path})';},
	{display = 'RangeException'; insert = '(${1:[string \\\$message = ""], [int \\\$code = 0], [Exception \\\$previous = NULL]})';},
	{display = 'RecursiveCachingIterator'; insert = '(${1:Iterator \\\$iterator}, ${2:[string \\\$flags = self::CALL_TOSTRING]})';},
	{display = 'RecursiveDirectoryIterator'; insert = '(${1:string \\\$path}, ${2:[int \\\$flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO]})';},
	{display = 'RecursiveFilterIterator'; insert = '(${1:RecursiveIterator \\\$iterator})';},
	{display = 'RecursiveIteratorIterator'; insert = '(${1:Traversable \\\$iterator}, ${2:[int \\\$mode = LEAVES_ONLY]}, ${3:[int \\\$flags]})';},
	{display = 'RecursiveRegexIterator'; insert = '(${1:RecursiveIterator \\\$iterator}, ${2:string \\\$regex}, ${3:[int \\\$mode]}, ${4:[int \\\$flags]}, ${5:[int \\\$preg_flags]})';},
	{display = 'RecursiveTreeIterator'; insert = '(${1:RecursiveIterator|IteratorAggregate \\\$it}, ${2:[int \\\$flags = RecursiveTreeIterator::BYPASS_KEY]}, ${3:[int \\\$cit_flags = CachingIterator::CATCH_GET_CHILD]}, ${4:[int \\\$mode = RecursiveIteratorIterator::SELF_FIRST]})';},
	{display = 'ReflectionClass'; insert = '(${1:mixed \\\$argument})';},
	{display = 'ReflectionExtension'; insert = '(${1:string \\\$name})';},
	{display = 'ReflectionFunction'; insert = '(${1:mixed \\\$name})';},
	{display = 'ReflectionMethod'; insert = '(${1:mixed \\\$class}, ${2:string \\\$name})';},
	{display = 'ReflectionObject'; insert = '(${1:object \\\$argument})';},
	{display = 'ReflectionParameter'; insert = '(${1:string \\\$function}, ${2:string \\\$parameter})';},
	{display = 'ReflectionProperty'; insert = '(${1:mixed \\\$class}, ${2:string \\\$name})';},
	{display = 'RegexIterator'; insert = '(${1:Iterator \\\$iterator}, ${2:string \\\$regex}, ${3:[int \\\$mode]}, ${4:[int \\\$flags]}, ${5:[int \\\$preg_flags]})';},
	{display = 'RuntimeException'; insert = '(${1:[string \\\$message = ""], [int \\\$code = 0], [Exception \\\$previous = NULL]})';},
	{display = 'SAMConnection'; insert = '()';},
	{display = 'SAMMessage'; insert = '(${1:[mixed \\\$body]})';},
	{display = 'SDO_DAS_Relational'; insert = '(${1:array \\\$database_metadata}, ${2:[string \\\$application_root_type]}, ${3:[array \\\$SDO_containment_references_metadata]})';},
	{display = 'SDO_Model_ReflectionDataObject'; insert = '(${1:SDO_DataObject \\\$data_object})';},
	{display = 'SNMP'; insert = '(${1:int \\\$version}, ${2:string \\\$hostname}, ${3:string \\\$community}, ${4:[int \\\$timeout = 1000000]}, ${5:[int \\\$retries = 5]})';},
	{display = 'SQLite3'; insert = '(${1:string \\\$filename}, ${2:[int \\\$flags]}, ${3:[string \\\$encryption_key]})';},
	{display = 'SVM'; insert = '()';},
	{display = 'SVMModel'; insert = '(${1:[string \\\$filename]})';},
	{display = 'SimpleXMLElement'; insert = '(${1:string \\\$data}, ${2:[int \\\$options]}, ${3:[bool \\\$data_is_url = false]}, ${4:[string \\\$ns = \"\"]}, ${5:[bool \\\$is_prefix = false]})';},
	{display = 'SoapClient'; insert = '(${1:mixed \\\$wsdl}, ${2:[array \\\$options]})';},
	{display = 'SoapFault'; insert = '(${1:string \\\$faultcode}, ${2:string \\\$faultstring}, ${3:[string \\\$faultactor]}, ${4:[string \\\$detail]}, ${5:[string \\\$faultname]}, ${6:[string \\\$headerfault]})';},
	{display = 'SoapHeader'; insert = '(${1:string \\\$namespace}, ${2:string \\\$name}, ${3:[mixed \\\$data]}, ${4:[bool \\\$mustunderstand]}, ${5:[string \\\$actor]})';},
	{display = 'SoapParam'; insert = '(${1:mixed \\\$data}, ${2:string \\\$name})';},
	{display = 'SoapServer'; insert = '(${1:mixed \\\$wsdl}, ${2:[array \\\$options]})';},
	{display = 'SoapVar'; insert = '(${1:string \\\$data}, ${2:string \\\$encoding}, ${3:[string \\\$type_name]}, ${4:[string \\\$type_namespace]}, ${5:[string \\\$node_name]}, ${6:[string \\\$node_namespace]})';},
	{display = 'SphinxClient'; insert = '()';},
	{display = 'SplBool'; insert = '()';},
	{display = 'SplDoublyLinkedList'; insert = '()';},
	{display = 'SplEnum'; insert = '()';},
	{display = 'SplFileInfo'; insert = '(${1:string \\\$file_name})';},
	{display = 'SplFileObject'; insert = '(${1:string \\\$filename}, ${2:[string \\\$open_mode = \"r\"]}, ${3:[bool \\\$use_include_path = false]}, ${4:[resource \\\$context]})';},
	{display = 'SplFixedArray'; insert = '(${1:[int \\\$size]})';},
	{display = 'SplFloat'; insert = '(${1:float \\\$input})';},
	{display = 'SplHeap'; insert = '()';},
	{display = 'SplInt'; insert = '(${1:integer \\\$input})';},
	{display = 'SplPriorityQueue'; insert = '()';},
	{display = 'SplQueue'; insert = '()';},
	{display = 'SplStack'; insert = '()';},
	{display = 'SplString'; insert = '(${1:string \\\$input})';},
	{display = 'SplTempFileObject'; insert = '(${1:[int \\\$max_memory]})';},
	{display = 'Swish'; insert = '(${1:string \\\$index_names})';},
	{display = 'TokyoTyrant'; insert = '(${1:[string \\\$host]}, ${2:[int \\\$port = TokyoTyrant::RDBDEF_PORT]}, ${3:[array \\\$options]})';},
	{display = 'TokyoTyrantQuery'; insert = '(${1:TokyoTyrantTable \\\$table})';},
	{display = 'Transliterator'; insert = '()';},
	{display = 'UnderflowException'; insert = '(${1:[string \\\$message = ""], [int \\\$code = 0], [Exception \\\$previous = NULL]})';},
	{display = 'UnexpectedValueException'; insert = '(${1:[string \\\$message = ""], [int \\\$code = 0], [Exception \\\$previous = NULL]})';},
	{display = 'V8Js'; insert = '(${1:[string \\\$object_name = \"PHP\"]}, ${2:[array \\\$variables = array()]}, ${3:[array \\\$extensions = array()]}, ${4:[bool \\\$report_uncaught_exceptions]})';},
	{display = 'XSLTProcessor'; insert = '()';},
	{display = '__halt_compiler'; insert = '()';},
	{display = 'abs'; insert = '(${1:mixed \\\$number})';},
	{display = 'acos'; insert = '(${1:float \\\$arg})';},
	{display = 'acosh'; insert = '(${1:float \\\$arg})';},
	{display = 'addcslashes'; insert = '(${1:string \\\$str}, ${2:string \\\$charlist})';},
	{display = 'addslashes'; insert = '(${1:string \\\$str})';},
	{display = 'aggregate'; insert = '(${1:object \\\$object}, ${2:string \\\$class_name})';},
	{display = 'aggregate_info'; insert = '(${1:object \\\$object})';},
	{display = 'aggregate_methods'; insert = '(${1:object \\\$object}, ${2:string \\\$class_name})';},
	{display = 'aggregate_methods_by_list'; insert = '(${1:object \\\$object}, ${2:string \\\$class_name}, ${3:array \\\$methods_list}, ${4:[bool \\\$exclude = false]})';},
	{display = 'aggregate_methods_by_regexp'; insert = '(${1:object \\\$object}, ${2:string \\\$class_name}, ${3:string \\\$regexp}, ${4:[bool \\\$exclude = false]})';},
	{display = 'aggregate_properties'; insert = '(${1:object \\\$object}, ${2:string \\\$class_name})';},
	{display = 'aggregate_properties_by_list'; insert = '(${1:object \\\$object}, ${2:string \\\$class_name}, ${3:array \\\$properties_list}, ${4:[bool \\\$exclude = false]})';},
	{display = 'aggregate_properties_by_regexp'; insert = '(${1:object \\\$object}, ${2:string \\\$class_name}, ${3:string \\\$regexp}, ${4:[bool \\\$exclude = false]})';},
	{display = 'aggregation_info'; insert = '()';},
	{display = 'apache_child_terminate'; insert = '()';},
	{display = 'apache_get_modules'; insert = '()';},
	{display = 'apache_get_version'; insert = '()';},
	{display = 'apache_getenv'; insert = '(${1:string \\\$variable}, ${2:[bool \\\$walk_to_top]})';},
	{display = 'apache_lookup_uri'; insert = '(${1:string \\\$filename})';},
	{display = 'apache_note'; insert = '(${1:string \\\$note_name}, ${2:[string \\\$note_value]})';},
	{display = 'apache_request_headers'; insert = '()';},
	{display = 'apache_reset_timeout'; insert = '()';},
	{display = 'apache_response_headers'; insert = '()';},
	{display = 'apache_setenv'; insert = '(${1:string \\\$variable}, ${2:string \\\$value}, ${3:[bool \\\$walk_to_top = false]})';},
	{display = 'apc_add'; insert = '(${1:string \\\$key}, ${2:[mixed \\\$var]}, ${3:[int \\\$ttl]}, ${4:array \\\$values}, ${5:[mixed \\\$unused]})';},
	{display = 'apc_bin_dump'; insert = '(${1:[array \\\$files]}, ${2:[array \\\$user_vars]})';},
	{display = 'apc_bin_dumpfile'; insert = '(${1:array \\\$files}, ${2:array \\\$user_vars}, ${3:string \\\$filename}, ${4:[int \\\$flags]}, ${5:[resource \\\$context]})';},
	{display = 'apc_bin_load'; insert = '(${1:string \\\$data}, ${2:[int \\\$flags]})';},
	{display = 'apc_bin_loadfile'; insert = '(${1:string \\\$filename}, ${2:[resource \\\$context]}, ${3:[int \\\$flags]})';},
	{display = 'apc_cache_info'; insert = '(${1:[string \\\$cache_type]}, ${2:[bool \\\$limited = false]})';},
	{display = 'apc_cas'; insert = '(${1:string \\\$key}, ${2:int \\\$old}, ${3:int \\\$new})';},
	{display = 'apc_clear_cache'; insert = '(${1:[string \\\$cache_type]})';},
	{display = 'apc_compile_file'; insert = '(${1:string \\\$filename}, ${2:[bool \\\$atomic = true]})';},
	{display = 'apc_dec'; insert = '(${1:string \\\$key}, ${2:[int \\\$step = 1]}, ${3:[bool \\\$success]})';},
	{display = 'apc_define_constants'; insert = '(${1:string \\\$key}, ${2:array \\\$constants}, ${3:[bool \\\$case_sensitive = true]})';},
	{display = 'apc_delete'; insert = '(${1:string \\\$key})';},
	{display = 'apc_delete_file'; insert = '(${1:mixed \\\$keys})';},
	{display = 'apc_exists'; insert = '(${1:mixed \\\$keys})';},
	{display = 'apc_fetch'; insert = '(${1:mixed \\\$key}, ${2:[bool \\\$success]})';},
	{display = 'apc_inc'; insert = '(${1:string \\\$key}, ${2:[int \\\$step = 1]}, ${3:[bool \\\$success]})';},
	{display = 'apc_load_constants'; insert = '(${1:string \\\$key}, ${2:[bool \\\$case_sensitive = true]})';},
	{display = 'apc_sma_info'; insert = '(${1:[bool \\\$limited = false]})';},
	{display = 'apc_store'; insert = '(${1:string \\\$key}, ${2:mixed \\\$var}, ${3:[int \\\$ttl]}, ${4:array \\\$values}, ${5:[mixed \\\$unused]})';},
	{display = 'array'; insert = '(${1:[mixed ...]})';},
	{display = 'array_change_key_case'; insert = '(${1:array \\\$input}, ${2:[int \\\$case = CASE_LOWER]})';},
	{display = 'array_chunk'; insert = '(${1:array \\\$input}, ${2:int \\\$size}, ${3:[bool \\\$preserve_keys = false]})';},
	{display = 'array_combine'; insert = '(${1:array \\\$keys}, ${2:array \\\$values})';},
	{display = 'array_count_values'; insert = '(${1:array \\\$input})';},
	{display = 'array_diff'; insert = '(${1:array \\\$array1}, ${2:array \\\$array2}, ${3:[array ...]})';},
	{display = 'array_diff_assoc'; insert = '(${1:array \\\$array1}, ${2:array \\\$array2}, ${3:[array ...]})';},
	{display = 'array_diff_key'; insert = '(${1:array \\\$array1}, ${2:array \\\$array2}, ${3:[array ...]})';},
	{display = 'array_diff_uassoc'; insert = '(${1:array \\\$array1}, ${2:array \\\$array2}, ${3:[array ...]}, ${4:callback \\\$key_compare_func})';},
	{display = 'array_diff_ukey'; insert = '(${1:array \\\$array1}, ${2:array \\\$array2}, ${3:[array ...]}, ${4:callback \\\$key_compare_func})';},
	{display = 'array_fill'; insert = '(${1:int \\\$start_index}, ${2:int \\\$num}, ${3:mixed \\\$value})';},
	{display = 'array_fill_keys'; insert = '(${1:array \\\$keys}, ${2:mixed \\\$value})';},
	{display = 'array_filter'; insert = '(${1:array \\\$input}, ${2:[callback \\\$callback]})';},
	{display = 'array_flip'; insert = '(${1:array \\\$trans})';},
	{display = 'array_intersect'; insert = '(${1:array \\\$array1}, ${2:array \\\$array2}, ${3:[array ...]})';},
	{display = 'array_intersect_assoc'; insert = '(${1:array \\\$array1}, ${2:array \\\$array2}, ${3:[array ...]})';},
	{display = 'array_intersect_key'; insert = '(${1:array \\\$array1}, ${2:array \\\$array2}, ${3:[array ...]})';},
	{display = 'array_intersect_uassoc'; insert = '(${1:array \\\$array1}, ${2:array \\\$array2}, ${3:[array ...]}, ${4:callback \\\$key_compare_func})';},
	{display = 'array_intersect_ukey'; insert = '(${1:array \\\$array1}, ${2:array \\\$array2}, ${3:[array ...]}, ${4:callback \\\$key_compare_func})';},
	{display = 'array_key_exists'; insert = '(${1:mixed \\\$key}, ${2:array \\\$search})';},
	{display = 'array_keys'; insert = '(${1:array \\\$input}, ${2:[mixed \\\$search_value]}, ${3:[bool \\\$strict = false]})';},
	{display = 'array_map'; insert = '(${1:callback \\\$callback}, ${2:array \\\$arr1}, ${3:[array ...]})';},
	{display = 'array_merge'; insert = '(${1:array \\\$array1}, ${2:[array ...]})';},
	{display = 'array_merge_recursive'; insert = '(${1:array \\\$array1}, ${2:[array ...]})';},
	{display = 'array_multisort'; insert = '(${1:array \\\$arr}, ${2:[mixed \\\$arg = SORT_REGULAR]}, ${3:[mixed ...]})';},
	{display = 'array_pad'; insert = '(${1:array \\\$input}, ${2:int \\\$pad_size}, ${3:mixed \\\$pad_value})';},
	{display = 'array_pop'; insert = '(${1:array \\\$array})';},
	{display = 'array_product'; insert = '(${1:array \\\$array})';},
	{display = 'array_push'; insert = '(${1:array \\\$array}, ${2:mixed \\\$var}, ${3:[mixed ...]})';},
	{display = 'array_rand'; insert = '(${1:array \\\$input}, ${2:[int \\\$num_req = 1]})';},
	{display = 'array_reduce'; insert = '(${1:array \\\$input}, ${2:callback \\\$function}, ${3:[mixed \\\$initial]})';},
	{display = 'array_replace'; insert = '(${1:array \\\$array}, ${2:array \\\$array1}, ${3:[array ...]})';},
	{display = 'array_replace_recursive'; insert = '(${1:array \\\$array}, ${2:array \\\$array1}, ${3:[array ...]})';},
	{display = 'array_reverse'; insert = '(${1:array \\\$array}, ${2:[bool \\\$preserve_keys = false]})';},
	{display = 'array_search'; insert = '(${1:mixed \\\$needle}, ${2:array \\\$haystack}, ${3:[bool \\\$strict = false]})';},
	{display = 'array_shift'; insert = '(${1:array \\\$array})';},
	{display = 'array_slice'; insert = '(${1:array \\\$array}, ${2:int \\\$offset}, ${3:[int \\\$length]}, ${4:[bool \\\$preserve_keys = false]})';},
	{display = 'array_splice'; insert = '(${1:array \\\$input}, ${2:int \\\$offset}, ${3:[int \\\$length]}, ${4:[mixed \\\$replacement]})';},
	{display = 'array_sum'; insert = '(${1:array \\\$array})';},
	{display = 'array_udiff'; insert = '(${1:array \\\$array1}, ${2:array \\\$array2}, ${3:[array ...]}, ${4:callback \\\$data_compare_func})';},
	{display = 'array_udiff_assoc'; insert = '(${1:array \\\$array1}, ${2:array \\\$array2}, ${3:[array ...]}, ${4:callback \\\$data_compare_func})';},
	{display = 'array_udiff_uassoc'; insert = '(${1:array \\\$array1}, ${2:array \\\$array2}, ${3:[array ...]}, ${4:callback \\\$data_compare_func}, ${5:callback \\\$key_compare_func})';},
	{display = 'array_uintersect'; insert = '(${1:array \\\$array1}, ${2:array \\\$array2}, ${3:[array ...]}, ${4:callback \\\$data_compare_func})';},
	{display = 'array_uintersect_assoc'; insert = '(${1:array \\\$array1}, ${2:array \\\$array2}, ${3:[array ...]}, ${4:callback \\\$data_compare_func})';},
	{display = 'array_uintersect_uassoc'; insert = '(${1:array \\\$array1}, ${2:array \\\$array2}, ${3:[array ...]}, ${4:callback \\\$data_compare_func}, ${5:callback \\\$key_compare_func})';},
	{display = 'array_unique'; insert = '(${1:array \\\$array}, ${2:[int \\\$sort_flags = SORT_STRING]})';},
	{display = 'array_unshift'; insert = '(${1:array \\\$array}, ${2:mixed \\\$var}, ${3:[mixed ...]})';},
	{display = 'array_values'; insert = '(${1:array \\\$input})';},
	{display = 'array_walk'; insert = '(${1:array \\\$array}, ${2:callback \\\$funcname}, ${3:[mixed \\\$userdata]})';},
	{display = 'array_walk_recursive'; insert = '(${1:array \\\$input}, ${2:callback \\\$funcname}, ${3:[mixed \\\$userdata]})';},
	{display = 'arsort'; insert = '(${1:array \\\$array}, ${2:[int \\\$sort_flags = SORT_REGULAR]})';},
	{display = 'asin'; insert = '(${1:float \\\$arg})';},
	{display = 'asinh'; insert = '(${1:float \\\$arg})';},
	{display = 'asort'; insert = '(${1:array \\\$array}, ${2:[int \\\$sort_flags = SORT_REGULAR]})';},
	{display = 'assert'; insert = '(${1:mixed \\\$assertion})';},
	{display = 'assert_options'; insert = '(${1:int \\\$what}, ${2:[mixed \\\$value]})';},
	{display = 'atan'; insert = '(${1:float \\\$arg})';},
	{display = 'atan2'; insert = '(${1:float \\\$y}, ${2:float \\\$x})';},
	{display = 'atanh'; insert = '(${1:float \\\$arg})';},
	{display = 'base64_decode'; insert = '(${1:string \\\$data}, ${2:[bool \\\$strict = false]})';},
	{display = 'base64_encode'; insert = '(${1:string \\\$data})';},
	{display = 'base_convert'; insert = '(${1:string \\\$number}, ${2:int \\\$frombase}, ${3:int \\\$tobase})';},
	{display = 'basename'; insert = '(${1:string \\\$path}, ${2:[string \\\$suffix]})';},
	{display = 'bcadd'; insert = '(${1:string \\\$left_operand}, ${2:string \\\$right_operand}, ${3:[int \\\$scale]})';},
	{display = 'bccomp'; insert = '(${1:string \\\$left_operand}, ${2:string \\\$right_operand}, ${3:[int \\\$scale]})';},
	{display = 'bcdiv'; insert = '(${1:string \\\$left_operand}, ${2:string \\\$right_operand}, ${3:[int \\\$scale]})';},
	{display = 'bcmod'; insert = '(${1:string \\\$left_operand}, ${2:string \\\$modulus})';},
	{display = 'bcmul'; insert = '(${1:string \\\$left_operand}, ${2:string \\\$right_operand}, ${3:[int \\\$scale]})';},
	{display = 'bcpow'; insert = '(${1:string \\\$left_operand}, ${2:string \\\$right_operand}, ${3:[int \\\$scale]})';},
	{display = 'bcpowmod'; insert = '(${1:string \\\$left_operand}, ${2:string \\\$right_operand}, ${3:string \\\$modulus}, ${4:[int \\\$scale]})';},
	{display = 'bcscale'; insert = '(${1:int \\\$scale})';},
	{display = 'bcsqrt'; insert = '(${1:string \\\$operand}, ${2:[int \\\$scale]})';},
	{display = 'bcsub'; insert = '(${1:string \\\$left_operand}, ${2:string \\\$right_operand}, ${3:[int \\\$scale]})';},
	{display = 'bin2hex'; insert = '(${1:string \\\$str})';},
	{display = 'bind_textdomain_codeset'; insert = '(${1:string \\\$domain}, ${2:string \\\$codeset})';},
	{display = 'bindec'; insert = '(${1:string \\\$binary_string})';},
	{display = 'bindtextdomain'; insert = '(${1:string \\\$domain}, ${2:string \\\$directory})';},
	{display = 'bson_decode'; insert = '(${1:string \\\$bson})';},
	{display = 'bson_encode'; insert = '(${1:mixed \\\$anything})';},
	{display = 'bzclose'; insert = '(${1:resource \\\$bz})';},
	{display = 'bzcompress'; insert = '(${1:string \\\$source}, ${2:[int \\\$blocksize = 4]}, ${3:[int \\\$workfactor]})';},
	{display = 'bzdecompress'; insert = '(${1:string \\\$source}, ${2:[int \\\$small]})';},
	{display = 'bzerrno'; insert = '(${1:resource \\\$bz})';},
	{display = 'bzerror'; insert = '(${1:resource \\\$bz})';},
	{display = 'bzerrstr'; insert = '(${1:resource \\\$bz})';},
	{display = 'bzflush'; insert = '(${1:resource \\\$bz})';},
	{display = 'bzopen'; insert = '(${1:string \\\$filename}, ${2:string \\\$mode})';},
	{display = 'bzread'; insert = '(${1:resource \\\$bz}, ${2:[int \\\$length = 1024]})';},
	{display = 'bzwrite'; insert = '(${1:resource \\\$bz}, ${2:string \\\$data}, ${3:[int \\\$length]})';},
	{display = 'cal_days_in_month'; insert = '(${1:int \\\$calendar}, ${2:int \\\$month}, ${3:int \\\$year})';},
	{display = 'cal_from_jd'; insert = '(${1:int \\\$jd}, ${2:int \\\$calendar})';},
	{display = 'cal_info'; insert = '(${1:[int \\\$calendar = -1]})';},
	{display = 'cal_to_jd'; insert = '(${1:int \\\$calendar}, ${2:int \\\$month}, ${3:int \\\$day}, ${4:int \\\$year})';},
	{display = 'call_user_func'; insert = '(${1:callback \\\$function}, ${2:[mixed \\\$parameter]}, ${3:[mixed ...]})';},
	{display = 'call_user_func_array'; insert = '(${1:callback \\\$function}, ${2:array \\\$param_arr})';},
	{display = 'call_user_method'; insert = '(${1:string \\\$method_name}, ${2:object \\\$obj}, ${3:[mixed \\\$parameter]}, ${4:[mixed ...]})';},
	{display = 'call_user_method_array'; insert = '(${1:string \\\$method_name}, ${2:object \\\$obj}, ${3:array \\\$params})';},
	{display = 'ceil'; insert = '(${1:float \\\$value})';},
	{display = 'chdir'; insert = '(${1:string \\\$directory})';},
	{display = 'checkdate'; insert = '(${1:int \\\$month}, ${2:int \\\$day}, ${3:int \\\$year})';},
	{display = 'checkdnsrr'; insert = '(${1:string \\\$host}, ${2:[string \\\$type = \"MX\"]})';},
	{display = 'chgrp'; insert = '(${1:string \\\$filename}, ${2:mixed \\\$group})';},
	{display = 'chmod'; insert = '(${1:string \\\$filename}, ${2:int \\\$mode})';},
	{display = 'chop'; insert = '()';},
	{display = 'chown'; insert = '(${1:string \\\$filename}, ${2:mixed \\\$user})';},
	{display = 'chr'; insert = '(${1:int \\\$ascii})';},
	{display = 'chroot'; insert = '(${1:string \\\$directory})';},
	{display = 'chunk_split'; insert = '(${1:string \\\$body}, ${2:[int \\\$chunklen = 76]}, ${3:[string \\\$end = \"\\\\r\\\\n\"]})';},
	{display = 'class_alias'; insert = '(${1:[string \\\$original]}, ${2:[string \\\$alias]})';},
	{display = 'class_exists'; insert = '(${1:string \\\$class_name}, ${2:[bool \\\$autoload = true]})';},
	{display = 'class_implements'; insert = '(${1:mixed \\\$class}, ${2:[bool \\\$autoload = true]})';},
	{display = 'class_parents'; insert = '(${1:mixed \\\$class}, ${2:[bool \\\$autoload = true]})';},
	{display = 'clearstatcache'; insert = '(${1:[bool \\\$clear_realpath_cache = false]}, ${2:[string \\\$filename]})';},
	{display = 'closedir'; insert = '(${1:[resource \\\$dir_handle]})';},
	{display = 'closelog'; insert = '()';},
	{display = 'collator_asort'; insert = '(${1:array \\\$arr}, ${2:[int \\\$sort_flag]}, ${3:Collator \\\$coll})';},
	{display = 'collator_compare'; insert = '(${1:string \\\$str1}, ${2:string \\\$str2}, ${3:Collator \\\$coll})';},
	{display = 'collator_create'; insert = '(${1:string \\\$locale})';},
	{display = 'collator_get_attribute'; insert = '(${1:int \\\$attr}, ${2:Collator \\\$coll})';},
	{display = 'collator_get_error_code'; insert = '(${1:Collator \\\$coll})';},
	{display = 'collator_get_error_message'; insert = '(${1:Collator \\\$coll})';},
	{display = 'collator_get_locale'; insert = '(${1:int \\\$type}, ${2:Collator \\\$coll})';},
	{display = 'collator_get_sort_key'; insert = '(${1:string \\\$str}, ${2:Collator \\\$coll})';},
	{display = 'collator_get_strength'; insert = '(${1:Collator \\\$coll})';},
	{display = 'collator_set_attribute'; insert = '(${1:int \\\$attr}, ${2:int \\\$val}, ${3:Collator \\\$coll})';},
	{display = 'collator_set_strength'; insert = '(${1:int \\\$strength}, ${2:Collator \\\$coll})';},
	{display = 'collator_sort'; insert = '(${1:array \\\$arr}, ${2:[int \\\$sort_flag]}, ${3:Collator \\\$coll})';},
	{display = 'collator_sort_with_sort_keys'; insert = '(${1:array \\\$arr}, ${2:Collator \\\$coll})';},
	{display = 'com_addref'; insert = '()';},
	{display = 'com_create_guid'; insert = '()';},
	{display = 'com_event_sink'; insert = '(${1:variant \\\$comobject}, ${2:object \\\$sinkobject}, ${3:[mixed \\\$sinkinterface]})';},
	{display = 'com_get'; insert = '()';},
	{display = 'com_get_active_object'; insert = '(${1:string \\\$progid}, ${2:[int \\\$code_page]})';},
	{display = 'com_invoke'; insert = '()';},
	{display = 'com_isenum'; insert = '(${1:variant \\\$com_module})';},
	{display = 'com_load'; insert = '()';},
	{display = 'com_load_typelib'; insert = '(${1:string \\\$typelib_name}, ${2:[bool \\\$case_insensitive = true]})';},
	{display = 'com_message_pump'; insert = '(${1:[int \\\$timeoutms]})';},
	{display = 'com_print_typeinfo'; insert = '(${1:object \\\$comobject}, ${2:[string \\\$dispinterface]}, ${3:[bool \\\$wantsink = false]})';},
	{display = 'com_propget'; insert = '()';},
	{display = 'com_propput'; insert = '()';},
	{display = 'com_propset'; insert = '()';},
	{display = 'com_release'; insert = '()';},
	{display = 'com_set'; insert = '()';},
	{display = 'compact'; insert = '(${1:mixed \\\$varname}, ${2:[mixed ...]})';},
	{display = 'connection_aborted'; insert = '()';},
	{display = 'connection_status'; insert = '()';},
	{display = 'connection_timeout'; insert = '()';},
	{display = 'constant'; insert = '(${1:string \\\$name})';},
	{display = 'convert_cyr_string'; insert = '(${1:string \\\$str}, ${2:string \\\$from}, ${3:string \\\$to})';},
	{display = 'convert_uudecode'; insert = '(${1:string \\\$data})';},
	{display = 'convert_uuencode'; insert = '(${1:string \\\$data})';},
	{display = 'copy'; insert = '(${1:string \\\$source}, ${2:string \\\$dest}, ${3:[resource \\\$context]})';},
	{display = 'cos'; insert = '(${1:float \\\$arg})';},
	{display = 'cosh'; insert = '(${1:float \\\$arg})';},
	{display = 'count'; insert = '(${1:mixed \\\$var}, ${2:[int \\\$mode = COUNT_NORMAL]})';},
	{display = 'count_chars'; insert = '(${1:string \\\$string}, ${2:[int \\\$mode]})';},
	{display = 'crc32'; insert = '(${1:string \\\$str})';},
	{display = 'create_function'; insert = '(${1:string \\\$args}, ${2:string \\\$code})';},
	{display = 'crypt'; insert = '(${1:string \\\$str}, ${2:[string \\\$salt]})';},
	{display = 'ctype_alnum'; insert = '(${1:string \\\$text})';},
	{display = 'ctype_alpha'; insert = '(${1:string \\\$text})';},
	{display = 'ctype_cntrl'; insert = '(${1:string \\\$text})';},
	{display = 'ctype_digit'; insert = '(${1:string \\\$text})';},
	{display = 'ctype_graph'; insert = '(${1:string \\\$text})';},
	{display = 'ctype_lower'; insert = '(${1:string \\\$text})';},
	{display = 'ctype_print'; insert = '(${1:string \\\$text})';},
	{display = 'ctype_punct'; insert = '(${1:string \\\$text})';},
	{display = 'ctype_space'; insert = '(${1:string \\\$text})';},
	{display = 'ctype_upper'; insert = '(${1:string \\\$text})';},
	{display = 'ctype_xdigit'; insert = '(${1:string \\\$text})';},
	{display = 'curl_close'; insert = '(${1:resource \\\$ch})';},
	{display = 'curl_copy_handle'; insert = '(${1:resource \\\$ch})';},
	{display = 'curl_errno'; insert = '(${1:resource \\\$ch})';},
	{display = 'curl_error'; insert = '(${1:resource \\\$ch})';},
	{display = 'curl_exec'; insert = '(${1:resource \\\$ch})';},
	{display = 'curl_getinfo'; insert = '(${1:resource \\\$ch}, ${2:[int \\\$opt]})';},
	{display = 'curl_init'; insert = '(${1:[string \\\$url]})';},
	{display = 'curl_multi_add_handle'; insert = '(${1:resource \\\$mh}, ${2:resource \\\$ch})';},
	{display = 'curl_multi_close'; insert = '(${1:resource \\\$mh})';},
	{display = 'curl_multi_exec'; insert = '(${1:resource \\\$mh}, ${2:int \\\$still_running})';},
	{display = 'curl_multi_getcontent'; insert = '(${1:resource \\\$ch})';},
	{display = 'curl_multi_info_read'; insert = '(${1:resource \\\$mh}, ${2:[int \\\$msgs_in_queue]})';},
	{display = 'curl_multi_init'; insert = '()';},
	{display = 'curl_multi_remove_handle'; insert = '(${1:resource \\\$mh}, ${2:resource \\\$ch})';},
	{display = 'curl_multi_select'; insert = '(${1:resource \\\$mh}, ${2:[float \\\$timeout = 1.0]})';},
	{display = 'curl_setopt'; insert = '(${1:resource \\\$ch}, ${2:int \\\$option}, ${3:mixed \\\$value})';},
	{display = 'curl_setopt_array'; insert = '(${1:resource \\\$ch}, ${2:array \\\$options})';},
	{display = 'curl_version'; insert = '(${1:[int \\\$age = CURLVERSION_NOW]})';},
	{display = 'current'; insert = '(${1:array \\\$array})';},
	{display = 'date'; insert = '(${1:string \\\$format}, ${2:[int \\\$timestamp = time()]})';},
	{display = 'date_add'; insert = '()';},
	{display = 'date_create'; insert = '()';},
	{display = 'date_create_from_format'; insert = '()';},
	{display = 'date_date_set'; insert = '()';},
	{display = 'date_default_timezone_get'; insert = '()';},
	{display = 'date_default_timezone_set'; insert = '(${1:string \\\$timezone_identifier})';},
	{display = 'date_diff'; insert = '()';},
	{display = 'date_format'; insert = '()';},
	{display = 'date_get_last_errors'; insert = '()';},
	{display = 'date_interval_create_from_date_string'; insert = '()';},
	{display = 'date_interval_format'; insert = '()';},
	{display = 'date_isodate_set'; insert = '()';},
	{display = 'date_modify'; insert = '()';},
	{display = 'date_offset_get'; insert = '()';},
	{display = 'date_parse'; insert = '(${1:string \\\$date})';},
	{display = 'date_parse_from_format'; insert = '(${1:string \\\$format}, ${2:string \\\$date})';},
	{display = 'date_sub'; insert = '()';},
	{display = 'date_sun_info'; insert = '(${1:int \\\$time}, ${2:float \\\$latitude}, ${3:float \\\$longitude})';},
	{display = 'date_sunrise'; insert = '(${1:int \\\$timestamp}, ${2:[int \\\$format = SUNFUNCS_RET_STRING]}, ${3:[float \\\$latitude = ini_get(\"date.default_latitude\")]}, ${4:[float \\\$longitude = ini_get(\"date.default_longitude\")]}, ${5:[float \\\$zenith = ini_get(\"date.sunrise_zenith\")]}, ${6:[float \\\$gmt_offset]})';},
	{display = 'date_sunset'; insert = '(${1:int \\\$timestamp}, ${2:[int \\\$format = SUNFUNCS_RET_STRING]}, ${3:[float \\\$latitude = ini_get(\"date.default_latitude\")]}, ${4:[float \\\$longitude = ini_get(\"date.default_longitude\")]}, ${5:[float \\\$zenith = ini_get(\"date.sunset_zenith\")]}, ${6:[float \\\$gmt_offset]})';},
	{display = 'date_time_set'; insert = '()';},
	{display = 'date_timestamp_get'; insert = '()';},
	{display = 'date_timestamp_set'; insert = '()';},
	{display = 'date_timezone_get'; insert = '()';},
	{display = 'date_timezone_set'; insert = '()';},
	{display = 'datefmt_create'; insert = '(${1:string \\\$locale}, ${2:int \\\$datetype}, ${3:int \\\$timetype}, ${4:[string \\\$timezone]}, ${5:[int \\\$calendar]}, ${6:[string \\\$pattern]})';},
	{display = 'datefmt_format'; insert = '(${1:mixed \\\$value}, ${2:IntlDateFormatter \\\$fmt})';},
	{display = 'datefmt_get_calendar'; insert = '(${1:IntlDateFormatter \\\$fmt})';},
	{display = 'datefmt_get_datetype'; insert = '(${1:IntlDateFormatter \\\$fmt})';},
	{display = 'datefmt_get_error_code'; insert = '(${1:IntlDateFormatter \\\$fmt})';},
	{display = 'datefmt_get_error_message'; insert = '(${1:IntlDateFormatter \\\$fmt})';},
	{display = 'datefmt_get_locale'; insert = '(${1:[int \\\$which]}, ${2:IntlDateFormatter \\\$fmt})';},
	{display = 'datefmt_get_pattern'; insert = '(${1:IntlDateFormatter \\\$fmt})';},
	{display = 'datefmt_get_timetype'; insert = '(${1:IntlDateFormatter \\\$fmt})';},
	{display = 'datefmt_get_timezone_id'; insert = '(${1:IntlDateFormatter \\\$fmt})';},
	{display = 'datefmt_is_lenient'; insert = '(${1:IntlDateFormatter \\\$fmt})';},
	{display = 'datefmt_localtime'; insert = '(${1:string \\\$value}, ${2:[int \\\$position]}, ${3:IntlDateFormatter \\\$fmt})';},
	{display = 'datefmt_parse'; insert = '(${1:string \\\$value}, ${2:[int \\\$position]}, ${3:IntlDateFormatter \\\$fmt})';},
	{display = 'datefmt_set_calendar'; insert = '(${1:int \\\$which}, ${2:IntlDateFormatter \\\$fmt})';},
	{display = 'datefmt_set_lenient'; insert = '(${1:bool \\\$lenient}, ${2:IntlDateFormatter \\\$fmt})';},
	{display = 'datefmt_set_pattern'; insert = '(${1:string \\\$pattern}, ${2:IntlDateFormatter \\\$fmt})';},
	{display = 'datefmt_set_timezone_id'; insert = '(${1:string \\\$zone}, ${2:IntlDateFormatter \\\$fmt})';},
	{display = 'dba_close'; insert = '(${1:resource \\\$handle})';},
	{display = 'dba_delete'; insert = '(${1:string \\\$key}, ${2:resource \\\$handle})';},
	{display = 'dba_exists'; insert = '(${1:string \\\$key}, ${2:resource \\\$handle})';},
	{display = 'dba_fetch'; insert = '(${1:string \\\$key}, ${2:resource \\\$handle}, ${3:int \\\$skip})';},
	{display = 'dba_firstkey'; insert = '(${1:resource \\\$handle})';},
	{display = 'dba_handlers'; insert = '(${1:[bool \\\$full_info = false]})';},
	{display = 'dba_insert'; insert = '(${1:string \\\$key}, ${2:string \\\$value}, ${3:resource \\\$handle})';},
	{display = 'dba_key_split'; insert = '(${1:mixed \\\$key})';},
	{display = 'dba_list'; insert = '()';},
	{display = 'dba_nextkey'; insert = '(${1:resource \\\$handle})';},
	{display = 'dba_open'; insert = '(${1:string \\\$path}, ${2:string \\\$mode}, ${3:[string \\\$handler]}, ${4:[mixed ...]})';},
	{display = 'dba_optimize'; insert = '(${1:resource \\\$handle})';},
	{display = 'dba_popen'; insert = '(${1:string \\\$path}, ${2:string \\\$mode}, ${3:[string \\\$handler]}, ${4:[mixed ...]})';},
	{display = 'dba_replace'; insert = '(${1:string \\\$key}, ${2:string \\\$value}, ${3:resource \\\$handle})';},
	{display = 'dba_sync'; insert = '(${1:resource \\\$handle})';},
	{display = 'dbx_close'; insert = '(${1:object \\\$link_identifier})';},
	{display = 'dbx_compare'; insert = '(${1:array \\\$row_a}, ${2:array \\\$row_b}, ${3:string \\\$column_key}, ${4:[int \\\$flags = DBX_CMP_ASC | DBX_CMP_NATIVE]})';},
	{display = 'dbx_connect'; insert = '(${1:mixed \\\$module}, ${2:string \\\$host}, ${3:string \\\$database}, ${4:string \\\$username}, ${5:string \\\$password}, ${6:[int \\\$persistent]})';},
	{display = 'dbx_error'; insert = '(${1:object \\\$link_identifier})';},
	{display = 'dbx_escape_string'; insert = '(${1:object \\\$link_identifier}, ${2:string \\\$text})';},
	{display = 'dbx_fetch_row'; insert = '(${1:object \\\$result_identifier})';},
	{display = 'dbx_query'; insert = '(${1:object \\\$link_identifier}, ${2:string \\\$sql_statement}, ${3:[int \\\$flags]})';},
	{display = 'dbx_sort'; insert = '(${1:object \\\$result}, ${2:string \\\$user_compare_function})';},
	{display = 'dcgettext'; insert = '(${1:string \\\$domain}, ${2:string \\\$message}, ${3:int \\\$category})';},
	{display = 'dcngettext'; insert = '(${1:string \\\$domain}, ${2:string \\\$msgid1}, ${3:string \\\$msgid2}, ${4:int \\\$n}, ${5:int \\\$category})';},
	{display = 'deaggregate'; insert = '(${1:object \\\$object}, ${2:[string \\\$class_name]})';},
	{display = 'debug_backtrace'; insert = '(${1:[int \\\$options = DEBUG_BACKTRACE_PROVIDE_OBJECT]}, ${2:[int \\\$limit]})';},
	{display = 'debug_print_backtrace'; insert = '(${1:[int \\\$options]}, ${2:[int \\\$limit]})';},
	{display = 'debug_zval_dump'; insert = '(${1:mixed \\\$variable})';},
	{display = 'decbin'; insert = '(${1:int \\\$number})';},
	{display = 'dechex'; insert = '(${1:int \\\$number})';},
	{display = 'decoct'; insert = '(${1:int \\\$number})';},
	{display = 'define'; insert = '(${1:string \\\$name}, ${2:mixed \\\$value}, ${3:[bool \\\$case_insensitive = false]})';},
	{display = 'define_syslog_variables'; insert = '()';},
	{display = 'defined'; insert = '(${1:string \\\$name})';},
	{display = 'deg2rad'; insert = '(${1:float \\\$number})';},
	{display = 'delete'; insert = '()';},
	{display = 'dgettext'; insert = '(${1:string \\\$domain}, ${2:string \\\$message})';},
	{display = 'die'; insert = '()';},
	{display = 'dir'; insert = '()';},
	{display = 'dirname'; insert = '(${1:string \\\$path})';},
	{display = 'disk_free_space'; insert = '(${1:string \\\$directory})';},
	{display = 'disk_total_space'; insert = '(${1:string \\\$directory})';},
	{display = 'diskfreespace'; insert = '()';},
	{display = 'dl'; insert = '(${1:string \\\$library})';},
	{display = 'dngettext'; insert = '(${1:string \\\$domain}, ${2:string \\\$msgid1}, ${3:string \\\$msgid2}, ${4:int \\\$n})';},
	{display = 'dns_check_record'; insert = '()';},
	{display = 'dns_get_mx'; insert = '()';},
	{display = 'dns_get_record'; insert = '(${1:string \\\$hostname}, ${2:[int \\\$type = DNS_ANY]}, ${3:[array \\\$authns]}, ${4:[array \\\$addtl]})';},
	{display = 'dom_import_simplexml'; insert = '(${1:SimpleXMLElement \\\$node})';},
	{display = 'domxml_new_doc'; insert = '(${1:string \\\$version})';},
	{display = 'domxml_open_file'; insert = '(${1:string \\\$filename}, ${2:[int \\\$mode = DOMXML_LOAD_PARSING]}, ${3:[array \\\$error]})';},
	{display = 'domxml_open_mem'; insert = '(${1:string \\\$str}, ${2:[int \\\$mode]}, ${3:[array \\\$error]})';},
	{display = 'domxml_version'; insert = '()';},
	{display = 'domxml_xmltree'; insert = '(${1:string \\\$str})';},
	{display = 'domxml_xslt_stylesheet'; insert = '(${1:string \\\$xsl_buf})';},
	{display = 'domxml_xslt_stylesheet_doc'; insert = '(${1:DomDocument \\\$xsl_doc})';},
	{display = 'domxml_xslt_stylesheet_file'; insert = '(${1:string \\\$xsl_file})';},
	{display = 'domxml_xslt_version'; insert = '()';},
	{display = 'dotnet_load'; insert = '(${1:string \\\$assembly_name}, ${2:[string \\\$datatype_name]}, ${3:[int \\\$codepage]})';},
	{display = 'doubleval'; insert = '()';},
	{display = 'each'; insert = '(${1:array \\\$array})';},
	{display = 'easter_date'; insert = '(${1:[int \\\$year]})';},
	{display = 'easter_days'; insert = '(${1:[int \\\$year]}, ${2:[int \\\$method = CAL_EASTER_DEFAULT]})';},
	{display = 'echo'; insert = '(${1:string \\\$arg1}, ${2:[string ...]})';},
	{display = 'empty'; insert = '(${1:mixed \\\$var})';},
	{display = 'enchant_broker_describe'; insert = '(${1:resource \\\$broker})';},
	{display = 'enchant_broker_dict_exists'; insert = '(${1:resource \\\$broker}, ${2:string \\\$tag})';},
	{display = 'enchant_broker_free'; insert = '(${1:resource \\\$broker})';},
	{display = 'enchant_broker_free_dict'; insert = '(${1:resource \\\$dict})';},
	{display = 'enchant_broker_get_error'; insert = '(${1:resource \\\$broker})';},
	{display = 'enchant_broker_init'; insert = '()';},
	{display = 'enchant_broker_list_dicts'; insert = '(${1:resource \\\$broker})';},
	{display = 'enchant_broker_request_dict'; insert = '(${1:resource \\\$broker}, ${2:string \\\$tag})';},
	{display = 'enchant_broker_request_pwl_dict'; insert = '(${1:resource \\\$broker}, ${2:string \\\$filename})';},
	{display = 'enchant_broker_set_ordering'; insert = '(${1:resource \\\$broker}, ${2:string \\\$tag}, ${3:string \\\$ordering})';},
	{display = 'enchant_dict_add_to_personal'; insert = '(${1:resource \\\$dict}, ${2:string \\\$word})';},
	{display = 'enchant_dict_add_to_session'; insert = '(${1:resource \\\$dict}, ${2:string \\\$word})';},
	{display = 'enchant_dict_check'; insert = '(${1:resource \\\$dict}, ${2:string \\\$word})';},
	{display = 'enchant_dict_describe'; insert = '(${1:resource \\\$dict})';},
	{display = 'enchant_dict_get_error'; insert = '(${1:resource \\\$dict})';},
	{display = 'enchant_dict_is_in_session'; insert = '(${1:resource \\\$dict}, ${2:string \\\$word})';},
	{display = 'enchant_dict_quick_check'; insert = '(${1:resource \\\$dict}, ${2:string \\\$word}, ${3:[array \\\$suggestions]})';},
	{display = 'enchant_dict_store_replacement'; insert = '(${1:resource \\\$dict}, ${2:string \\\$mis}, ${3:string \\\$cor})';},
	{display = 'enchant_dict_suggest'; insert = '(${1:resource \\\$dict}, ${2:string \\\$word})';},
	{display = 'end'; insert = '(${1:array \\\$array})';},
	{display = 'ereg'; insert = '(${1:string \\\$pattern}, ${2:string \\\$string}, ${3:[array \\\$regs]})';},
	{display = 'ereg_replace'; insert = '(${1:string \\\$pattern}, ${2:string \\\$replacement}, ${3:string \\\$string})';},
	{display = 'eregi'; insert = '(${1:string \\\$pattern}, ${2:string \\\$string}, ${3:[array \\\$regs]})';},
	{display = 'eregi_replace'; insert = '(${1:string \\\$pattern}, ${2:string \\\$replacement}, ${3:string \\\$string})';},
	{display = 'error_get_last'; insert = '()';},
	{display = 'error_log'; insert = '(${1:string \\\$message}, ${2:[int \\\$message_type]}, ${3:[string \\\$destination]}, ${4:[string \\\$extra_headers]})';},
	{display = 'error_reporting'; insert = '(${1:[int \\\$level]})';},
	{display = 'escapeshellarg'; insert = '(${1:string \\\$arg})';},
	{display = 'escapeshellcmd'; insert = '(${1:string \\\$command})';},
	{display = 'eval'; insert = '(${1:string \\\$code_str})';},
	{display = 'exec'; insert = '(${1:string \\\$command}, ${2:[array \\\$output]}, ${3:[int \\\$return_var]})';},
	{display = 'exif_imagetype'; insert = '(${1:string \\\$filename})';},
	{display = 'exif_read_data'; insert = '(${1:string \\\$filename}, ${2:[string \\\$sections]}, ${3:[bool \\\$arrays = false]}, ${4:[bool \\\$thumbnail = false]})';},
	{display = 'exif_tagname'; insert = '(${1:int \\\$index})';},
	{display = 'exif_thumbnail'; insert = '(${1:string \\\$filename}, ${2:[int \\\$width]}, ${3:[int \\\$height]}, ${4:[int \\\$imagetype]})';},
	{display = 'exit'; insert = '(${1:int \\\$status})';},
	{display = 'exp'; insert = '(${1:float \\\$arg})';},
	{display = 'explode'; insert = '(${1:string \\\$delimiter}, ${2:string \\\$string}, ${3:[int \\\$limit]})';},
	{display = 'expm1'; insert = '(${1:float \\\$arg})';},
	{display = 'extension_loaded'; insert = '(${1:string \\\$name})';},
	{display = 'extract'; insert = '(${1:array \\\$var_array}, ${2:[int \\\$extract_type = EXTR_OVERWRITE]}, ${3:[string \\\$prefix]})';},
	{display = 'ezmlm_hash'; insert = '(${1:string \\\$addr})';},
	{display = 'fastcgi_finish_request'; insert='()';},
	{display = 'fclose'; insert = '(${1:resource \\\$handle})';},
	{display = 'feof'; insert = '(${1:resource \\\$handle})';},
	{display = 'fflush'; insert = '(${1:resource \\\$handle})';},
	{display = 'fgetc'; insert = '(${1:resource \\\$handle})';},
	{display = 'fgetcsv'; insert = '(${1:resource \\\$handle}, ${2:[int \\\$length]}, ${3:[string \\\$delimiter = \',\']}, ${4:[string \\\$enclosure = \'\"\']}, ${5:[string \\\$escape = \'\\\\\\\\\']})';},
	{display = 'fgets'; insert = '(${1:resource \\\$handle}, ${2:[int \\\$length]})';},
	{display = 'fgetss'; insert = '(${1:resource \\\$handle}, ${2:[int \\\$length]}, ${3:[string \\\$allowable_tags]})';},
	{display = 'file'; insert = '(${1:string \\\$filename}, ${2:[int \\\$flags]}, ${3:[resource \\\$context]})';},
	{display = 'file_exists'; insert = '(${1:string \\\$filename})';},
	{display = 'file_get_contents'; insert = '(${1:string \\\$filename}, ${2:[bool \\\$use_include_path = false]}, ${3:[resource \\\$context]}, ${4:[int \\\$offset = -1]}, ${5:[int \\\$maxlen]})';},
	{display = 'file_put_contents'; insert = '(${1:string \\\$filename}, ${2:mixed \\\$data}, ${3:[int \\\$flags]}, ${4:[resource \\\$context]})';},
	{display = 'fileatime'; insert = '(${1:string \\\$filename})';},
	{display = 'filectime'; insert = '(${1:string \\\$filename})';},
	{display = 'filegroup'; insert = '(${1:string \\\$filename})';},
	{display = 'fileinode'; insert = '(${1:string \\\$filename})';},
	{display = 'filemtime'; insert = '(${1:string \\\$filename})';},
	{display = 'fileowner'; insert = '(${1:string \\\$filename})';},
	{display = 'fileperms'; insert = '(${1:string \\\$filename})';},
	{display = 'filesize'; insert = '(${1:string \\\$filename})';},
	{display = 'filetype'; insert = '(${1:string \\\$filename})';},
	{display = 'filter_has_var'; insert = '(${1:int \\\$type}, ${2:string \\\$variable_name})';},
	{display = 'filter_id'; insert = '(${1:string \\\$filtername})';},
	{display = 'filter_input'; insert = '(${1:int \\\$type}, ${2:string \\\$variable_name}, ${3:[int \\\$filter = FILTER_DEFAULT]}, ${4:[mixed \\\$options]})';},
	{display = 'filter_input_array'; insert = '(${1:int \\\$type}, ${2:[mixed \\\$definition]})';},
	{display = 'filter_list'; insert = '()';},
	{display = 'filter_var'; insert = '(${1:mixed \\\$variable}, ${2:[int \\\$filter = FILTER_DEFAULT]}, ${3:[mixed \\\$options]})';},
	{display = 'filter_var_array'; insert = '(${1:array \\\$data}, ${2:[mixed \\\$definition]})';},
	{display = 'finfo'; insert = '(${1:[int \\\$options = FILEINFO_NONE]}, ${2:[string \\\$magic_file]})';},
	{display = 'finfo_buffer'; insert = '(${1:resource \\\$finfo}, ${2:string \\\$string}, ${3:[int \\\$options = FILEINFO_NONE]}, ${4:[resource \\\$context]})';},
	{display = 'finfo_close'; insert = '(${1:resource \\\$finfo})';},
	{display = 'finfo_file'; insert = '(${1:resource \\\$finfo}, ${2:string \\\$file_name}, ${3:[int \\\$options = FILEINFO_NONE]}, ${4:[resource \\\$context]})';},
	{display = 'finfo_open'; insert = '(${1:[int \\\$options = FILEINFO_NONE]}, ${2:[string \\\$magic_file]})';},
	{display = 'finfo_set_flags'; insert = '(${1:resource \\\$finfo}, ${2:int \\\$options})';},
	{display = 'floatval'; insert = '(${1:mixed \\\$var})';},
	{display = 'flock'; insert = '(${1:resource \\\$handle}, ${2:int \\\$operation}, ${3:[int \\\$wouldblock]})';},
	{display = 'floor'; insert = '(${1:float \\\$value})';},
	{display = 'flush'; insert = '()';},
	{display = 'fmod'; insert = '(${1:float \\\$x}, ${2:float \\\$y})';},
	{display = 'fnmatch'; insert = '(${1:string \\\$pattern}, ${2:string \\\$string}, ${3:[int \\\$flags]})';},
	{display = 'fopen'; insert = '(${1:string \\\$filename}, ${2:string \\\$mode}, ${3:[bool \\\$use_include_path = false]}, ${4:[resource \\\$context]})';},
	{display = 'forward_static_call'; insert = '(${1:callback \\\$function}, ${2:[mixed \\\$parameter]}, ${3:[mixed ...]})';},
	{display = 'forward_static_call_array'; insert = '(${1:callback \\\$function}, ${2:array \\\$parameters})';},
	{display = 'fpassthru'; insert = '(${1:resource \\\$handle})';},
	{display = 'fprintf'; insert = '(${1:resource \\\$handle}, ${2:string \\\$format}, ${3:[mixed \\\$args]}, ${4:[mixed ...]})';},
	{display = 'fputcsv'; insert = '(${1:resource \\\$handle}, ${2:array \\\$fields}, ${3:[string \\\$delimiter = \',\']}, ${4:[string \\\$enclosure = \'\"\']})';},
	{display = 'fputs'; insert = '()';},
	{display = 'fread'; insert = '(${1:resource \\\$handle}, ${2:int \\\$length})';},
	{display = 'fscanf'; insert = '(${1:resource \\\$handle}, ${2:string \\\$format}, ${3:[mixed ...]})';},
	{display = 'fseek'; insert = '(${1:resource \\\$handle}, ${2:int \\\$offset}, ${3:[int \\\$whence = SEEK_SET]})';},
	{display = 'fsockopen'; insert = '(${1:string \\\$hostname}, ${2:[int \\\$port = -1]}, ${3:[int \\\$errno]}, ${4:[string \\\$errstr]}, ${5:[float \\\$timeout = ini_get(\"default_socket_timeout\")]})';},
	{display = 'fstat'; insert = '(${1:resource \\\$handle})';},
	{display = 'ftell'; insert = '(${1:resource \\\$handle})';},
	{display = 'ftok'; insert = '(${1:string \\\$pathname}, ${2:string \\\$proj})';},
	{display = 'ftp_alloc'; insert = '(${1:resource \\\$ftp_stream}, ${2:int \\\$filesize}, ${3:[string \\\$result]})';},
	{display = 'ftp_cdup'; insert = '(${1:resource \\\$ftp_stream})';},
	{display = 'ftp_chdir'; insert = '(${1:resource \\\$ftp_stream}, ${2:string \\\$directory})';},
	{display = 'ftp_chmod'; insert = '(${1:resource \\\$ftp_stream}, ${2:int \\\$mode}, ${3:string \\\$filename})';},
	{display = 'ftp_close'; insert = '(${1:resource \\\$ftp_stream})';},
	{display = 'ftp_connect'; insert = '(${1:string \\\$host}, ${2:[int \\\$port = 21]}, ${3:[int \\\$timeout = 90]})';},
	{display = 'ftp_delete'; insert = '(${1:resource \\\$ftp_stream}, ${2:string \\\$path})';},
	{display = 'ftp_exec'; insert = '(${1:resource \\\$ftp_stream}, ${2:string \\\$command})';},
	{display = 'ftp_fget'; insert = '(${1:resource \\\$ftp_stream}, ${2:resource \\\$handle}, ${3:string \\\$remote_file}, ${4:int \\\$mode}, ${5:[int \\\$resumepos]})';},
	{display = 'ftp_fput'; insert = '(${1:resource \\\$ftp_stream}, ${2:string \\\$remote_file}, ${3:resource \\\$handle}, ${4:int \\\$mode}, ${5:[int \\\$startpos]})';},
	{display = 'ftp_get'; insert = '(${1:resource \\\$ftp_stream}, ${2:string \\\$local_file}, ${3:string \\\$remote_file}, ${4:int \\\$mode}, ${5:[int \\\$resumepos]})';},
	{display = 'ftp_get_option'; insert = '(${1:resource \\\$ftp_stream}, ${2:int \\\$option})';},
	{display = 'ftp_login'; insert = '(${1:resource \\\$ftp_stream}, ${2:string \\\$username}, ${3:string \\\$password})';},
	{display = 'ftp_mdtm'; insert = '(${1:resource \\\$ftp_stream}, ${2:string \\\$remote_file})';},
	{display = 'ftp_mkdir'; insert = '(${1:resource \\\$ftp_stream}, ${2:string \\\$directory})';},
	{display = 'ftp_nb_continue'; insert = '(${1:resource \\\$ftp_stream})';},
	{display = 'ftp_nb_fget'; insert = '(${1:resource \\\$ftp_stream}, ${2:resource \\\$handle}, ${3:string \\\$remote_file}, ${4:int \\\$mode}, ${5:[int \\\$resumepos]})';},
	{display = 'ftp_nb_fput'; insert = '(${1:resource \\\$ftp_stream}, ${2:string \\\$remote_file}, ${3:resource \\\$handle}, ${4:int \\\$mode}, ${5:[int \\\$startpos]})';},
	{display = 'ftp_nb_get'; insert = '(${1:resource \\\$ftp_stream}, ${2:string \\\$local_file}, ${3:string \\\$remote_file}, ${4:int \\\$mode}, ${5:[int \\\$resumepos]})';},
	{display = 'ftp_nb_put'; insert = '(${1:resource \\\$ftp_stream}, ${2:string \\\$remote_file}, ${3:string \\\$local_file}, ${4:int \\\$mode}, ${5:[int \\\$startpos]})';},
	{display = 'ftp_nlist'; insert = '(${1:resource \\\$ftp_stream}, ${2:string \\\$directory})';},
	{display = 'ftp_pasv'; insert = '(${1:resource \\\$ftp_stream}, ${2:bool \\\$pasv})';},
	{display = 'ftp_put'; insert = '(${1:resource \\\$ftp_stream}, ${2:string \\\$remote_file}, ${3:string \\\$local_file}, ${4:int \\\$mode}, ${5:[int \\\$startpos]})';},
	{display = 'ftp_pwd'; insert = '(${1:resource \\\$ftp_stream})';},
	{display = 'ftp_quit'; insert = '()';},
	{display = 'ftp_raw'; insert = '(${1:resource \\\$ftp_stream}, ${2:string \\\$command})';},
	{display = 'ftp_rawlist'; insert = '(${1:resource \\\$ftp_stream}, ${2:string \\\$directory}, ${3:[bool \\\$recursive = false]})';},
	{display = 'ftp_rename'; insert = '(${1:resource \\\$ftp_stream}, ${2:string \\\$oldname}, ${3:string \\\$newname})';},
	{display = 'ftp_rmdir'; insert = '(${1:resource \\\$ftp_stream}, ${2:string \\\$directory})';},
	{display = 'ftp_set_option'; insert = '(${1:resource \\\$ftp_stream}, ${2:int \\\$option}, ${3:mixed \\\$value})';},
	{display = 'ftp_site'; insert = '(${1:resource \\\$ftp_stream}, ${2:string \\\$command})';},
	{display = 'ftp_size'; insert = '(${1:resource \\\$ftp_stream}, ${2:string \\\$remote_file})';},
	{display = 'ftp_ssl_connect'; insert = '(${1:string \\\$host}, ${2:[int \\\$port = 21]}, ${3:[int \\\$timeout = 90]})';},
	{display = 'ftp_systype'; insert = '(${1:resource \\\$ftp_stream})';},
	{display = 'ftruncate'; insert = '(${1:resource \\\$handle}, ${2:int \\\$size})';},
	{display = 'func_get_arg'; insert = '(${1:int \\\$arg_num})';},
	{display = 'func_get_args'; insert = '()';},
	{display = 'func_num_args'; insert = '()';},
	{display = 'function_exists'; insert = '(${1:string \\\$function_name})';},
	{display = 'fwrite'; insert = '(${1:resource \\\$handle}, ${2:string \\\$string}, ${3:[int \\\$length]})';},
	{display = 'gc_collect_cycles'; insert = '()';},
	{display = 'gc_disable'; insert = '()';},
	{display = 'gc_enable'; insert = '()';},
	{display = 'gc_enabled'; insert = '()';},
	{display = 'gd_info'; insert = '()';},
	{display = 'get_browser'; insert = '(${1:[string \\\$user_agent]}, ${2:[bool \\\$return_array = false]})';},
	{display = 'get_called_class'; insert = '()';},
	{display = 'get_cfg_var'; insert = '(${1:string \\\$option})';},
	{display = 'get_class'; insert = '(${1:[object \\\$object]})';},
	{display = 'get_class_methods'; insert = '(${1:mixed \\\$class_name})';},
	{display = 'get_class_vars'; insert = '(${1:string \\\$class_name})';},
	{display = 'get_current_user'; insert = '()';},
	{display = 'get_declared_classes'; insert = '()';},
	{display = 'get_declared_interfaces'; insert = '()';},
	{display = 'get_defined_constants'; insert = '(${1:[bool \\\$categorize = false]})';},
	{display = 'get_defined_functions'; insert = '()';},
	{display = 'get_defined_vars'; insert = '()';},
	{display = 'get_extension_funcs'; insert = '(${1:string \\\$module_name})';},
	{display = 'get_headers'; insert = '(${1:string \\\$url}, ${2:[int \\\$format]})';},
	{display = 'get_html_translation_table'; insert = '(${1:[int \\\$table = HTML_SPECIALCHARS]}, ${2:[int \\\$quote_style = ENT_COMPAT]}, ${3:[string \\\$charset_hint]})';},
	{display = 'get_include_path'; insert = '()';},
	{display = 'get_included_files'; insert = '()';},
	{display = 'get_loaded_extensions'; insert = '(${1:[bool \\\$zend_extensions = false]})';},
	{display = 'get_magic_quotes_gpc'; insert = '()';},
	{display = 'get_magic_quotes_runtime'; insert = '()';},
	{display = 'get_meta_tags'; insert = '(${1:string \\\$filename}, ${2:[bool \\\$use_include_path = false]})';},
	{display = 'get_object_vars'; insert = '(${1:object \\\$object})';},
	{display = 'get_parent_class'; insert = '(${1:[mixed \\\$object]})';},
	{display = 'get_required_files'; insert = '()';},
	{display = 'get_resource_type'; insert = '(${1:resource \\\$handle})';},
	{display = 'getallheaders'; insert = '()';},
	{display = 'getcwd'; insert = '()';},
	{display = 'getdate'; insert = '(${1:[int \\\$timestamp = time()]})';},
	{display = 'getenv'; insert = '(${1:string \\\$varname})';},
	{display = 'gethostbyaddr'; insert = '(${1:string \\\$ip_address})';},
	{display = 'gethostbyname'; insert = '(${1:string \\\$hostname})';},
	{display = 'gethostbynamel'; insert = '(${1:string \\\$hostname})';},
	{display = 'gethostname'; insert = '()';},
	{display = 'getimagesize'; insert = '(${1:string \\\$filename}, ${2:[array \\\$imageinfo]})';},
	{display = 'getlastmod'; insert = '()';},
	{display = 'getmxrr'; insert = '(${1:string \\\$hostname}, ${2:array \\\$mxhosts}, ${3:[array \\\$weight]})';},
	{display = 'getmygid'; insert = '()';},
	{display = 'getmyinode'; insert = '()';},
	{display = 'getmypid'; insert = '()';},
	{display = 'getmyuid'; insert = '()';},
	{display = 'getopt'; insert = '(${1:string \\\$options}, ${2:[array \\\$longopts]})';},
	{display = 'getprotobyname'; insert = '(${1:string \\\$name})';},
	{display = 'getprotobynumber'; insert = '(${1:int \\\$number})';},
	{display = 'getrandmax'; insert = '()';},
	{display = 'getrusage'; insert = '(${1:[int \\\$who]})';},
	{display = 'getservbyname'; insert = '(${1:string \\\$service}, ${2:string \\\$protocol})';},
	{display = 'getservbyport'; insert = '(${1:int \\\$port}, ${2:string \\\$protocol})';},
	{display = 'gettext'; insert = '(${1:string \\\$message})';},
	{display = 'gettimeofday'; insert = '(${1:[bool \\\$return_float = false]})';},
	{display = 'gettype'; insert = '(${1:mixed \\\$var})';},
	{display = 'glob'; insert = '(${1:string \\\$pattern}, ${2:[int \\\$flags]})';},
	{display = 'gmdate'; insert = '(${1:string \\\$format}, ${2:[int \\\$timestamp = time()]})';},
	{display = 'gmmktime'; insert = '(${1:[int \\\$hour = gmdate(\"H\")]}, ${2:[int \\\$minute = gmdate(\"i\")]}, ${3:[int \\\$second = gmdate(\"s\")]}, ${4:[int \\\$month = gmdate(\"n\")]}, ${5:[int \\\$day = gmdate(\"j\")]}, ${6:[int \\\$year = gmdate(\"Y\")]}, ${7:[int \\\$is_dst = -1]})';},
	{display = 'gmp_abs'; insert = '(${1:resource \\\$a})';},
	{display = 'gmp_add'; insert = '(${1:resource \\\$a}, ${2:resource \\\$b})';},
	{display = 'gmp_and'; insert = '(${1:resource \\\$a}, ${2:resource \\\$b})';},
	{display = 'gmp_clrbit'; insert = '(${1:resource \\\$a}, ${2:int \\\$index})';},
	{display = 'gmp_cmp'; insert = '(${1:resource \\\$a}, ${2:resource \\\$b})';},
	{display = 'gmp_com'; insert = '(${1:resource \\\$a})';},
	{display = 'gmp_div'; insert = '()';},
	{display = 'gmp_div_q'; insert = '(${1:resource \\\$a}, ${2:resource \\\$b}, ${3:[int \\\$round = GMP_ROUND_ZERO]})';},
	{display = 'gmp_div_qr'; insert = '(${1:resource \\\$n}, ${2:resource \\\$d}, ${3:[int \\\$round = GMP_ROUND_ZERO]})';},
	{display = 'gmp_div_r'; insert = '(${1:resource \\\$n}, ${2:resource \\\$d}, ${3:[int \\\$round = GMP_ROUND_ZERO]})';},
	{display = 'gmp_divexact'; insert = '(${1:resource \\\$n}, ${2:resource \\\$d})';},
	{display = 'gmp_fact'; insert = '(${1:mixed \\\$a})';},
	{display = 'gmp_gcd'; insert = '(${1:resource \\\$a}, ${2:resource \\\$b})';},
	{display = 'gmp_gcdext'; insert = '(${1:resource \\\$a}, ${2:resource \\\$b})';},
	{display = 'gmp_hamdist'; insert = '(${1:resource \\\$a}, ${2:resource \\\$b})';},
	{display = 'gmp_init'; insert = '(${1:mixed \\\$number}, ${2:[int \\\$base]})';},
	{display = 'gmp_intval'; insert = '(${1:resource \\\$gmpnumber})';},
	{display = 'gmp_invert'; insert = '(${1:resource \\\$a}, ${2:resource \\\$b})';},
	{display = 'gmp_jacobi'; insert = '(${1:resource \\\$a}, ${2:resource \\\$p})';},
	{display = 'gmp_legendre'; insert = '(${1:resource \\\$a}, ${2:resource \\\$p})';},
	{display = 'gmp_mod'; insert = '(${1:resource \\\$n}, ${2:resource \\\$d})';},
	{display = 'gmp_mul'; insert = '(${1:resource \\\$a}, ${2:resource \\\$b})';},
	{display = 'gmp_neg'; insert = '(${1:resource \\\$a})';},
	{display = 'gmp_nextprime'; insert = '(${1:int \\\$a})';},
	{display = 'gmp_or'; insert = '(${1:resource \\\$a}, ${2:resource \\\$b})';},
	{display = 'gmp_perfect_square'; insert = '(${1:resource \\\$a})';},
	{display = 'gmp_popcount'; insert = '(${1:resource \\\$a})';},
	{display = 'gmp_pow'; insert = '(${1:resource \\\$base}, ${2:int \\\$exp})';},
	{display = 'gmp_powm'; insert = '(${1:resource \\\$base}, ${2:resource \\\$exp}, ${3:resource \\\$mod})';},
	{display = 'gmp_prob_prime'; insert = '(${1:resource \\\$a}, ${2:[int \\\$reps = 10]})';},
	{display = 'gmp_random'; insert = '(${1:[int \\\$limiter = 20]})';},
	{display = 'gmp_scan0'; insert = '(${1:resource \\\$a}, ${2:int \\\$start})';},
	{display = 'gmp_scan1'; insert = '(${1:resource \\\$a}, ${2:int \\\$start})';},
	{display = 'gmp_setbit'; insert = '(${1:resource \\\$a}, ${2:int \\\$index}, ${3:[bool \\\$set_clear = true]})';},
	{display = 'gmp_sign'; insert = '(${1:resource \\\$a})';},
	{display = 'gmp_sqrt'; insert = '(${1:resource \\\$a})';},
	{display = 'gmp_sqrtrem'; insert = '(${1:resource \\\$a})';},
	{display = 'gmp_strval'; insert = '(${1:resource \\\$gmpnumber}, ${2:[int \\\$base = 10]})';},
	{display = 'gmp_sub'; insert = '(${1:resource \\\$a}, ${2:resource \\\$b})';},
	{display = 'gmp_testbit'; insert = '(${1:resource \\\$a}, ${2:int \\\$index})';},
	{display = 'gmp_xor'; insert = '(${1:resource \\\$a}, ${2:resource \\\$b})';},
	{display = 'gmstrftime'; insert = '(${1:string \\\$format}, ${2:[int \\\$timestamp = time()]})';},
	{display = 'grapheme_extract'; insert = '(${1:string \\\$haystack}, ${2:int \\\$size}, ${3:[int \\\$extract_type]}, ${4:[int \\\$start]}, ${5:[int \\\$next]})';},
	{display = 'grapheme_stripos'; insert = '(${1:string \\\$haystack}, ${2:string \\\$needle}, ${3:[int \\\$offset]})';},
	{display = 'grapheme_stristr'; insert = '(${1:string \\\$haystack}, ${2:string \\\$needle}, ${3:[bool \\\$before_needle = false]})';},
	{display = 'grapheme_strlen'; insert = '(${1:string \\\$input})';},
	{display = 'grapheme_strpos'; insert = '(${1:string \\\$haystack}, ${2:string \\\$needle}, ${3:[int \\\$offset]})';},
	{display = 'grapheme_strripos'; insert = '(${1:string \\\$haystack}, ${2:string \\\$needle}, ${3:[int \\\$offset]})';},
	{display = 'grapheme_strrpos'; insert = '(${1:string \\\$haystack}, ${2:string \\\$needle}, ${3:[int \\\$offset]})';},
	{display = 'grapheme_strstr'; insert = '(${1:string \\\$haystack}, ${2:string \\\$needle}, ${3:[bool \\\$before_needle = false]})';},
	{display = 'grapheme_substr'; insert = '(${1:string \\\$string}, ${2:int \\\$start}, ${3:[int \\\$length]})';},
	{display = 'gzclose'; insert = '(${1:resource \\\$zp})';},
	{display = 'gzcompress'; insert = '(${1:string \\\$data}, ${2:[int \\\$level = -1]})';},
	{display = 'gzdecode'; insert = '(${1:string \\\$data}, ${2:[int \\\$length]})';},
	{display = 'gzdeflate'; insert = '(${1:string \\\$data}, ${2:[int \\\$level = -1]})';},
	{display = 'gzencode'; insert = '(${1:string \\\$data}, ${2:[int \\\$level = -1]}, ${3:[int \\\$encoding_mode = FORCE_GZIP]})';},
	{display = 'gzeof'; insert = '(${1:resource \\\$zp})';},
	{display = 'gzfile'; insert = '(${1:string \\\$filename}, ${2:[int \\\$use_include_path]})';},
	{display = 'gzgetc'; insert = '(${1:resource \\\$zp})';},
	{display = 'gzgets'; insert = '(${1:resource \\\$zp}, ${2:int \\\$length})';},
	{display = 'gzgetss'; insert = '(${1:resource \\\$zp}, ${2:int \\\$length}, ${3:[string \\\$allowable_tags]})';},
	{display = 'gzinflate'; insert = '(${1:string \\\$data}, ${2:[int \\\$length]})';},
	{display = 'gzopen'; insert = '(${1:string \\\$filename}, ${2:string \\\$mode}, ${3:[int \\\$use_include_path]})';},
	{display = 'gzpassthru'; insert = '(${1:resource \\\$zp})';},
	{display = 'gzputs'; insert = '()';},
	{display = 'gzread'; insert = '(${1:resource \\\$zp}, ${2:int \\\$length})';},
	{display = 'gzrewind'; insert = '(${1:resource \\\$zp})';},
	{display = 'gzseek'; insert = '(${1:resource \\\$zp}, ${2:int \\\$offset}, ${3:[int \\\$whence = SEEK_SET]})';},
	{display = 'gztell'; insert = '(${1:resource \\\$zp})';},
	{display = 'gzuncompress'; insert = '(${1:string \\\$data}, ${2:[int \\\$length]})';},
	{display = 'gzwrite'; insert = '(${1:resource \\\$zp}, ${2:string \\\$string}, ${3:[int \\\$length]})';},
	{display = 'hash'; insert = '(${1:string \\\$algo}, ${2:string \\\$data}, ${3:[bool \\\$raw_output = false]})';},
	{display = 'hash_algos'; insert = '()';},
	{display = 'hash_copy'; insert = '(${1:resource \\\$context})';},
	{display = 'hash_file'; insert = '(${1:string \\\$algo}, ${2:string \\\$filename}, ${3:[bool \\\$raw_output = false]})';},
	{display = 'hash_final'; insert = '(${1:resource \\\$context}, ${2:[bool \\\$raw_output = false]})';},
	{display = 'hash_hmac'; insert = '(${1:string \\\$algo}, ${2:string \\\$data}, ${3:string \\\$key}, ${4:[bool \\\$raw_output = false]})';},
	{display = 'hash_hmac_file'; insert = '(${1:string \\\$algo}, ${2:string \\\$filename}, ${3:string \\\$key}, ${4:[bool \\\$raw_output = false]})';},
	{display = 'hash_init'; insert = '(${1:string \\\$algo}, ${2:[int \\\$options]}, ${3:[string \\\$key]})';},
	{display = 'hash_update'; insert = '(${1:resource \\\$context}, ${2:string \\\$data})';},
	{display = 'hash_update_file'; insert = '(${1:[resource \\\$context]}, ${2:string \\\$filename})';},
	{display = 'hash_update_stream'; insert = '(${1:resource \\\$context}, ${2:resource \\\$handle}, ${3:[int \\\$length = -1]})';},
	{display = 'header'; insert = '(${1:string \\\$string}, ${2:[bool \\\$replace = true]}, ${3:[int \\\$http_response_code]})';},
	{display = 'header_remove'; insert = '(${1:[string \\\$name]})';},
	{display = 'headers_list'; insert = '()';},
	{display = 'headers_sent'; insert = '(${1:[string \\\$file]}, ${2:[int \\\$line]})';},
	{display = 'hebrev'; insert = '(${1:string \\\$hebrew_text}, ${2:[int \\\$max_chars_per_line]})';},
	{display = 'hebrevc'; insert = '(${1:string \\\$hebrew_text}, ${2:[int \\\$max_chars_per_line]})';},
	{display = 'hexdec'; insert = '(${1:string \\\$hex_string})';},
	{display = 'highlight_file'; insert = '(${1:string \\\$filename}, ${2:[bool \\\$return = false]})';},
	{display = 'highlight_string'; insert = '(${1:string \\\$str}, ${2:[bool \\\$return = false]})';},
	{display = 'html_entity_decode'; insert = '(${1:string \\\$string}, ${2:[int \\\$quote_style = ENT_COMPAT]}, ${3:[string \\\$charset = \'UTF-8\']})';},
	{display = 'htmlentities'; insert = '(${1:string \\\$string}, ${2:[int \\\$flags = ENT_COMPAT]}, ${3:[string \\\$charset]}, ${4:[bool \\\$double_encode = true]})';},
	{display = 'htmlspecialchars'; insert = '(${1:string \\\$string}, ${2:[int \\\$flags = ENT_COMPAT]}, ${3:[string \\\$charset]}, ${4:[bool \\\$double_encode = true]})';},
	{display = 'htmlspecialchars_decode'; insert = '(${1:string \\\$string}, ${2:[int \\\$quote_style = ENT_COMPAT]})';},
	{display = 'http_build_cookie'; insert = '(${1:array \\\$cookie})';},
	{display = 'http_build_query'; insert = '(${1:mixed \\\$query_data}, ${2:[string \\\$numeric_prefix]}, ${3:[string \\\$arg_separator]}, ${4:[int \\\$enc_type]})';},
	{display = 'http_build_str'; insert = '(${1:array \\\$query}, ${2:[string \\\$prefix]}, ${3:[string \\\$arg_separator = ini_get(\"arg_separator.output\")]})';},
	{display = 'http_build_url'; insert = '(${1:[mixed \\\$url]}, ${2:[mixed \\\$parts]}, ${3:[int \\\$flags = HTTP_URL_REPLACE]}, ${4:[array \\\$new_url]})';},
	{display = 'http_cache_etag'; insert = '(${1:[string \\\$etag]})';},
	{display = 'http_cache_last_modified'; insert = '(${1:[int \\\$timestamp_or_expires]})';},
	{display = 'http_chunked_decode'; insert = '(${1:string \\\$encoded})';},
	{display = 'http_date'; insert = '(${1:[int \\\$timestamp]})';},
	{display = 'http_deflate'; insert = '(${1:string \\\$data}, ${2:[int \\\$flags]})';},
	{display = 'http_get'; insert = '(${1:string \\\$url}, ${2:[array \\\$options]}, ${3:[array \\\$info]})';},
	{display = 'http_get_request_body'; insert = '()';},
	{display = 'http_get_request_body_stream'; insert = '()';},
	{display = 'http_get_request_headers'; insert = '()';},
	{display = 'http_head'; insert = '(${1:string \\\$url}, ${2:[array \\\$options]}, ${3:[array \\\$info]})';},
	{display = 'http_inflate'; insert = '(${1:string \\\$data})';},
	{display = 'http_match_etag'; insert = '(${1:string \\\$etag}, ${2:[bool \\\$for_range = false]})';},
	{display = 'http_match_modified'; insert = '(${1:[int \\\$timestamp = -1]}, ${2:[bool \\\$for_range = false]})';},
	{display = 'http_match_request_header'; insert = '(${1:string \\\$header}, ${2:string \\\$value}, ${3:[bool \\\$match_case = false]})';},
	{display = 'http_negotiate_charset'; insert = '(${1:array \\\$supported}, ${2:[array \\\$result]})';},
	{display = 'http_negotiate_content_type'; insert = '(${1:array \\\$supported}, ${2:[array \\\$result]})';},
	{display = 'http_negotiate_language'; insert = '(${1:array \\\$supported}, ${2:[array \\\$result]})';},
	{display = 'http_parse_cookie'; insert = '(${1:string \\\$cookie}, ${2:[int \\\$flags]}, ${3:[array \\\$allowed_extras]})';},
	{display = 'http_parse_headers'; insert = '(${1:string \\\$header})';},
	{display = 'http_parse_message'; insert = '(${1:string \\\$message})';},
	{display = 'http_parse_params'; insert = '(${1:string \\\$param}, ${2:[int \\\$flags = HTTP_PARAMS_DEFAULT]})';},
	{display = 'http_persistent_handles_clean'; insert = '(${1:[string \\\$ident]})';},
	{display = 'http_persistent_handles_count'; insert = '()';},
	{display = 'http_persistent_handles_ident'; insert = '(${1:[string \\\$ident]})';},
	{display = 'http_post_data'; insert = '(${1:string \\\$url}, ${2:string \\\$data}, ${3:[array \\\$options]}, ${4:[array \\\$info]})';},
	{display = 'http_post_fields'; insert = '(${1:string \\\$url}, ${2:array \\\$data}, ${3:[array \\\$files]}, ${4:[array \\\$options]}, ${5:[array \\\$info]})';},
	{display = 'http_put_data'; insert = '(${1:string \\\$url}, ${2:string \\\$data}, ${3:[array \\\$options]}, ${4:[array \\\$info]})';},
	{display = 'http_put_file'; insert = '(${1:string \\\$url}, ${2:string \\\$file}, ${3:[array \\\$options]}, ${4:[array \\\$info]})';},
	{display = 'http_put_stream'; insert = '(${1:string \\\$url}, ${2:resource \\\$stream}, ${3:[array \\\$options]}, ${4:[array \\\$info]})';},
	{display = 'http_redirect'; insert = '(${1:[string \\\$url]}, ${2:[array \\\$params]}, ${3:[bool \\\$session = false]}, ${4:[int \\\$status]})';},
	{display = 'http_request'; insert = '(${1:int \\\$method}, ${2:string \\\$url}, ${3:[string \\\$body]}, ${4:[array \\\$options]}, ${5:[array \\\$info]})';},
	{display = 'http_request_body_encode'; insert = '(${1:array \\\$fields}, ${2:array \\\$files})';},
	{display = 'http_request_method_exists'; insert = '(${1:mixed \\\$method})';},
	{display = 'http_request_method_name'; insert = '(${1:int \\\$method})';},
	{display = 'http_request_method_register'; insert = '(${1:string \\\$method})';},
	{display = 'http_request_method_unregister'; insert = '(${1:mixed \\\$method})';},
	{display = 'http_send_content_disposition'; insert = '(${1:string \\\$filename}, ${2:[bool \\\$inline = false]})';},
	{display = 'http_send_content_type'; insert = '(${1:[string \\\$content_type = \"application/x-octetstream\"]})';},
	{display = 'http_send_data'; insert = '(${1:string \\\$data})';},
	{display = 'http_send_file'; insert = '(${1:string \\\$file})';},
	{display = 'http_send_last_modified'; insert = '(${1:[int \\\$timestamp = time()]})';},
	{display = 'http_send_status'; insert = '(${1:int \\\$status})';},
	{display = 'http_send_stream'; insert = '(${1:resource \\\$stream})';},
	{display = 'http_support'; insert = '(${1:[int \\\$feature]})';},
	{display = 'http_throttle'; insert = '(${1:float \\\$sec}, ${2:[int \\\$bytes = 40960]})';},
	{display = 'hypot'; insert = '(${1:float \\\$x}, ${2:float \\\$y})';},
	{display = 'ibase_add_user'; insert = '(${1:resource \\\$service_handle}, ${2:string \\\$user_name}, ${3:string \\\$password}, ${4:[string \\\$first_name]}, ${5:[string \\\$middle_name]}, ${6:[string \\\$last_name]})';},
	{display = 'ibase_affected_rows'; insert = '(${1:[resource \\\$link_identifier]})';},
	{display = 'ibase_backup'; insert = '(${1:resource \\\$service_handle}, ${2:string \\\$source_db}, ${3:string \\\$dest_file}, ${4:[int \\\$options]}, ${5:[bool \\\$verbose = false]})';},
	{display = 'ibase_blob_add'; insert = '(${1:resource \\\$blob_handle}, ${2:string \\\$data})';},
	{display = 'ibase_blob_cancel'; insert = '(${1:resource \\\$blob_handle})';},
	{display = 'ibase_blob_close'; insert = '(${1:resource \\\$blob_handle})';},
	{display = 'ibase_blob_create'; insert = '(${1:[resource \\\$link_identifier]})';},
	{display = 'ibase_blob_echo'; insert = '(${1:string \\\$blob_id}, ${2:resource \\\$link_identifier})';},
	{display = 'ibase_blob_get'; insert = '(${1:resource \\\$blob_handle}, ${2:int \\\$len})';},
	{display = 'ibase_blob_import'; insert = '(${1:resource \\\$link_identifier}, ${2:resource \\\$file_handle})';},
	{display = 'ibase_blob_info'; insert = '(${1:resource \\\$link_identifier}, ${2:string \\\$blob_id})';},
	{display = 'ibase_blob_open'; insert = '(${1:resource \\\$link_identifier}, ${2:string \\\$blob_id})';},
	{display = 'ibase_close'; insert = '(${1:[resource \\\$connection_id]})';},
	{display = 'ibase_commit'; insert = '(${1:[resource \\\$link_or_trans_identifier]})';},
	{display = 'ibase_commit_ret'; insert = '(${1:[resource \\\$link_or_trans_identifier]})';},
	{display = 'ibase_connect'; insert = '(${1:[string \\\$database]}, ${2:[string \\\$username]}, ${3:[string \\\$password]}, ${4:[string \\\$charset]}, ${5:[int \\\$buffers]}, ${6:[int \\\$dialect]}, ${7:[string \\\$role]}, ${8:[int \\\$sync]})';},
	{display = 'ibase_db_info'; insert = '(${1:resource \\\$service_handle}, ${2:string \\\$db}, ${3:int \\\$action}, ${4:[int \\\$argument]})';},
	{display = 'ibase_delete_user'; insert = '(${1:resource \\\$service_handle}, ${2:string \\\$user_name})';},
	{display = 'ibase_drop_db'; insert = '(${1:[resource \\\$connection]})';},
	{display = 'ibase_errcode'; insert = '()';},
	{display = 'ibase_errmsg'; insert = '()';},
	{display = 'ibase_execute'; insert = '(${1:resource \\\$query}, ${2:[mixed \\\$bind_arg]}, ${3:[mixed ...]})';},
	{display = 'ibase_fetch_assoc'; insert = '(${1:resource \\\$result}, ${2:[int \\\$fetch_flag]})';},
	{display = 'ibase_fetch_object'; insert = '(${1:resource \\\$result_id}, ${2:[int \\\$fetch_flag]})';},
	{display = 'ibase_fetch_row'; insert = '(${1:resource \\\$result_identifier}, ${2:[int \\\$fetch_flag]})';},
	{display = 'ibase_field_info'; insert = '(${1:resource \\\$result}, ${2:int \\\$field_number})';},
	{display = 'ibase_free_event_handler'; insert = '(${1:resource \\\$event})';},
	{display = 'ibase_free_query'; insert = '(${1:resource \\\$query})';},
	{display = 'ibase_free_result'; insert = '(${1:resource \\\$result_identifier})';},
	{display = 'ibase_gen_id'; insert = '(${1:string \\\$generator}, ${2:[int \\\$increment = 1]}, ${3:[resource \\\$link_identifier]})';},
	{display = 'ibase_maintain_db'; insert = '(${1:resource \\\$service_handle}, ${2:string \\\$db}, ${3:int \\\$action}, ${4:[int \\\$argument]})';},
	{display = 'ibase_modify_user'; insert = '(${1:resource \\\$service_handle}, ${2:string \\\$user_name}, ${3:string \\\$password}, ${4:[string \\\$first_name]}, ${5:[string \\\$middle_name]}, ${6:[string \\\$last_name]})';},
	{display = 'ibase_name_result'; insert = '(${1:resource \\\$result}, ${2:string \\\$name})';},
	{display = 'ibase_num_fields'; insert = '(${1:resource \\\$result_id})';},
	{display = 'ibase_num_params'; insert = '(${1:resource \\\$query})';},
	{display = 'ibase_param_info'; insert = '(${1:resource \\\$query}, ${2:int \\\$param_number})';},
	{display = 'ibase_pconnect'; insert = '(${1:[string \\\$database]}, ${2:[string \\\$username]}, ${3:[string \\\$password]}, ${4:[string \\\$charset]}, ${5:[int \\\$buffers]}, ${6:[int \\\$dialect]}, ${7:[string \\\$role]}, ${8:[int \\\$sync]})';},
	{display = 'ibase_prepare'; insert = '(${1:string \\\$query}, ${2:resource \\\$link_identifier}, ${3:string \\\$trans})';},
	{display = 'ibase_query'; insert = '(${1:[resource \\\$link_identifier]}, ${2:string \\\$query}, ${3:[int \\\$bind_args]})';},
	{display = 'ibase_restore'; insert = '(${1:resource \\\$service_handle}, ${2:string \\\$source_file}, ${3:string \\\$dest_db}, ${4:[int \\\$options]}, ${5:[bool \\\$verbose = false]})';},
	{display = 'ibase_rollback'; insert = '(${1:[resource \\\$link_or_trans_identifier]})';},
	{display = 'ibase_rollback_ret'; insert = '(${1:[resource \\\$link_or_trans_identifier]})';},
	{display = 'ibase_server_info'; insert = '(${1:resource \\\$service_handle}, ${2:int \\\$action})';},
	{display = 'ibase_service_attach'; insert = '(${1:string \\\$host}, ${2:string \\\$dba_username}, ${3:string \\\$dba_password})';},
	{display = 'ibase_service_detach'; insert = '(${1:resource \\\$service_handle})';},
	{display = 'ibase_set_event_handler'; insert = '(${1:callback \\\$event_handler}, ${2:string \\\$event_name1}, ${3:[string \\\$event_name2]}, ${4:[string ...]}, ${5:resource \\\$connection})';},
	{display = 'ibase_timefmt'; insert = '(${1:string \\\$format}, ${2:[int \\\$columntype = IBASE_TIMESTAMP]})';},
	{display = 'ibase_trans'; insert = '(${1:[int \\\$trans_args]}, ${2:[resource \\\$link_identifier]})';},
	{display = 'ibase_wait_event'; insert = '(${1:string \\\$event_name1}, ${2:[string \\\$event_name2]}, ${3:[string ...]}, ${4:resource \\\$connection})';},
	{display = 'iconv'; insert = '(${1:string \\\$in_charset}, ${2:string \\\$out_charset}, ${3:string \\\$str})';},
	{display = 'iconv_get_encoding'; insert = '(${1:[string \\\$type = \"all\"]})';},
	{display = 'iconv_mime_decode'; insert = '(${1:string \\\$encoded_header}, ${2:[int \\\$mode]}, ${3:[string \\\$charset = ini_get(\"iconv.internal_encoding\")]})';},
	{display = 'iconv_mime_decode_headers'; insert = '(${1:string \\\$encoded_headers}, ${2:[int \\\$mode]}, ${3:[string \\\$charset = ini_get(\"iconv.internal_encoding\")]})';},
	{display = 'iconv_mime_encode'; insert = '(${1:string \\\$field_name}, ${2:string \\\$field_value}, ${3:[array \\\$preferences]})';},
	{display = 'iconv_set_encoding'; insert = '(${1:string \\\$type}, ${2:string \\\$charset})';},
	{display = 'iconv_strlen'; insert = '(${1:string \\\$str}, ${2:[string \\\$charset = ini_get(\"iconv.internal_encoding\")]})';},
	{display = 'iconv_strpos'; insert = '(${1:string \\\$haystack}, ${2:string \\\$needle}, ${3:[int \\\$offset]}, ${4:[string \\\$charset = ini_get(\"iconv.internal_encoding\")]})';},
	{display = 'iconv_strrpos'; insert = '(${1:string \\\$haystack}, ${2:string \\\$needle}, ${3:[string \\\$charset = ini_get(\"iconv.internal_encoding\")]})';},
	{display = 'iconv_substr'; insert = '(${1:string \\\$str}, ${2:int \\\$offset}, ${3:[int \\\$length = iconv_strlen(\\\$str, \\\$charset)]}, ${4:[string \\\$charset = ini_get(\"iconv.internal_encoding\")]})';},
	{display = 'idate'; insert = '(${1:string \\\$format}, ${2:[int \\\$timestamp = time()]})';},
	{display = 'idn_to_ascii'; insert = '(${1:string \\\$domain}, ${2:[int \\\$options]})';},
	{display = 'idn_to_unicode'; insert = '()';},
	{display = 'idn_to_utf8'; insert = '(${1:string \\\$domain}, ${2:[int \\\$options]})';},
	{display = 'ignore_user_abort'; insert = '(${1:[string \\\$value]})';},
	{display = 'iis_add_server'; insert = '(${1:string \\\$path}, ${2:string \\\$comment}, ${3:string \\\$server_ip}, ${4:int \\\$port}, ${5:string \\\$host_name}, ${6:int \\\$rights}, ${7:int \\\$start_server})';},
	{display = 'iis_get_dir_security'; insert = '(${1:int \\\$server_instance}, ${2:string \\\$virtual_path})';},
	{display = 'iis_get_script_map'; insert = '(${1:int \\\$server_instance}, ${2:string \\\$virtual_path}, ${3:string \\\$script_extension})';},
	{display = 'iis_get_server_by_comment'; insert = '(${1:string \\\$comment})';},
	{display = 'iis_get_server_by_path'; insert = '(${1:string \\\$path})';},
	{display = 'iis_get_server_rights'; insert = '(${1:int \\\$server_instance}, ${2:string \\\$virtual_path})';},
	{display = 'iis_get_service_state'; insert = '(${1:string \\\$service_id})';},
	{display = 'iis_remove_server'; insert = '(${1:int \\\$server_instance})';},
	{display = 'iis_set_app_settings'; insert = '(${1:int \\\$server_instance}, ${2:string \\\$virtual_path}, ${3:string \\\$application_scope})';},
	{display = 'iis_set_dir_security'; insert = '(${1:int \\\$server_instance}, ${2:string \\\$virtual_path}, ${3:int \\\$directory_flags})';},
	{display = 'iis_set_script_map'; insert = '(${1:int \\\$server_instance}, ${2:string \\\$virtual_path}, ${3:string \\\$script_extension}, ${4:string \\\$engine_path}, ${5:int \\\$allow_scripting})';},
	{display = 'iis_set_server_rights'; insert = '(${1:int \\\$server_instance}, ${2:string \\\$virtual_path}, ${3:int \\\$directory_flags})';},
	{display = 'iis_start_server'; insert = '(${1:int \\\$server_instance})';},
	{display = 'iis_start_service'; insert = '(${1:string \\\$service_id})';},
	{display = 'iis_stop_server'; insert = '(${1:int \\\$server_instance})';},
	{display = 'iis_stop_service'; insert = '(${1:string \\\$service_id})';},
	{display = 'image2wbmp'; insert = '(${1:resource \\\$image}, ${2:[string \\\$filename]}, ${3:[int \\\$threshold]})';},
	{display = 'image_type_to_extension'; insert = '(${1:int \\\$imagetype}, ${2:[bool \\\$include_dot]})';},
	{display = 'image_type_to_mime_type'; insert = '(${1:int \\\$imagetype})';},
	{display = 'imagealphablending'; insert = '(${1:resource \\\$image}, ${2:bool \\\$blendmode})';},
	{display = 'imageantialias'; insert = '(${1:resource \\\$image}, ${2:bool \\\$enabled})';},
	{display = 'imagearc'; insert = '(${1:resource \\\$image}, ${2:int \\\$cx}, ${3:int \\\$cy}, ${4:int \\\$width}, ${5:int \\\$height}, ${6:int \\\$start}, ${7:int \\\$end}, ${8:int \\\$color})';},
	{display = 'imagechar'; insert = '(${1:resource \\\$image}, ${2:int \\\$font}, ${3:int \\\$x}, ${4:int \\\$y}, ${5:string \\\$c}, ${6:int \\\$color})';},
	{display = 'imagecharup'; insert = '(${1:resource \\\$image}, ${2:int \\\$font}, ${3:int \\\$x}, ${4:int \\\$y}, ${5:string \\\$c}, ${6:int \\\$color})';},
	{display = 'imagecolorallocate'; insert = '(${1:resource \\\$image}, ${2:int \\\$red}, ${3:int \\\$green}, ${4:int \\\$blue})';},
	{display = 'imagecolorallocatealpha'; insert = '(${1:resource \\\$image}, ${2:int \\\$red}, ${3:int \\\$green}, ${4:int \\\$blue}, ${5:int \\\$alpha})';},
	{display = 'imagecolorat'; insert = '(${1:resource \\\$image}, ${2:int \\\$x}, ${3:int \\\$y})';},
	{display = 'imagecolorclosest'; insert = '(${1:resource \\\$image}, ${2:int \\\$red}, ${3:int \\\$green}, ${4:int \\\$blue})';},
	{display = 'imagecolorclosestalpha'; insert = '(${1:resource \\\$image}, ${2:int \\\$red}, ${3:int \\\$green}, ${4:int \\\$blue}, ${5:int \\\$alpha})';},
	{display = 'imagecolorclosesthwb'; insert = '(${1:resource \\\$image}, ${2:int \\\$red}, ${3:int \\\$green}, ${4:int \\\$blue})';},
	{display = 'imagecolordeallocate'; insert = '(${1:resource \\\$image}, ${2:int \\\$color})';},
	{display = 'imagecolorexact'; insert = '(${1:resource \\\$image}, ${2:int \\\$red}, ${3:int \\\$green}, ${4:int \\\$blue})';},
	{display = 'imagecolorexactalpha'; insert = '(${1:resource \\\$image}, ${2:int \\\$red}, ${3:int \\\$green}, ${4:int \\\$blue}, ${5:int \\\$alpha})';},
	{display = 'imagecolormatch'; insert = '(${1:resource \\\$image1}, ${2:resource \\\$image2})';},
	{display = 'imagecolorresolve'; insert = '(${1:resource \\\$image}, ${2:int \\\$red}, ${3:int \\\$green}, ${4:int \\\$blue})';},
	{display = 'imagecolorresolvealpha'; insert = '(${1:resource \\\$image}, ${2:int \\\$red}, ${3:int \\\$green}, ${4:int \\\$blue}, ${5:int \\\$alpha})';},
	{display = 'imagecolorset'; insert = '(${1:resource \\\$image}, ${2:int \\\$index}, ${3:int \\\$red}, ${4:int \\\$green}, ${5:int \\\$blue}, ${6:[int \\\$alpha]})';},
	{display = 'imagecolorsforindex'; insert = '(${1:resource \\\$image}, ${2:int \\\$index})';},
	{display = 'imagecolorstotal'; insert = '(${1:resource \\\$image})';},
	{display = 'imagecolortransparent'; insert = '(${1:resource \\\$image}, ${2:[int \\\$color]})';},
	{display = 'imageconvolution'; insert = '(${1:resource \\\$image}, ${2:array \\\$matrix}, ${3:float \\\$div}, ${4:float \\\$offset})';},
	{display = 'imagecopy'; insert = '(${1:resource \\\$dst_im}, ${2:resource \\\$src_im}, ${3:int \\\$dst_x}, ${4:int \\\$dst_y}, ${5:int \\\$src_x}, ${6:int \\\$src_y}, ${7:int \\\$src_w}, ${8:int \\\$src_h})';},
	{display = 'imagecopymerge'; insert = '(${1:resource \\\$dst_im}, ${2:resource \\\$src_im}, ${3:int \\\$dst_x}, ${4:int \\\$dst_y}, ${5:int \\\$src_x}, ${6:int \\\$src_y}, ${7:int \\\$src_w}, ${8:int \\\$src_h}, ${9:int \\\$pct})';},
	{display = 'imagecopymergegray'; insert = '(${1:resource \\\$dst_im}, ${2:resource \\\$src_im}, ${3:int \\\$dst_x}, ${4:int \\\$dst_y}, ${5:int \\\$src_x}, ${6:int \\\$src_y}, ${7:int \\\$src_w}, ${8:int \\\$src_h}, ${9:int \\\$pct})';},
	{display = 'imagecopyresampled'; insert = '(${1:resource \\\$dst_image}, ${2:resource \\\$src_image}, ${3:int \\\$dst_x}, ${4:int \\\$dst_y}, ${5:int \\\$src_x}, ${6:int \\\$src_y}, ${7:int \\\$dst_w}, ${8:int \\\$dst_h}, ${9:int \\\$src_w}, ${10:int \\\$src_h})';},
	{display = 'imagecopyresized'; insert = '(${1:resource \\\$dst_image}, ${2:resource \\\$src_image}, ${3:int \\\$dst_x}, ${4:int \\\$dst_y}, ${5:int \\\$src_x}, ${6:int \\\$src_y}, ${7:int \\\$dst_w}, ${8:int \\\$dst_h}, ${9:int \\\$src_w}, ${10:int \\\$src_h})';},
	{display = 'imagecreate'; insert = '(${1:int \\\$width}, ${2:int \\\$height})';},
	{display = 'imagecreatefromgd'; insert = '(${1:string \\\$filename})';},
	{display = 'imagecreatefromgd2'; insert = '(${1:string \\\$filename})';},
	{display = 'imagecreatefromgd2part'; insert = '(${1:string \\\$filename}, ${2:int \\\$srcX}, ${3:int \\\$srcY}, ${4:int \\\$width}, ${5:int \\\$height})';},
	{display = 'imagecreatefromgif'; insert = '(${1:string \\\$filename})';},
	{display = 'imagecreatefromjpeg'; insert = '(${1:string \\\$filename})';},
	{display = 'imagecreatefrompng'; insert = '(${1:string \\\$filename})';},
	{display = 'imagecreatefromstring'; insert = '(${1:string \\\$data})';},
	{display = 'imagecreatefromwbmp'; insert = '(${1:string \\\$filename})';},
	{display = 'imagecreatefromxbm'; insert = '(${1:string \\\$filename})';},
	{display = 'imagecreatefromxpm'; insert = '(${1:string \\\$filename})';},
	{display = 'imagecreatetruecolor'; insert = '(${1:int \\\$width}, ${2:int \\\$height})';},
	{display = 'imagedashedline'; insert = '(${1:resource \\\$image}, ${2:int \\\$x1}, ${3:int \\\$y1}, ${4:int \\\$x2}, ${5:int \\\$y2}, ${6:int \\\$color})';},
	{display = 'imagedestroy'; insert = '(${1:resource \\\$image})';},
	{display = 'imageellipse'; insert = '(${1:resource \\\$image}, ${2:int \\\$cx}, ${3:int \\\$cy}, ${4:int \\\$width}, ${5:int \\\$height}, ${6:int \\\$color})';},
	{display = 'imagefill'; insert = '(${1:resource \\\$image}, ${2:int \\\$x}, ${3:int \\\$y}, ${4:int \\\$color})';},
	{display = 'imagefilledarc'; insert = '(${1:resource \\\$image}, ${2:int \\\$cx}, ${3:int \\\$cy}, ${4:int \\\$width}, ${5:int \\\$height}, ${6:int \\\$start}, ${7:int \\\$end}, ${8:int \\\$color}, ${9:int \\\$style})';},
	{display = 'imagefilledellipse'; insert = '(${1:resource \\\$image}, ${2:int \\\$cx}, ${3:int \\\$cy}, ${4:int \\\$width}, ${5:int \\\$height}, ${6:int \\\$color})';},
	{display = 'imagefilledpolygon'; insert = '(${1:resource \\\$image}, ${2:array \\\$points}, ${3:int \\\$num_points}, ${4:int \\\$color})';},
	{display = 'imagefilledrectangle'; insert = '(${1:resource \\\$image}, ${2:int \\\$x1}, ${3:int \\\$y1}, ${4:int \\\$x2}, ${5:int \\\$y2}, ${6:int \\\$color})';},
	{display = 'imagefilltoborder'; insert = '(${1:resource \\\$image}, ${2:int \\\$x}, ${3:int \\\$y}, ${4:int \\\$border}, ${5:int \\\$color})';},
	{display = 'imagefilter'; insert = '(${1:resource \\\$image}, ${2:int \\\$filtertype}, ${3:[int \\\$arg1]}, ${4:[int \\\$arg2]}, ${5:[int \\\$arg3]}, ${6:[int \\\$arg4]})';},
	{display = 'imagefontheight'; insert = '(${1:int \\\$font})';},
	{display = 'imagefontwidth'; insert = '(${1:int \\\$font})';},
	{display = 'imageftbbox'; insert = '(${1:float \\\$size}, ${2:float \\\$angle}, ${3:string \\\$fontfile}, ${4:string \\\$text}, ${5:[array \\\$extrainfo]})';},
	{display = 'imagefttext'; insert = '(${1:resource \\\$image}, ${2:float \\\$size}, ${3:float \\\$angle}, ${4:int \\\$x}, ${5:int \\\$y}, ${6:int \\\$color}, ${7:string \\\$fontfile}, ${8:string \\\$text}, ${9:[array \\\$extrainfo]})';},
	{display = 'imagegammacorrect'; insert = '(${1:resource \\\$image}, ${2:float \\\$inputgamma}, ${3:float \\\$outputgamma})';},
	{display = 'imagegd'; insert = '(${1:resource \\\$image}, ${2:[string \\\$filename]})';},
	{display = 'imagegd2'; insert = '(${1:resource \\\$image}, ${2:[string \\\$filename]}, ${3:[int \\\$chunk_size]}, ${4:[int \\\$type = IMG_GD2_RAW]})';},
	{display = 'imagegif'; insert = '(${1:resource \\\$image}, ${2:[string \\\$filename]})';},
	{display = 'imagegrabscreen'; insert = '()';},
	{display = 'imagegrabwindow'; insert = '(${1:int \\\$window_handle}, ${2:[int \\\$client_area]})';},
	{display = 'imageinterlace'; insert = '(${1:resource \\\$image}, ${2:[int \\\$interlace]})';},
	{display = 'imageistruecolor'; insert = '(${1:resource \\\$image})';},
	{display = 'imagejpeg'; insert = '(${1:resource \\\$image}, ${2:[string \\\$filename]}, ${3:[int \\\$quality]})';},
	{display = 'imagelayereffect'; insert = '(${1:resource \\\$image}, ${2:int \\\$effect})';},
	{display = 'imageline'; insert = '(${1:resource \\\$image}, ${2:int \\\$x1}, ${3:int \\\$y1}, ${4:int \\\$x2}, ${5:int \\\$y2}, ${6:int \\\$color})';},
	{display = 'imageloadfont'; insert = '(${1:string \\\$file})';},
	{display = 'imagepalettecopy'; insert = '(${1:resource \\\$destination}, ${2:resource \\\$source})';},
	{display = 'imagepng'; insert = '(${1:resource \\\$image}, ${2:[string \\\$filename]}, ${3:[int \\\$quality]}, ${4:[int \\\$filters]})';},
	{display = 'imagepolygon'; insert = '(${1:resource \\\$image}, ${2:array \\\$points}, ${3:int \\\$num_points}, ${4:int \\\$color})';},
	{display = 'imagepsbbox'; insert = '(${1:string \\\$text}, ${2:resource \\\$font}, ${3:int \\\$size}, ${4:int \\\$space}, ${5:int \\\$tightness}, ${6:float \\\$angle})';},
	{display = 'imagepsencodefont'; insert = '(${1:resource \\\$font_index}, ${2:string \\\$encodingfile})';},
	{display = 'imagepsextendfont'; insert = '(${1:resource \\\$font_index}, ${2:float \\\$extend})';},
	{display = 'imagepsfreefont'; insert = '(${1:resource \\\$font_index})';},
	{display = 'imagepsloadfont'; insert = '(${1:string \\\$filename})';},
	{display = 'imagepsslantfont'; insert = '(${1:resource \\\$font_index}, ${2:float \\\$slant})';},
	{display = 'imagepstext'; insert = '(${1:resource \\\$image}, ${2:string \\\$text}, ${3:resource \\\$font_index}, ${4:int \\\$size}, ${5:int \\\$foreground}, ${6:int \\\$background}, ${7:int \\\$x}, ${8:int \\\$y}, ${9:[int \\\$space]}, ${10:[int \\\$tightness]}, ${11:[float \\\$angle = 0.0]}, ${12:[int \\\$antialias_steps = 4]})';},
	{display = 'imagerectangle'; insert = '(${1:resource \\\$image}, ${2:int \\\$x1}, ${3:int \\\$y1}, ${4:int \\\$x2}, ${5:int \\\$y2}, ${6:int \\\$color})';},
	{display = 'imagerotate'; insert = '(${1:resource \\\$image}, ${2:float \\\$angle}, ${3:int \\\$bgd_color}, ${4:[int \\\$ignore_transparent]})';},
	{display = 'imagesavealpha'; insert = '(${1:resource \\\$image}, ${2:bool \\\$saveflag})';},
	{display = 'imagesetbrush'; insert = '(${1:resource \\\$image}, ${2:resource \\\$brush})';},
	{display = 'imagesetpixel'; insert = '(${1:resource \\\$image}, ${2:int \\\$x}, ${3:int \\\$y}, ${4:int \\\$color})';},
	{display = 'imagesetstyle'; insert = '(${1:resource \\\$image}, ${2:array \\\$style})';},
	{display = 'imagesetthickness'; insert = '(${1:resource \\\$image}, ${2:int \\\$thickness})';},
	{display = 'imagesettile'; insert = '(${1:resource \\\$image}, ${2:resource \\\$tile})';},
	{display = 'imagestring'; insert = '(${1:resource \\\$image}, ${2:int \\\$font}, ${3:int \\\$x}, ${4:int \\\$y}, ${5:string \\\$string}, ${6:int \\\$color})';},
	{display = 'imagestringup'; insert = '(${1:resource \\\$image}, ${2:int \\\$font}, ${3:int \\\$x}, ${4:int \\\$y}, ${5:string \\\$string}, ${6:int \\\$color})';},
	{display = 'imagesx'; insert = '(${1:resource \\\$image})';},
	{display = 'imagesy'; insert = '(${1:resource \\\$image})';},
	{display = 'imagetruecolortopalette'; insert = '(${1:resource \\\$image}, ${2:bool \\\$dither}, ${3:int \\\$ncolors})';},
	{display = 'imagettfbbox'; insert = '(${1:float \\\$size}, ${2:float \\\$angle}, ${3:string \\\$fontfile}, ${4:string \\\$text})';},
	{display = 'imagettftext'; insert = '(${1:resource \\\$image}, ${2:float \\\$size}, ${3:float \\\$angle}, ${4:int \\\$x}, ${5:int \\\$y}, ${6:int \\\$color}, ${7:string \\\$fontfile}, ${8:string \\\$text})';},
	{display = 'imagetypes'; insert = '()';},
	{display = 'imagewbmp'; insert = '(${1:resource \\\$image}, ${2:[string \\\$filename]}, ${3:[int \\\$foreground]})';},
	{display = 'imagexbm'; insert = '(${1:resource \\\$image}, ${2:string \\\$filename}, ${3:[int \\\$foreground]})';},
	{display = 'imap_8bit'; insert = '(${1:string \\\$string})';},
	{display = 'imap_alerts'; insert = '()';},
	{display = 'imap_append'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$mailbox}, ${3:string \\\$message}, ${4:[string \\\$options]}, ${5:[string \\\$internal_date]})';},
	{display = 'imap_base64'; insert = '(${1:string \\\$text})';},
	{display = 'imap_binary'; insert = '(${1:string \\\$string})';},
	{display = 'imap_body'; insert = '(${1:resource \\\$imap_stream}, ${2:int \\\$msg_number}, ${3:[int \\\$options]})';},
	{display = 'imap_bodystruct'; insert = '(${1:resource \\\$imap_stream}, ${2:int \\\$msg_number}, ${3:string \\\$section})';},
	{display = 'imap_check'; insert = '(${1:resource \\\$imap_stream})';},
	{display = 'imap_clearflag_full'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$sequence}, ${3:string \\\$flag}, ${4:[int \\\$options]})';},
	{display = 'imap_close'; insert = '(${1:resource \\\$imap_stream}, ${2:[int \\\$flag]})';},
	{display = 'imap_create'; insert = '()';},
	{display = 'imap_createmailbox'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$mailbox})';},
	{display = 'imap_delete'; insert = '(${1:resource \\\$imap_stream}, ${2:int \\\$msg_number}, ${3:[int \\\$options]})';},
	{display = 'imap_deletemailbox'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$mailbox})';},
	{display = 'imap_errors'; insert = '()';},
	{display = 'imap_expunge'; insert = '(${1:resource \\\$imap_stream})';},
	{display = 'imap_fetch_overview'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$sequence}, ${3:[int \\\$options]})';},
	{display = 'imap_fetchbody'; insert = '(${1:resource \\\$imap_stream}, ${2:int \\\$msg_number}, ${3:string \\\$section}, ${4:[int \\\$options]})';},
	{display = 'imap_fetchheader'; insert = '(${1:resource \\\$imap_stream}, ${2:int \\\$msg_number}, ${3:[int \\\$options]})';},
	{display = 'imap_fetchmime'; insert = '(${1:resource \\\$imap_stream}, ${2:int \\\$msg_number}, ${3:string \\\$section}, ${4:[int \\\$options]})';},
	{display = 'imap_fetchstructure'; insert = '(${1:resource \\\$imap_stream}, ${2:int \\\$msg_number}, ${3:[int \\\$options]})';},
	{display = 'imap_fetchtext'; insert = '()';},
	{display = 'imap_gc'; insert = '(${1:resource \\\$imap_stream}, ${2:int \\\$caches})';},
	{display = 'imap_get_quota'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$quota_root})';},
	{display = 'imap_get_quotaroot'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$quota_root})';},
	{display = 'imap_getacl'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$mailbox})';},
	{display = 'imap_getmailboxes'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$ref}, ${3:string \\\$pattern})';},
	{display = 'imap_getsubscribed'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$ref}, ${3:string \\\$pattern})';},
	{display = 'imap_header'; insert = '()';},
	{display = 'imap_headerinfo'; insert = '(${1:resource \\\$imap_stream}, ${2:int \\\$msg_number}, ${3:[int \\\$fromlength]}, ${4:[int \\\$subjectlength]}, ${5:[string \\\$defaulthost]})';},
	{display = 'imap_headers'; insert = '(${1:resource \\\$imap_stream})';},
	{display = 'imap_last_error'; insert = '()';},
	{display = 'imap_list'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$ref}, ${3:string \\\$pattern})';},
	{display = 'imap_listmailbox'; insert = '()';},
	{display = 'imap_listscan'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$ref}, ${3:string \\\$pattern}, ${4:string \\\$content})';},
	{display = 'imap_listsubscribed'; insert = '()';},
	{display = 'imap_lsub'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$ref}, ${3:string \\\$pattern})';},
	{display = 'imap_mail'; insert = '(${1:string \\\$to}, ${2:string \\\$subject}, ${3:string \\\$message}, ${4:[string \\\$additional_headers]}, ${5:[string \\\$cc]}, ${6:[string \\\$bcc]}, ${7:[string \\\$rpath]})';},
	{display = 'imap_mail_compose'; insert = '(${1:array \\\$envelope}, ${2:array \\\$body})';},
	{display = 'imap_mail_copy'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$msglist}, ${3:string \\\$mailbox}, ${4:[int \\\$options]})';},
	{display = 'imap_mail_move'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$msglist}, ${3:string \\\$mailbox}, ${4:[int \\\$options]})';},
	{display = 'imap_mailboxmsginfo'; insert = '(${1:resource \\\$imap_stream})';},
	{display = 'imap_mime_header_decode'; insert = '(${1:string \\\$text})';},
	{display = 'imap_msgno'; insert = '(${1:resource \\\$imap_stream}, ${2:int \\\$uid})';},
	{display = 'imap_num_msg'; insert = '(${1:resource \\\$imap_stream})';},
	{display = 'imap_num_recent'; insert = '(${1:resource \\\$imap_stream})';},
	{display = 'imap_open'; insert = '(${1:string \\\$mailbox}, ${2:string \\\$username}, ${3:string \\\$password}, ${4:[int \\\$options = NIL]}, ${5:[int \\\$n_retries]}, ${6:[array \\\$params]})';},
	{display = 'imap_ping'; insert = '(${1:resource \\\$imap_stream})';},
	{display = 'imap_qprint'; insert = '(${1:string \\\$string})';},
	{display = 'imap_rename'; insert = '()';},
	{display = 'imap_renamemailbox'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$old_mbox}, ${3:string \\\$new_mbox})';},
	{display = 'imap_reopen'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$mailbox}, ${3:[int \\\$options]}, ${4:[int \\\$n_retries]})';},
	{display = 'imap_rfc822_parse_adrlist'; insert = '(${1:string \\\$address}, ${2:string \\\$default_host})';},
	{display = 'imap_rfc822_parse_headers'; insert = '(${1:string \\\$headers}, ${2:[string \\\$defaulthost = \"UNKNOWN\"]})';},
	{display = 'imap_rfc822_write_address'; insert = '(${1:string \\\$mailbox}, ${2:string \\\$host}, ${3:string \\\$personal})';},
	{display = 'imap_savebody'; insert = '(${1:resource \\\$imap_stream}, ${2:mixed \\\$file}, ${3:int \\\$msg_number}, ${4:[string \\\$part_number = \"\"]}, ${5:[int \\\$options]})';},
	{display = 'imap_scan'; insert = '()';},
	{display = 'imap_scanmailbox'; insert = '()';},
	{display = 'imap_search'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$criteria}, ${3:[int \\\$options = SE_FREE]}, ${4:[string \\\$charset = NIL]})';},
	{display = 'imap_set_quota'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$quota_root}, ${3:int \\\$quota_limit})';},
	{display = 'imap_setacl'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$mailbox}, ${3:string \\\$id}, ${4:string \\\$rights})';},
	{display = 'imap_setflag_full'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$sequence}, ${3:string \\\$flag}, ${4:[int \\\$options = NIL]})';},
	{display = 'imap_sort'; insert = '(${1:resource \\\$imap_stream}, ${2:int \\\$criteria}, ${3:int \\\$reverse}, ${4:[int \\\$options]}, ${5:[string \\\$search_criteria]}, ${6:[string \\\$charset = NIL]})';},
	{display = 'imap_status'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$mailbox}, ${3:int \\\$options})';},
	{display = 'imap_subscribe'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$mailbox})';},
	{display = 'imap_thread'; insert = '(${1:resource \\\$imap_stream}, ${2:[int \\\$options = SE_FREE]})';},
	{display = 'imap_timeout'; insert = '(${1:int \\\$timeout_type}, ${2:[int \\\$timeout = -1]})';},
	{display = 'imap_uid'; insert = '(${1:resource \\\$imap_stream}, ${2:int \\\$msg_number})';},
	{display = 'imap_undelete'; insert = '(${1:resource \\\$imap_stream}, ${2:int \\\$msg_number}, ${3:[int \\\$flags]})';},
	{display = 'imap_unsubscribe'; insert = '(${1:resource \\\$imap_stream}, ${2:string \\\$mailbox})';},
	{display = 'imap_utf7_decode'; insert = '(${1:string \\\$text})';},
	{display = 'imap_utf7_encode'; insert = '(${1:string \\\$data})';},
	{display = 'imap_utf8'; insert = '(${1:string \\\$mime_encoded_text})';},
	{display = 'implode'; insert = '(${1:string \\\$glue}, ${2:array \\\$pieces})';},
	{display = 'import_request_variables'; insert = '(${1:string \\\$types}, ${2:[string \\\$prefix]})';},
	{display = 'in_array'; insert = '(${1:mixed \\\$needle}, ${2:array \\\$haystack}, ${3:[bool \\\$strict]})';},
	{display = 'include'; insert = '(${1:string \\\$path})';},
	{display = 'include_once'; insert = '(${1:string \\\$path})';},
	{display = 'inet_ntop'; insert = '(${1:string \\\$in_addr})';},
	{display = 'inet_pton'; insert = '(${1:string \\\$address})';},
	{display = 'ini_alter'; insert = '()';},
	{display = 'ini_get'; insert = '(${1:string \\\$varname})';},
	{display = 'ini_get_all'; insert = '(${1:[string \\\$extension]}, ${2:[bool \\\$details = true]})';},
	{display = 'ini_restore'; insert = '(${1:string \\\$varname})';},
	{display = 'ini_set'; insert = '(${1:string \\\$varname}, ${2:string \\\$newvalue})';},
	{display = 'interface_exists'; insert = '(${1:string \\\$interface_name}, ${2:[bool \\\$autoload = true]})';},
	{display = 'intl_error_name'; insert = '(${1:int \\\$error_code})';},
	{display = 'intl_get_error_code'; insert = '()';},
	{display = 'intl_get_error_message'; insert = '()';},
	{display = 'intl_is_failure'; insert = '(${1:int \\\$error_code})';},
	{display = 'intval'; insert = '(${1:mixed \\\$var}, ${2:[int \\\$base = 10]})';},
	{display = 'ip2long'; insert = '(${1:string \\\$ip_address})';},
	{display = 'iptcembed'; insert = '(${1:string \\\$iptcdata}, ${2:string \\\$jpeg_file_name}, ${3:[int \\\$spool]})';},
	{display = 'iptcparse'; insert = '(${1:string \\\$iptcblock})';},
	{display = 'is_a'; insert = '(${1:object \\\$object}, ${2:string \\\$class_name})';},
	{display = 'is_array'; insert = '(${1:mixed \\\$var})';},
	{display = 'is_bool'; insert = '(${1:mixed \\\$var})';},
	{display = 'is_callable'; insert = '(${1:callback \\\$name}, ${2:[bool \\\$syntax_only = false]}, ${3:[string \\\$callable_name]})';},
	{display = 'is_dir'; insert = '(${1:string \\\$filename})';},
	{display = 'is_double'; insert = '()';},
	{display = 'is_executable'; insert = '(${1:string \\\$filename})';},
	{display = 'is_file'; insert = '(${1:string \\\$filename})';},
	{display = 'is_finite'; insert = '(${1:float \\\$val})';},
	{display = 'is_float'; insert = '(${1:mixed \\\$var})';},
	{display = 'is_infinite'; insert = '(${1:float \\\$val})';},
	{display = 'is_int'; insert = '(${1:mixed \\\$var})';},
	{display = 'is_integer'; insert = '()';},
	{display = 'is_link'; insert = '(${1:string \\\$filename})';},
	{display = 'is_long'; insert = '()';},
	{display = 'is_nan'; insert = '(${1:float \\\$val})';},
	{display = 'is_null'; insert = '(${1:mixed \\\$var})';},
	{display = 'is_numeric'; insert = '(${1:mixed \\\$var})';},
	{display = 'is_object'; insert = '(${1:mixed \\\$var})';},
	{display = 'is_readable'; insert = '(${1:string \\\$filename})';},
	{display = 'is_real'; insert = '()';},
	{display = 'is_resource'; insert = '(${1:mixed \\\$var})';},
	{display = 'is_scalar'; insert = '(${1:mixed \\\$var})';},
	{display = 'is_soap_fault'; insert = '(${1:mixed \\\$object})';},
	{display = 'is_string'; insert = '(${1:mixed \\\$var})';},
	{display = 'is_subclass_of'; insert = '(${1:mixed \\\$object}, ${2:string \\\$class_name})';},
	{display = 'is_uploaded_file'; insert = '(${1:string \\\$filename})';},
	{display = 'is_writable'; insert = '(${1:string \\\$filename})';},
	{display = 'is_writeable'; insert = '()';},
	{display = 'isset'; insert = '(${1:mixed \\\$var}, ${2:[mixed ...]})';},
	{display = 'iterator_apply'; insert = '(${1:Traversable \\\$iterator}, ${2:callback \\\$function}, ${3:[array \\\$args]})';},
	{display = 'iterator_count'; insert = '(${1:Traversable \\\$iterator})';},
	{display = 'iterator_to_array'; insert = '(${1:Traversable \\\$iterator}, ${2:[bool \\\$use_keys = true]})';},
	{display = 'jdtojewish'; insert = '(${1:int \\\$juliandaycount}, ${2:[bool \\\$hebrew = false]}, ${3:[int \\\$fl]})';},
	{display = 'jdtounix'; insert = '(${1:int \\\$jday})';},
	{display = 'join'; insert = '()';},
	{display = 'jpeg2wbmp'; insert = '(${1:string \\\$jpegname}, ${2:string \\\$wbmpname}, ${3:int \\\$dest_height}, ${4:int \\\$dest_width}, ${5:int \\\$threshold})';},
	{display = 'json_decode'; insert = '(${1:string \\\$json}, ${2:[bool \\\$assoc = false]}, ${3:[int \\\$depth = 512]}, ${4:[int \\\$options]})';},
	{display = 'json_encode'; insert = '(${1:mixed \\\$value}, ${2:[int \\\$options]})';},
	{display = 'json_last_error'; insert = '()';},
	{display = 'key'; insert = '(${1:array \\\$array})';},
	{display = 'krsort'; insert = '(${1:array \\\$array}, ${2:[int \\\$sort_flags = SORT_REGULAR]})';},
	{display = 'ksort'; insert = '(${1:array \\\$array}, ${2:[int \\\$sort_flags = SORT_REGULAR]})';},
	{display = 'lcfirst'; insert = '(${1:string \\\$str})';},
	{display = 'lcg_value'; insert = '()';},
	{display = 'lchgrp'; insert = '(${1:string \\\$filename}, ${2:mixed \\\$group})';},
	{display = 'lchown'; insert = '(${1:string \\\$filename}, ${2:mixed \\\$user})';},
	{display = 'ldap_8859_to_t61'; insert = '(${1:string \\\$value})';},
	{display = 'ldap_add'; insert = '(${1:resource \\\$link_identifier}, ${2:string \\\$dn}, ${3:array \\\$entry})';},
	{display = 'ldap_bind'; insert = '(${1:resource \\\$link_identifier}, ${2:[string \\\$bind_rdn]}, ${3:[string \\\$bind_password]})';},
	{display = 'ldap_close'; insert = '()';},
	{display = 'ldap_compare'; insert = '(${1:resource \\\$link_identifier}, ${2:string \\\$dn}, ${3:string \\\$attribute}, ${4:string \\\$value})';},
	{display = 'ldap_connect'; insert = '(${1:[string \\\$hostname]}, ${2:[int \\\$port = 389]})';},
	{display = 'ldap_count_entries'; insert = '(${1:resource \\\$link_identifier}, ${2:resource \\\$result_identifier})';},
	{display = 'ldap_delete'; insert = '(${1:resource \\\$link_identifier}, ${2:string \\\$dn})';},
	{display = 'ldap_dn2ufn'; insert = '(${1:string \\\$dn})';},
	{display = 'ldap_err2str'; insert = '(${1:int \\\$errno})';},
	{display = 'ldap_errno'; insert = '(${1:resource \\\$link_identifier})';},
	{display = 'ldap_error'; insert = '(${1:resource \\\$link_identifier})';},
	{display = 'ldap_explode_dn'; insert = '(${1:string \\\$dn}, ${2:int \\\$with_attrib})';},
	{display = 'ldap_first_attribute'; insert = '(${1:resource \\\$link_identifier}, ${2:resource \\\$result_entry_identifier})';},
	{display = 'ldap_first_entry'; insert = '(${1:resource \\\$link_identifier}, ${2:resource \\\$result_identifier})';},
	{display = 'ldap_first_reference'; insert = '(${1:resource \\\$link}, ${2:resource \\\$result})';},
	{display = 'ldap_free_result'; insert = '(${1:resource \\\$result_identifier})';},
	{display = 'ldap_get_attributes'; insert = '(${1:resource \\\$link_identifier}, ${2:resource \\\$result_entry_identifier})';},
	{display = 'ldap_get_dn'; insert = '(${1:resource \\\$link_identifier}, ${2:resource \\\$result_entry_identifier})';},
	{display = 'ldap_get_entries'; insert = '(${1:resource \\\$link_identifier}, ${2:resource \\\$result_identifier})';},
	{display = 'ldap_get_option'; insert = '(${1:resource \\\$link_identifier}, ${2:int \\\$option}, ${3:mixed \\\$retval})';},
	{display = 'ldap_get_values'; insert = '(${1:resource \\\$link_identifier}, ${2:resource \\\$result_entry_identifier}, ${3:string \\\$attribute})';},
	{display = 'ldap_get_values_len'; insert = '(${1:resource \\\$link_identifier}, ${2:resource \\\$result_entry_identifier}, ${3:string \\\$attribute})';},
	{display = 'ldap_list'; insert = '(${1:resource \\\$link_identifier}, ${2:string \\\$base_dn}, ${3:string \\\$filter}, ${4:[array \\\$attributes]}, ${5:[int \\\$attrsonly]}, ${6:[int \\\$sizelimit]}, ${7:[int \\\$timelimit]}, ${8:[int \\\$deref]})';},
	{display = 'ldap_mod_add'; insert = '(${1:resource \\\$link_identifier}, ${2:string \\\$dn}, ${3:array \\\$entry})';},
	{display = 'ldap_mod_del'; insert = '(${1:resource \\\$link_identifier}, ${2:string \\\$dn}, ${3:array \\\$entry})';},
	{display = 'ldap_mod_replace'; insert = '(${1:resource \\\$link_identifier}, ${2:string \\\$dn}, ${3:array \\\$entry})';},
	{display = 'ldap_modify'; insert = '(${1:resource \\\$link_identifier}, ${2:string \\\$dn}, ${3:array \\\$entry})';},
	{display = 'ldap_next_attribute'; insert = '(${1:resource \\\$link_identifier}, ${2:resource \\\$result_entry_identifier})';},
	{display = 'ldap_next_entry'; insert = '(${1:resource \\\$link_identifier}, ${2:resource \\\$result_entry_identifier})';},
	{display = 'ldap_next_reference'; insert = '(${1:resource \\\$link}, ${2:resource \\\$entry})';},
	{display = 'ldap_parse_reference'; insert = '(${1:resource \\\$link}, ${2:resource \\\$entry}, ${3:array \\\$referrals})';},
	{display = 'ldap_parse_result'; insert = '(${1:resource \\\$link}, ${2:resource \\\$result}, ${3:int \\\$errcode}, ${4:[string \\\$matcheddn]}, ${5:[string \\\$errmsg]}, ${6:[array \\\$referrals]})';},
	{display = 'ldap_read'; insert = '(${1:resource \\\$link_identifier}, ${2:string \\\$base_dn}, ${3:string \\\$filter}, ${4:[array \\\$attributes]}, ${5:[int \\\$attrsonly]}, ${6:[int \\\$sizelimit]}, ${7:[int \\\$timelimit]}, ${8:[int \\\$deref]})';},
	{display = 'ldap_rename'; insert = '(${1:resource \\\$link_identifier}, ${2:string \\\$dn}, ${3:string \\\$newrdn}, ${4:string \\\$newparent}, ${5:bool \\\$deleteoldrdn})';},
	{display = 'ldap_sasl_bind'; insert = '(${1:resource \\\$link}, ${2:[string \\\$binddn]}, ${3:[string \\\$password]}, ${4:[string \\\$sasl_mech]}, ${5:[string \\\$sasl_realm]}, ${6:[string \\\$sasl_authc_id]}, ${7:[string \\\$sasl_authz_id]}, ${8:[string \\\$props]})';},
	{display = 'ldap_search'; insert = '(${1:resource \\\$link_identifier}, ${2:string \\\$base_dn}, ${3:string \\\$filter}, ${4:[array \\\$attributes]}, ${5:[int \\\$attrsonly]}, ${6:[int \\\$sizelimit]}, ${7:[int \\\$timelimit]}, ${8:[int \\\$deref]})';},
	{display = 'ldap_set_option'; insert = '(${1:resource \\\$link_identifier}, ${2:int \\\$option}, ${3:mixed \\\$newval})';},
	{display = 'ldap_set_rebind_proc'; insert = '(${1:resource \\\$link}, ${2:callback \\\$callback})';},
	{display = 'ldap_sort'; insert = '(${1:resource \\\$link}, ${2:resource \\\$result}, ${3:string \\\$sortfilter})';},
	{display = 'ldap_start_tls'; insert = '(${1:resource \\\$link})';},
	{display = 'ldap_t61_to_8859'; insert = '(${1:string \\\$value})';},
	{display = 'ldap_unbind'; insert = '(${1:resource \\\$link_identifier})';},
	{display = 'levenshtein'; insert = '(${1:string \\\$str1}, ${2:string \\\$str2}, ${3:int \\\$cost_ins}, ${4:int \\\$cost_rep}, ${5:int \\\$cost_del})';},
	{display = 'libxml_clear_errors'; insert = '()';},
	{display = 'libxml_disable_entity_loader'; insert = '(${1:[bool \\\$disable = true]})';},
	{display = 'libxml_get_errors'; insert = '()';},
	{display = 'libxml_get_last_error'; insert = '()';},
	{display = 'libxml_set_streams_context'; insert = '(${1:resource \\\$streams_context})';},
	{display = 'libxml_use_internal_errors'; insert = '(${1:[bool \\\$use_errors = false]})';},
	{display = 'link'; insert = '(${1:string \\\$target}, ${2:string \\\$link})';},
	{display = 'linkinfo'; insert = '(${1:string \\\$path})';},
	{display = 'list'; insert = '(${1:mixed \\\$varname}, ${2:[mixed ...]})';},
	{display = 'locale_accept_from_http'; insert = '(${1:string \\\$header})';},
	{display = 'locale_compose'; insert = '(${1:array \\\$subtags})';},
	{display = 'locale_filter_matches'; insert = '(${1:string \\\$langtag}, ${2:string \\\$locale}, ${3:[bool \\\$canonicalize = false]})';},
	{display = 'locale_get_all_variants'; insert = '(${1:string \\\$locale})';},
	{display = 'locale_get_default'; insert = '()';},
	{display = 'locale_get_display_language'; insert = '(${1:string \\\$locale}, ${2:[string \\\$in_locale]})';},
	{display = 'locale_get_display_name'; insert = '(${1:string \\\$locale}, ${2:[string \\\$in_locale]})';},
	{display = 'locale_get_display_region'; insert = '(${1:string \\\$locale}, ${2:[string \\\$in_locale]})';},
	{display = 'locale_get_display_script'; insert = '(${1:string \\\$locale}, ${2:[string \\\$in_locale]})';},
	{display = 'locale_get_display_variant'; insert = '(${1:string \\\$locale}, ${2:[string \\\$in_locale]})';},
	{display = 'locale_get_keywords'; insert = '(${1:string \\\$locale})';},
	{display = 'locale_get_primary_language'; insert = '(${1:string \\\$locale})';},
	{display = 'locale_get_region'; insert = '(${1:string \\\$locale})';},
	{display = 'locale_get_script'; insert = '(${1:string \\\$locale})';},
	{display = 'locale_lookup'; insert = '(${1:array \\\$langtag}, ${2:string \\\$locale}, ${3:[bool \\\$canonicalize = false]}, ${4:[string \\\$default]})';},
	{display = 'locale_parse'; insert = '(${1:string \\\$locale})';},
	{display = 'locale_set_default'; insert = '(${1:string \\\$locale})';},
	{display = 'localeconv'; insert = '()';},
	{display = 'localtime'; insert = '(${1:[int \\\$timestamp = time()]}, ${2:[bool \\\$is_associative = false]})';},
	{display = 'log'; insert = '(${1:float \\\$arg}, ${2:[float \\\$base = M_E]})';},
	{display = 'log10'; insert = '(${1:float \\\$arg})';},
	{display = 'log1p'; insert = '(${1:float \\\$number})';},
	{display = 'long2ip'; insert = '(${1:string \\\$proper_address})';},
	{display = 'lstat'; insert = '(${1:string \\\$filename})';},
	{display = 'ltrim'; insert = '(${1:string \\\$str}, ${2:[string \\\$charlist]})';},
	{display = 'magic_quotes_runtime'; insert = '()';},
	{display = 'mail'; insert = '(${1:string \\\$to}, ${2:string \\\$subject}, ${3:string \\\$message}, ${4:[string \\\$additional_headers]}, ${5:[string \\\$additional_parameters]})';},
	{display = 'main'; insert = '()';},
	{display = 'max'; insert = '(${1:array \\\$values}, ${2:mixed \\\$value1}, ${3:mixed \\\$value2}, ${4:[mixed \\\$value3...]})';},
	{display = 'mb_check_encoding'; insert = '(${1:[string \\\$var]}, ${2:[string \\\$encoding = mb_internal_encoding()]})';},
	{display = 'mb_convert_case'; insert = '(${1:string \\\$str}, ${2:int \\\$mode}, ${3:[string \\\$encoding = mb_internal_encoding()]})';},
	{display = 'mb_convert_encoding'; insert = '(${1:string \\\$str}, ${2:string \\\$to_encoding}, ${3:[mixed \\\$from_encoding]})';},
	{display = 'mb_convert_kana'; insert = '(${1:string \\\$str}, ${2:[string \\\$option = \"KV\"]}, ${3:[string \\\$encoding]})';},
	{display = 'mb_convert_variables'; insert = '(${1:string \\\$to_encoding}, ${2:mixed \\\$from_encoding}, ${3:mixed \\\$vars}, ${4:[mixed ...]})';},
	{display = 'mb_decode_mimeheader'; insert = '(${1:string \\\$str})';},
	{display = 'mb_decode_numericentity'; insert = '(${1:string \\\$str}, ${2:array \\\$convmap}, ${3:string \\\$encoding})';},
	{display = 'mb_detect_encoding'; insert = '(${1:string \\\$str}, ${2:[mixed \\\$encoding_list = mb_detect_order()]}, ${3:[bool \\\$strict = false]})';},
	{display = 'mb_detect_order'; insert = '(${1:[mixed \\\$encoding_list]})';},
	{display = 'mb_encode_mimeheader'; insert = '(${1:string \\\$str}, ${2:[string \\\$charset]}, ${3:[string \\\$transfer_encoding]}, ${4:[string \\\$linefeed = \"\\\\r\\\\n\"]}, ${5:[int \\\$indent]})';},
	{display = 'mb_encode_numericentity'; insert = '(${1:string \\\$str}, ${2:array \\\$convmap}, ${3:string \\\$encoding})';},
	{display = 'mb_encoding_aliases'; insert = '(${1:string \\\$encoding})';},
	{display = 'mb_ereg'; insert = '(${1:string \\\$pattern}, ${2:string \\\$string}, ${3:[array \\\$regs]})';},
	{display = 'mb_ereg_match'; insert = '(${1:string \\\$pattern}, ${2:string \\\$string}, ${3:[string \\\$option = \"msr\"]})';},
	{display = 'mb_ereg_replace'; insert = '(${1:string \\\$pattern}, ${2:string \\\$replacement}, ${3:string \\\$string}, ${4:[string \\\$option = \"msr\"]})';},
	{display = 'mb_ereg_search'; insert = '(${1:[string \\\$pattern]}, ${2:[string \\\$option = \"ms\"]})';},
	{display = 'mb_ereg_search_getpos'; insert = '()';},
	{display = 'mb_ereg_search_getregs'; insert = '()';},
	{display = 'mb_ereg_search_init'; insert = '(${1:string \\\$string}, ${2:[string \\\$pattern]}, ${3:[string \\\$option = \"msr\"]})';},
	{display = 'mb_ereg_search_pos'; insert = '(${1:[string \\\$pattern]}, ${2:[string \\\$option = \"ms\"]})';},
	{display = 'mb_ereg_search_regs'; insert = '(${1:[string \\\$pattern]}, ${2:[string \\\$option = \"ms\"]})';},
	{display = 'mb_ereg_search_setpos'; insert = '(${1:int \\\$position})';},
	{display = 'mb_eregi'; insert = '(${1:string \\\$pattern}, ${2:string \\\$string}, ${3:[array \\\$regs]})';},
	{display = 'mb_eregi_replace'; insert = '(${1:string \\\$pattern}, ${2:string \\\$replace}, ${3:string \\\$string}, ${4:[string \\\$option = \"msri\"]})';},
	{display = 'mb_get_info'; insert = '(${1:[string \\\$type = \"all\"]})';},
	{display = 'mb_http_input'; insert = '(${1:[string \\\$type = \"\"]})';},
	{display = 'mb_http_output'; insert = '(${1:[string \\\$encoding]})';},
	{display = 'mb_internal_encoding'; insert = '(${1:[string \\\$encoding = mb_internal_encoding()]})';},
	{display = 'mb_language'; insert = '(${1:[string \\\$language]})';},
	{display = 'mb_list_encodings'; insert = '()';},
	{display = 'mb_output_handler'; insert = '(${1:string \\\$contents}, ${2:int \\\$status})';},
	{display = 'mb_parse_str'; insert = '(${1:string \\\$encoded_string}, ${2:[array \\\$result]})';},
	{display = 'mb_preferred_mime_name'; insert = '(${1:string \\\$encoding})';},
	{display = 'mb_regex_encoding'; insert = '(${1:[string \\\$encoding]})';},
	{display = 'mb_regex_set_options'; insert = '(${1:[string \\\$options = \"msr\"]})';},
	{display = 'mb_send_mail'; insert = '(${1:string \\\$to}, ${2:string \\\$subject}, ${3:string \\\$message}, ${4:[string \\\$additional_headers]}, ${5:[string \\\$additional_parameter]})';},
	{display = 'mb_split'; insert = '(${1:string \\\$pattern}, ${2:string \\\$string}, ${3:[int \\\$limit = -1]})';},
	{display = 'mb_strcut'; insert = '(${1:string \\\$str}, ${2:int \\\$start}, ${3:[int \\\$length]}, ${4:[string \\\$encoding]})';},
	{display = 'mb_strimwidth'; insert = '(${1:string \\\$str}, ${2:int \\\$start}, ${3:int \\\$width}, ${4:[string \\\$trimmarker]}, ${5:[string \\\$encoding]})';},
	{display = 'mb_stripos'; insert = '(${1:string \\\$haystack}, ${2:string \\\$needle}, ${3:[int \\\$offset]}, ${4:[string \\\$encoding]})';},
	{display = 'mb_stristr'; insert = '(${1:string \\\$haystack}, ${2:string \\\$needle}, ${3:[bool \\\$part = false]}, ${4:[string \\\$encoding]})';},
	{display = 'mb_strlen'; insert = '(${1:string \\\$str}, ${2:[string \\\$encoding]})';},
	{display = 'mb_strpos'; insert = '(${1:string \\\$haystack}, ${2:string \\\$needle}, ${3:[int \\\$offset]}, ${4:[string \\\$encoding]})';},
	{display = 'mb_strrchr'; insert = '(${1:string \\\$haystack}, ${2:string \\\$needle}, ${3:[bool \\\$part = false]}, ${4:[string \\\$encoding]})';},
	{display = 'mb_strrichr'; insert = '(${1:string \\\$haystack}, ${2:string \\\$needle}, ${3:[bool \\\$part = false]}, ${4:[string \\\$encoding]})';},
	{display = 'mb_strripos'; insert = '(${1:string \\\$haystack}, ${2:string \\\$needle}, ${3:[int \\\$offset]}, ${4:[string \\\$encoding]})';},
	{display = 'mb_strrpos'; insert = '(${1:string \\\$haystack}, ${2:string \\\$needle}, ${3:[int \\\$offset]}, ${4:[string \\\$encoding]})';},
	{display = 'mb_strstr'; insert = '(${1:string \\\$haystack}, ${2:string \\\$needle}, ${3:[bool \\\$part = false]}, ${4:[string \\\$encoding]})';},
	{display = 'mb_strtolower'; insert = '(${1:string \\\$str}, ${2:[string \\\$encoding = mb_internal_encoding()]})';},
	{display = 'mb_strtoupper'; insert = '(${1:string \\\$str}, ${2:[string \\\$encoding = mb_internal_encoding()]})';},
	{display = 'mb_strwidth'; insert = '(${1:string \\\$str}, ${2:[string \\\$encoding]})';},
	{display = 'mb_substitute_character'; insert = '(${1:[mixed \\\$substrchar]})';},
	{display = 'mb_substr'; insert = '(${1:string \\\$str}, ${2:int \\\$start}, ${3:[int \\\$length]}, ${4:[string \\\$encoding]})';},
	{display = 'mb_substr_count'; insert = '(${1:string \\\$haystack}, ${2:string \\\$needle}, ${3:[string \\\$encoding]})';},
	{display = 'mcrypt_cbc'; insert = '(${1:string \\\$cipher}, ${2:string \\\$key}, ${3:string \\\$data}, ${4:int \\\$mode}, ${5:[string \\\$iv]})';},
	{display = 'mcrypt_cfb'; insert = '(${1:string \\\$cipher}, ${2:string \\\$key}, ${3:string \\\$data}, ${4:int \\\$mode}, ${5:[string \\\$iv]})';},
	{display = 'mcrypt_create_iv'; insert = '(${1:int \\\$size}, ${2:[int \\\$source = MCRYPT_DEV_RANDOM]})';},
	{display = 'mcrypt_decrypt'; insert = '(${1:string \\\$cipher}, ${2:string \\\$key}, ${3:string \\\$data}, ${4:string \\\$mode}, ${5:[string \\\$iv]})';},
	{display = 'mcrypt_ecb'; insert = '(${1:string \\\$cipher}, ${2:string \\\$key}, ${3:string \\\$data}, ${4:int \\\$mode}, ${5:[string \\\$iv]})';},
	{display = 'mcrypt_enc_get_algorithms_name'; insert = '(${1:resource \\\$td})';},
	{display = 'mcrypt_enc_get_block_size'; insert = '(${1:resource \\\$td})';},
	{display = 'mcrypt_enc_get_iv_size'; insert = '(${1:resource \\\$td})';},
	{display = 'mcrypt_enc_get_key_size'; insert = '(${1:resource \\\$td})';},
	{display = 'mcrypt_enc_get_modes_name'; insert = '(${1:resource \\\$td})';},
	{display = 'mcrypt_enc_get_supported_key_sizes'; insert = '(${1:resource \\\$td})';},
	{display = 'mcrypt_enc_is_block_algorithm'; insert = '(${1:resource \\\$td})';},
	{display = 'mcrypt_enc_is_block_algorithm_mode'; insert = '(${1:resource \\\$td})';},
	{display = 'mcrypt_enc_is_block_mode'; insert = '(${1:resource \\\$td})';},
	{display = 'mcrypt_enc_self_test'; insert = '(${1:resource \\\$td})';},
	{display = 'mcrypt_encrypt'; insert = '(${1:string \\\$cipher}, ${2:string \\\$key}, ${3:string \\\$data}, ${4:string \\\$mode}, ${5:[string \\\$iv]})';},
	{display = 'mcrypt_generic'; insert = '(${1:resource \\\$td}, ${2:string \\\$data})';},
	{display = 'mcrypt_generic_deinit'; insert = '(${1:resource \\\$td})';},
	{display = 'mcrypt_generic_end'; insert = '(${1:resource \\\$td})';},
	{display = 'mcrypt_generic_init'; insert = '(${1:resource \\\$td}, ${2:string \\\$key}, ${3:string \\\$iv})';},
	{display = 'mcrypt_get_block_size'; insert = '(${1:string \\\$cipher}, ${2:string \\\$module})';},
	{display = 'mcrypt_get_cipher_name'; insert = '(${1:string \\\$cipher})';},
	{display = 'mcrypt_get_iv_size'; insert = '(${1:string \\\$cipher}, ${2:string \\\$mode})';},
	{display = 'mcrypt_get_key_size'; insert = '(${1:string \\\$cipher}, ${2:string \\\$module})';},
	{display = 'mcrypt_list_algorithms'; insert = '(${1:[string \\\$lib_dir = ini_get(\"mcrypt.algorithms_dir\")]})';},
	{display = 'mcrypt_list_modes'; insert = '(${1:[string \\\$lib_dir = ini_get(\"mcrypt.modes_dir\")]})';},
	{display = 'mcrypt_module_close'; insert = '(${1:resource \\\$td})';},
	{display = 'mcrypt_module_get_algo_block_size'; insert = '(${1:string \\\$algorithm}, ${2:[string \\\$lib_dir]})';},
	{display = 'mcrypt_module_get_algo_key_size'; insert = '(${1:string \\\$algorithm}, ${2:[string \\\$lib_dir]})';},
	{display = 'mcrypt_module_get_supported_key_sizes'; insert = '(${1:string \\\$algorithm}, ${2:[string \\\$lib_dir]})';},
	{display = 'mcrypt_module_is_block_algorithm'; insert = '(${1:string \\\$algorithm}, ${2:[string \\\$lib_dir]})';},
	{display = 'mcrypt_module_is_block_algorithm_mode'; insert = '(${1:string \\\$mode}, ${2:[string \\\$lib_dir]})';},
	{display = 'mcrypt_module_is_block_mode'; insert = '(${1:string \\\$mode}, ${2:[string \\\$lib_dir]})';},
	{display = 'mcrypt_module_open'; insert = '(${1:string \\\$algorithm}, ${2:string \\\$algorithm_directory}, ${3:string \\\$mode}, ${4:string \\\$mode_directory})';},
	{display = 'mcrypt_module_self_test'; insert = '(${1:string \\\$algorithm}, ${2:[string \\\$lib_dir]})';},
	{display = 'mcrypt_ofb'; insert = '(${1:string \\\$cipher}, ${2:string \\\$key}, ${3:string \\\$data}, ${4:int \\\$mode}, ${5:[string \\\$iv]})';},
	{display = 'md5'; insert = '(${1:string \\\$str}, ${2:[bool \\\$raw_output = false]})';},
	{display = 'md5_file'; insert = '(${1:string \\\$filename}, ${2:[bool \\\$raw_output = false]})';},
	{display = 'mdecrypt_generic'; insert = '(${1:resource \\\$td}, ${2:string \\\$data})';},
	{display = 'memcache_debug'; insert = '(${1:bool \\\$on_off})';},
	{display = 'memory_get_peak_usage'; insert = '(${1:[bool \\\$real_usage = false]})';},
	{display = 'memory_get_usage'; insert = '(${1:[bool \\\$real_usage = false]})';},
	{display = 'metaphone'; insert = '(${1:string \\\$str}, ${2:[int \\\$phonemes]})';},
	{display = 'method_exists'; insert = '(${1:mixed \\\$object}, ${2:string \\\$method_name})';},
	{display = 'mhash'; insert = '(${1:int \\\$hash}, ${2:string \\\$data}, ${3:[string \\\$key]})';},
	{display = 'mhash_count'; insert = '()';},
	{display = 'mhash_get_block_size'; insert = '(${1:int \\\$hash})';},
	{display = 'mhash_get_hash_name'; insert = '(${1:int \\\$hash})';},
	{display = 'mhash_keygen_s2k'; insert = '(${1:int \\\$hash}, ${2:string \\\$password}, ${3:string \\\$salt}, ${4:int \\\$bytes})';},
	{display = 'microtime'; insert = '(${1:[bool \\\$get_as_float = false]})';},
	{display = 'mime_content_type'; insert = '(${1:string \\\$filename})';},
	{display = 'min'; insert = '(${1:array \\\$values}, ${2:mixed \\\$value1}, ${3:mixed \\\$value2}, ${4:[mixed \\\$value3...]})';},
	{display = 'mkdir'; insert = '(${1:string \\\$pathname}, ${2:[int \\\$mode = 0777]}, ${3:[bool \\\$recursive = false]}, ${4:[resource \\\$context]})';},
	{display = 'mktime'; insert = '(${1:[int \\\$hour = date(\"H\")]}, ${2:[int \\\$minute = date(\"i\")]}, ${3:[int \\\$second = date(\"s\")]}, ${4:[int \\\$month = date(\"n\")]}, ${5:[int \\\$day = date(\"j\")]}, ${6:[int \\\$year = date(\"Y\")]}, ${7:[int \\\$is_dst = -1]})';},
	{display = 'money_format'; insert = '(${1:string \\\$format}, ${2:float \\\$number})';},
	{display = 'move_uploaded_file'; insert = '(${1:string \\\$filename}, ${2:string \\\$destination})';},
	{display = 'msg_get_queue'; insert = '(${1:int \\\$key}, ${2:[int \\\$perms = 0666]})';},
	{display = 'msg_queue_exists'; insert = '(${1:int \\\$key})';},
	{display = 'msg_receive'; insert = '(${1:resource \\\$queue}, ${2:int \\\$desiredmsgtype}, ${3:int \\\$msgtype}, ${4:int \\\$maxsize}, ${5:mixed \\\$message}, ${6:[bool \\\$unserialize = true]}, ${7:[int \\\$flags]}, ${8:[int \\\$errorcode]})';},
	{display = 'msg_remove_queue'; insert = '(${1:resource \\\$queue})';},
	{display = 'msg_send'; insert = '(${1:resource \\\$queue}, ${2:int \\\$msgtype}, ${3:mixed \\\$message}, ${4:[bool \\\$serialize = true]}, ${5:[bool \\\$blocking = true]}, ${6:[int \\\$errorcode]})';},
	{display = 'msg_set_queue'; insert = '(${1:resource \\\$queue}, ${2:array \\\$data})';},
	{display = 'msg_stat_queue'; insert = '(${1:resource \\\$queue})';},
	{display = 'msgfmt_create'; insert = '(${1:string \\\$locale}, ${2:string \\\$pattern})';},
	{display = 'msgfmt_format'; insert = '(${1:array \\\$args}, ${2:MessageFormatter \\\$fmt})';},
	{display = 'msgfmt_format_message'; insert = '(${1:string \\\$locale}, ${2:string \\\$pattern}, ${3:array \\\$args})';},
	{display = 'msgfmt_get_error_code'; insert = '(${1:MessageFormatter \\\$fmt})';},
	{display = 'msgfmt_get_error_message'; insert = '(${1:MessageFormatter \\\$fmt})';},
	{display = 'msgfmt_get_locale'; insert = '(${1:NumberFormatter \\\$formatter})';},
	{display = 'msgfmt_get_pattern'; insert = '(${1:MessageFormatter \\\$fmt})';},
	{display = 'msgfmt_parse'; insert = '(${1:string \\\$value}, ${2:MessageFormatter \\\$fmt})';},
	{display = 'msgfmt_parse_message'; insert = '(${1:string \\\$locale}, ${2:string \\\$pattern}, ${3:string \\\$source}, ${4:string \\\$value})';},
	{display = 'msgfmt_set_pattern'; insert = '(${1:string \\\$pattern}, ${2:MessageFormatter \\\$fmt})';},
	{display = 'mssql_bind'; insert = '(${1:resource \\\$stmt}, ${2:string \\\$param_name}, ${3:mixed \\\$var}, ${4:int \\\$type}, ${5:[bool \\\$is_output = false]}, ${6:[bool \\\$is_null = false]}, ${7:[int \\\$maxlen = -1]})';},
	{display = 'mssql_close'; insert = '(${1:[resource \\\$link_identifier]})';},
	{display = 'mssql_connect'; insert = '(${1:[string \\\$servername]}, ${2:[string \\\$username]}, ${3:[string \\\$password]}, ${4:[bool \\\$new_link = false]})';},
	{display = 'mssql_data_seek'; insert = '(${1:resource \\\$result_identifier}, ${2:int \\\$row_number})';},
	{display = 'mssql_execute'; insert = '(${1:resource \\\$stmt}, ${2:[bool \\\$skip_results = false]})';},
	{display = 'mssql_fetch_array'; insert = '(${1:resource \\\$result}, ${2:[int \\\$result_type = MSSQL_BOTH]})';},
	{display = 'mssql_fetch_assoc'; insert = '(${1:resource \\\$result_id})';},
	{display = 'mssql_fetch_batch'; insert = '(${1:resource \\\$result})';},
	{display = 'mssql_fetch_field'; insert = '(${1:resource \\\$result}, ${2:[int \\\$field_offset = -1]})';},
	{display = 'mssql_fetch_object'; insert = '(${1:resource \\\$result})';},
	{display = 'mssql_fetch_row'; insert = '(${1:resource \\\$result})';},
	{display = 'mssql_field_length'; insert = '(${1:resource \\\$result}, ${2:[int \\\$offset = -1]})';},
	{display = 'mssql_field_name'; insert = '(${1:resource \\\$result}, ${2:[int \\\$offset = -1]})';},
	{display = 'mssql_field_seek'; insert = '(${1:resource \\\$result}, ${2:int \\\$field_offset})';},
	{display = 'mssql_field_type'; insert = '(${1:resource \\\$result}, ${2:[int \\\$offset = -1]})';},
	{display = 'mssql_free_result'; insert = '(${1:resource \\\$result})';},
	{display = 'mssql_free_statement'; insert = '(${1:resource \\\$stmt})';},
	{display = 'mssql_get_last_message'; insert = '()';},
	{display = 'mssql_guid_string'; insert = '(${1:string \\\$binary}, ${2:[bool \\\$short_format = false]})';},
	{display = 'mssql_init'; insert = '(${1:string \\\$sp_name}, ${2:[resource \\\$link_identifier]})';},
	{display = 'mssql_min_error_severity'; insert = '(${1:int \\\$severity})';},
	{display = 'mssql_min_message_severity'; insert = '(${1:int \\\$severity})';},
	{display = 'mssql_next_result'; insert = '(${1:resource \\\$result_id})';},
	{display = 'mssql_num_fields'; insert = '(${1:resource \\\$result})';},
	{display = 'mssql_num_rows'; insert = '(${1:resource \\\$result})';},
	{display = 'mssql_pconnect'; insert = '(${1:[string \\\$servername]}, ${2:[string \\\$username]}, ${3:[string \\\$password]}, ${4:[bool \\\$new_link = false]})';},
	{display = 'mssql_query'; insert = '(${1:string \\\$query}, ${2:[resource \\\$link_identifier]}, ${3:[int \\\$batch_size]})';},
	{display = 'mssql_result'; insert = '(${1:resource \\\$result}, ${2:int \\\$row}, ${3:mixed \\\$field})';},
	{display = 'mssql_rows_affected'; insert = '(${1:resource \\\$link_identifier})';},
	{display = 'mssql_select_db'; insert = '(${1:string \\\$database_name}, ${2:[resource \\\$link_identifier]})';},
	{display = 'mt_getrandmax'; insert = '()';},
	{display = 'mt_rand'; insert = '(${1:int \\\$min}, ${2:int \\\$max})';},
	{display = 'mt_srand'; insert = '(${1:[int \\\$seed]})';},
	{display = 'mysql_affected_rows'; insert = '(${1:[resource \\\$link_identifier]})';},
	{display = 'mysql_client_encoding'; insert = '(${1:[resource \\\$link_identifier]})';},
	{display = 'mysql_close'; insert = '(${1:[resource \\\$link_identifier]})';},
	{display = 'mysql_connect'; insert = '(${1:[string \\\$server = ini_get(\"mysql.default_host\")]}, ${2:[string \\\$username = ini_get(\"mysql.default_user\")]}, ${3:[string \\\$password = ini_get(\"mysql.default_password\")]}, ${4:[bool \\\$new_link = false]}, ${5:[int \\\$client_flags]})';},
	{display = 'mysql_create_db'; insert = '(${1:string \\\$database_name}, ${2:[resource \\\$link_identifier]})';},
	{display = 'mysql_data_seek'; insert = '(${1:resource \\\$result}, ${2:int \\\$row_number})';},
	{display = 'mysql_db_name'; insert = '(${1:resource \\\$result}, ${2:int \\\$row}, ${3:[mixed \\\$field]})';},
	{display = 'mysql_db_query'; insert = '(${1:string \\\$database}, ${2:string \\\$query}, ${3:[resource \\\$link_identifier]})';},
	{display = 'mysql_drop_db'; insert = '(${1:string \\\$database_name}, ${2:[resource \\\$link_identifier]})';},
	{display = 'mysql_errno'; insert = '(${1:[resource \\\$link_identifier]})';},
	{display = 'mysql_error'; insert = '(${1:[resource \\\$link_identifier]})';},
	{display = 'mysql_escape_string'; insert = '(${1:string \\\$unescaped_string})';},
	{display = 'mysql_fetch_array'; insert = '(${1:resource \\\$result}, ${2:[int \\\$result_type = MYSQL_BOTH]})';},
	{display = 'mysql_fetch_assoc'; insert = '(${1:resource \\\$result})';},
	{display = 'mysql_fetch_field'; insert = '(${1:resource \\\$result}, ${2:[int \\\$field_offset]})';},
	{display = 'mysql_fetch_lengths'; insert = '(${1:resource \\\$result})';},
	{display = 'mysql_fetch_object'; insert = '(${1:resource \\\$result}, ${2:[string \\\$class_name]}, ${3:[array \\\$params]})';},
	{display = 'mysql_fetch_row'; insert = '(${1:resource \\\$result})';},
	{display = 'mysql_field_flags'; insert = '(${1:resource \\\$result}, ${2:int \\\$field_offset})';},
	{display = 'mysql_field_len'; insert = '(${1:resource \\\$result}, ${2:int \\\$field_offset})';},
	{display = 'mysql_field_name'; insert = '(${1:resource \\\$result}, ${2:int \\\$field_offset})';},
	{display = 'mysql_field_seek'; insert = '(${1:resource \\\$result}, ${2:int \\\$field_offset})';},
	{display = 'mysql_field_table'; insert = '(${1:resource \\\$result}, ${2:int \\\$field_offset})';},
	{display = 'mysql_field_type'; insert = '(${1:resource \\\$result}, ${2:int \\\$field_offset})';},
	{display = 'mysql_free_result'; insert = '(${1:resource \\\$result})';},
	{display = 'mysql_get_client_info'; insert = '()';},
	{display = 'mysql_get_host_info'; insert = '(${1:[resource \\\$link_identifier]})';},
	{display = 'mysql_get_proto_info'; insert = '(${1:[resource \\\$link_identifier]})';},
	{display = 'mysql_get_server_info'; insert = '(${1:[resource \\\$link_identifier]})';},
	{display = 'mysql_info'; insert = '(${1:[resource \\\$link_identifier]})';},
	{display = 'mysql_insert_id'; insert = '(${1:[resource \\\$link_identifier]})';},
	{display = 'mysql_list_dbs'; insert = '(${1:[resource \\\$link_identifier]})';},
	{display = 'mysql_list_fields'; insert = '(${1:string \\\$database_name}, ${2:string \\\$table_name}, ${3:[resource \\\$link_identifier]})';},
	{display = 'mysql_list_processes'; insert = '(${1:[resource \\\$link_identifier]})';},
	{display = 'mysql_list_tables'; insert = '(${1:string \\\$database}, ${2:[resource \\\$link_identifier]})';},
	{display = 'mysql_num_fields'; insert = '(${1:resource \\\$result})';},
	{display = 'mysql_num_rows'; insert = '(${1:resource \\\$result})';},
	{display = 'mysql_pconnect'; insert = '(${1:[string \\\$server = ini_get(\"mysql.default_host\")]}, ${2:[string \\\$username = ini_get(\"mysql.default_user\")]}, ${3:[string \\\$password = ini_get(\"mysql.default_password\")]}, ${4:[int \\\$client_flags]})';},
	{display = 'mysql_ping'; insert = '(${1:[resource \\\$link_identifier]})';},
	{display = 'mysql_query'; insert = '(${1:string \\\$query}, ${2:[resource \\\$link_identifier]})';},
	{display = 'mysql_real_escape_string'; insert = '(${1:string \\\$unescaped_string}, ${2:[resource \\\$link_identifier]})';},
	{display = 'mysql_result'; insert = '(${1:resource \\\$result}, ${2:int \\\$row}, ${3:[mixed \\\$field]})';},
	{display = 'mysql_select_db'; insert = '(${1:string \\\$database_name}, ${2:[resource \\\$link_identifier]})';},
	{display = 'mysql_set_charset'; insert = '(${1:string \\\$charset}, ${2:[resource \\\$link_identifier]})';},
	{display = 'mysql_stat'; insert = '(${1:[resource \\\$link_identifier]})';},
	{display = 'mysql_tablename'; insert = '(${1:resource \\\$result}, ${2:int \\\$i})';},
	{display = 'mysql_thread_id'; insert = '(${1:[resource \\\$link_identifier]})';},
	{display = 'mysql_unbuffered_query'; insert = '(${1:string \\\$query}, ${2:[resource \\\$link_identifier]})';},
	{display = 'mysqli'; insert = '(${1:[string \\\$host = ini_get(\"mysqli.default_host\")]}, ${2:[string \\\$username = ini_get(\"mysqli.default_user\")]}, ${3:[string \\\$passwd = ini_get(\"mysqli.default_pw\")]}, ${4:[string \\\$dbname = \"\"]}, ${5:[int \\\$port = ini_get(\"mysqli.default_port\")]}, ${6:[string \\\$socket = ini_get(\"mysqli.default_socket\")]})';},
	{display = 'mysqli_affected_rows'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_autocommit'; insert = '(${1:bool \\\$mode}, ${2:mysqli \\\$link})';},
	{display = 'mysqli_bind_param'; insert = '()';},
	{display = 'mysqli_bind_result'; insert = '()';},
	{display = 'mysqli_change_user'; insert = '(${1:string \\\$user}, ${2:string \\\$password}, ${3:string \\\$database}, ${4:mysqli \\\$link})';},
	{display = 'mysqli_character_set_name'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_client_encoding'; insert = '()';},
	{display = 'mysqli_close'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_commit'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_connect'; insert = '()';},
	{display = 'mysqli_connect_errno'; insert = '()';},
	{display = 'mysqli_connect_error'; insert = '()';},
	{display = 'mysqli_data_seek'; insert = '(${1:int \\\$offset}, ${2:mysqli_result \\\$result})';},
	{display = 'mysqli_debug'; insert = '(${1:string \\\$message})';},
	{display = 'mysqli_disable_reads_from_master'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_disable_rpl_parse'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_dump_debug_info'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_embedded_server_end'; insert = '()';},
	{display = 'mysqli_embedded_server_start'; insert = '(${1:bool \\\$start}, ${2:array \\\$arguments}, ${3:array \\\$groups})';},
	{display = 'mysqli_enable_reads_from_master'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_enable_rpl_parse'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_errno'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_error'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_escape_string'; insert = '()';},
	{display = 'mysqli_execute'; insert = '()';},
	{display = 'mysqli_fetch'; insert = '()';},
	{display = 'mysqli_fetch_all'; insert = '(${1:[int \\\$resulttype = MYSQLI_NUM]}, ${2:mysqli_result \\\$result})';},
	{display = 'mysqli_fetch_array'; insert = '(${1:[int \\\$resulttype = MYSQLI_BOTH]}, ${2:mysqli_result \\\$result})';},
	{display = 'mysqli_fetch_assoc'; insert = '(${1:mysqli_result \\\$result})';},
	{display = 'mysqli_fetch_field'; insert = '(${1:mysqli_result \\\$result})';},
	{display = 'mysqli_fetch_field_direct'; insert = '(${1:int \\\$fieldnr}, ${2:mysqli_result \\\$result})';},
	{display = 'mysqli_fetch_fields'; insert = '(${1:mysqli_result \\\$result})';},
	{display = 'mysqli_fetch_lengths'; insert = '(${1:mysqli_result \\\$result})';},
	{display = 'mysqli_fetch_object'; insert = '(${1:[string \\\$class_name]}, ${2:[array \\\$params]}, ${3:mysqli_result \\\$result})';},
	{display = 'mysqli_fetch_row'; insert = '(${1:mysqli_result \\\$result})';},
	{display = 'mysqli_field_count'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_field_seek'; insert = '(${1:int \\\$fieldnr}, ${2:mysqli_result \\\$result})';},
	{display = 'mysqli_field_tell'; insert = '(${1:mysqli_result \\\$result})';},
	{display = 'mysqli_free_result'; insert = '(${1:mysqli_result \\\$result})';},
	{display = 'mysqli_get_cache_stats'; insert = '()';},
	{display = 'mysqli_get_charset'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_get_client_info'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_get_client_stats'; insert = '()';},
	{display = 'mysqli_get_client_version'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_get_connection_stats'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_get_host_info'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_get_metadata'; insert = '()';},
	{display = 'mysqli_get_proto_info'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_get_server_info'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_get_server_version'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_get_warnings'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_info'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_init'; insert = '()';},
	{display = 'mysqli_insert_id'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_kill'; insert = '(${1:int \\\$processid}, ${2:mysqli \\\$link})';},
	{display = 'mysqli_master_query'; insert = '(${1:mysqli \\\$link}, ${2:string \\\$query})';},
	{display = 'mysqli_more_results'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_multi_query'; insert = '(${1:string \\\$query}, ${2:mysqli \\\$link})';},
	{display = 'mysqli_next_result'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_num_fields'; insert = '(${1:mysqli_result \\\$result})';},
	{display = 'mysqli_num_rows'; insert = '(${1:mysqli_result \\\$result})';},
	{display = 'mysqli_options'; insert = '(${1:int \\\$option}, ${2:mixed \\\$value}, ${3:mysqli \\\$link})';},
	{display = 'mysqli_param_count'; insert = '()';},
	{display = 'mysqli_ping'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_poll'; insert = '(${1:array \\\$read}, ${2:array \\\$error}, ${3:array \\\$reject}, ${4:int \\\$sec}, ${5:[int \\\$usec]})';},
	{display = 'mysqli_prepare'; insert = '(${1:string \\\$query}, ${2:mysqli \\\$link})';},
	{display = 'mysqli_query'; insert = '(${1:string \\\$query}, ${2:[int \\\$resultmode = MYSQLI_STORE_RESULT]}, ${3:mysqli \\\$link})';},
	{display = 'mysqli_real_connect'; insert = '(${1:[string \\\$host]}, ${2:[string \\\$username]}, ${3:[string \\\$passwd]}, ${4:[string \\\$dbname]}, ${5:[int \\\$port]}, ${6:[string \\\$socket]}, ${7:[int \\\$flags]}, ${8:mysqli \\\$link})';},
	{display = 'mysqli_real_escape_string'; insert = '(${1:string \\\$escapestr}, ${2:mysqli \\\$link})';},
	{display = 'mysqli_real_query'; insert = '(${1:string \\\$query}, ${2:mysqli \\\$link})';},
	{display = 'mysqli_reap_async_query'; insert = '(${1:mysql \\\$link})';},
	{display = 'mysqli_report'; insert = '(${1:int \\\$flags})';},
	{display = 'mysqli_rollback'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_rpl_parse_enabled'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_rpl_probe'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_rpl_query_type'; insert = '(${1:string \\\$query}, ${2:mysqli \\\$link})';},
	{display = 'mysqli_select_db'; insert = '(${1:string \\\$dbname}, ${2:mysqli \\\$link})';},
	{display = 'mysqli_send_long_data'; insert = '()';},
	{display = 'mysqli_send_query'; insert = '(${1:string \\\$query}, ${2:mysqli \\\$link})';},
	{display = 'mysqli_set_charset'; insert = '(${1:string \\\$charset}, ${2:mysqli \\\$link})';},
	{display = 'mysqli_set_local_infile_default'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_set_local_infile_handler'; insert = '(${1:mysqli \\\$link}, ${2:callback \\\$read_func})';},
	{display = 'mysqli_set_opt'; insert = '()';},
	{display = 'mysqli_slave_query'; insert = '(${1:mysqli \\\$link}, ${2:string \\\$query})';},
	{display = 'mysqli_sqlstate'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_ssl_set'; insert = '(${1:string \\\$key}, ${2:string \\\$cert}, ${3:string \\\$ca}, ${4:string \\\$capath}, ${5:string \\\$cipher}, ${6:mysqli \\\$link})';},
	{display = 'mysqli_stat'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_stmt_affected_rows'; insert = '(${1:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_attr_get'; insert = '(${1:int \\\$attr}, ${2:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_attr_set'; insert = '(${1:int \\\$attr}, ${2:int \\\$mode}, ${3:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_bind_param'; insert = '(${1:string \\\$types}, ${2:mixed \\\$var1}, ${3:[mixed ...]}, ${4:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_bind_result'; insert = '(${1:mixed \\\$var1}, ${2:[mixed ...]}, ${3:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_close'; insert = '(${1:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_data_seek'; insert = '(${1:int \\\$offset}, ${2:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_errno'; insert = '(${1:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_error'; insert = '(${1:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_execute'; insert = '(${1:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_fetch'; insert = '(${1:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_field_count'; insert = '(${1:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_free_result'; insert = '(${1:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_get_result'; insert = '(${1:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_get_warnings'; insert = '(${1:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_init'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_stmt_insert_id'; insert = '(${1:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_num_rows'; insert = '(${1:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_param_count'; insert = '(${1:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_prepare'; insert = '(${1:string \\\$query}, ${2:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_reset'; insert = '(${1:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_result_metadata'; insert = '(${1:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_send_long_data'; insert = '(${1:int \\\$param_nr}, ${2:string \\\$data}, ${3:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_sqlstate'; insert = '(${1:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_stmt_store_result'; insert = '(${1:mysqli_stmt \\\$stmt})';},
	{display = 'mysqli_store_result'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_thread_id'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_thread_safe'; insert = '()';},
	{display = 'mysqli_use_result'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqli_warning'; insert = '()';},
	{display = 'mysqli_warning_count'; insert = '(${1:mysqli \\\$link})';},
	{display = 'mysqlnd_ms_get_stats'; insert = '()';},
	{display = 'mysqlnd_ms_query_is_select'; insert = '(${1:string \\\$query})';},
	{display = 'mysqlnd_ms_set_user_pick_server'; insert = '(${1:string \\\$function})';},
	{display = 'mysqlnd_qc_change_handler'; insert = '(${1:mixed \\\$handler})';},
	{display = 'mysqlnd_qc_clear_cache'; insert = '()';},
	{display = 'mysqlnd_qc_get_cache_info'; insert = '()';},
	{display = 'mysqlnd_qc_get_core_stats'; insert = '()';},
	{display = 'mysqlnd_qc_get_handler'; insert = '()';},
	{display = 'mysqlnd_qc_get_query_trace_log'; insert = '()';},
	{display = 'mysqlnd_qc_set_user_handlers'; insert = '(${1:string \\\$get_hash}, ${2:string \\\$find_query_in_cache}, ${3:string \\\$return_to_cache}, ${4:string \\\$add_query_to_cache_if_not_exists}, ${5:string \\\$query_is_select}, ${6:string \\\$update_query_run_time_stats}, ${7:string \\\$get_stats}, ${8:string \\\$clear_cache})';},
	{display = 'natcasesort'; insert = '(${1:array \\\$array})';},
	{display = 'natsort'; insert = '(${1:array \\\$array})';},
	{display = 'next'; insert = '(${1:array \\\$array})';},
	{display = 'ngettext'; insert = '(${1:string \\\$msgid1}, ${2:string \\\$msgid2}, ${3:int \\\$n})';},
	{display = 'nl2br'; insert = '(${1:string \\\$string}, ${2:[bool \\\$is_xhtml = true]})';},
	{display = 'nl_langinfo'; insert = '(${1:int \\\$item})';},
	{display = 'normalizer_is_normalized'; insert = '(${1:string \\\$input}, ${2:[string \\\$form = Normalizer::FORM_C]})';},
	{display = 'normalizer_normalize'; insert = '(${1:string \\\$input}, ${2:[string \\\$form = Normalizer::FORM_C]})';},
	{display = 'nsapi_request_headers'; insert = '()';},
	{display = 'nsapi_response_headers'; insert = '()';},
	{display = 'nsapi_virtual'; insert = '(${1:string \\\$uri})';},
	{display = 'number_format'; insert = '(${1:float \\\$number}, ${2:int \\\$decimals}, ${3:string \\\$dec_point}, ${4:string \\\$thousands_sep})';},
	{display = 'numfmt_create'; insert = '(${1:string \\\$locale}, ${2:int \\\$style}, ${3:[string \\\$pattern]})';},
	{display = 'numfmt_format'; insert = '(${1:number \\\$value}, ${2:[int \\\$type]}, ${3:NumberFormatter \\\$fmt})';},
	{display = 'numfmt_format_currency'; insert = '(${1:float \\\$value}, ${2:string \\\$currency}, ${3:NumberFormatter \\\$fmt})';},
	{display = 'numfmt_get_attribute'; insert = '(${1:int \\\$attr}, ${2:NumberFormatter \\\$fmt})';},
	{display = 'numfmt_get_error_code'; insert = '(${1:NumberFormatter \\\$fmt})';},
	{display = 'numfmt_get_error_message'; insert = '(${1:NumberFormatter \\\$fmt})';},
	{display = 'numfmt_get_locale'; insert = '(${1:[int \\\$type]}, ${2:NumberFormatter \\\$fmt})';},
	{display = 'numfmt_get_pattern'; insert = '(${1:NumberFormatter \\\$fmt})';},
	{display = 'numfmt_get_symbol'; insert = '(${1:int \\\$attr}, ${2:NumberFormatter \\\$fmt})';},
	{display = 'numfmt_get_text_attribute'; insert = '(${1:int \\\$attr}, ${2:NumberFormatter \\\$fmt})';},
	{display = 'numfmt_parse'; insert = '(${1:string \\\$value}, ${2:[int \\\$type]}, ${3:[int \\\$position]}, ${4:NumberFormatter \\\$fmt})';},
	{display = 'numfmt_parse_currency'; insert = '(${1:string \\\$value}, ${2:string \\\$currency}, ${3:[int \\\$position]}, ${4:NumberFormatter \\\$fmt})';},
	{display = 'numfmt_set_attribute'; insert = '(${1:int \\\$attr}, ${2:int \\\$value}, ${3:NumberFormatter \\\$fmt})';},
	{display = 'numfmt_set_pattern'; insert = '(${1:string \\\$pattern}, ${2:NumberFormatter \\\$fmt})';},
	{display = 'numfmt_set_symbol'; insert = '(${1:int \\\$attr}, ${2:string \\\$value}, ${3:NumberFormatter \\\$fmt})';},
	{display = 'numfmt_set_text_attribute'; insert = '(${1:int \\\$attr}, ${2:string \\\$value}, ${3:NumberFormatter \\\$fmt})';},
	{display = 'ob_clean'; insert = '()';},
	{display = 'ob_deflatehandler'; insert = '(${1:string \\\$data}, ${2:int \\\$mode})';},
	{display = 'ob_end_clean'; insert = '()';},
	{display = 'ob_end_flush'; insert = '()';},
	{display = 'ob_etaghandler'; insert = '(${1:string \\\$data}, ${2:int \\\$mode})';},
	{display = 'ob_flush'; insert = '()';},
	{display = 'ob_get_clean'; insert = '()';},
	{display = 'ob_get_contents'; insert = '()';},
	{display = 'ob_get_flush'; insert = '()';},
	{display = 'ob_get_length'; insert = '()';},
	{display = 'ob_get_level'; insert = '()';},
	{display = 'ob_get_status'; insert = '(${1:[bool \\\$full_status = FALSE]})';},
	{display = 'ob_gzhandler'; insert = '(${1:string \\\$buffer}, ${2:int \\\$mode})';},
	{display = 'ob_iconv_handler'; insert = '(${1:string \\\$contents}, ${2:int \\\$status})';},
	{display = 'ob_implicit_flush'; insert = '(${1:[int \\\$flag = true]})';},
	{display = 'ob_inflatehandler'; insert = '(${1:string \\\$data}, ${2:int \\\$mode})';},
	{display = 'ob_list_handlers'; insert = '()';},
	{display = 'ob_start'; insert = '(${1:[callback \\\$output_callback]}, ${2:[int \\\$chunk_size]}, ${3:[bool \\\$erase = true]})';},
	{display = 'ob_tidyhandler'; insert = '(${1:string \\\$input}, ${2:[int \\\$mode]})';},
	{display = 'oci_bind_array_by_name'; insert = '(${1:resource \\\$statement}, ${2:string \\\$name}, ${3:array \\\$var_array}, ${4:int \\\$max_table_length}, ${5:[int \\\$max_item_length = -1]}, ${6:[int \\\$type = SQLT_AFC]})';},
	{display = 'oci_bind_by_name'; insert = '(${1:resource \\\$statement}, ${2:string \\\$bv_name}, ${3:mixed \\\$variable}, ${4:[int \\\$maxlength = -1]}, ${5:[int \\\$type = SQLT_CHR]})';},
	{display = 'oci_cancel'; insert = '(${1:resource \\\$statement})';},
	{display = 'oci_client_version'; insert = '()';},
	{display = 'oci_close'; insert = '(${1:resource \\\$connection})';},
	{display = 'oci_commit'; insert = '(${1:resource \\\$connection})';},
	{display = 'oci_connect'; insert = '(${1:string \\\$username}, ${2:string \\\$password}, ${3:[string \\\$connection_string]}, ${4:[string \\\$character_set]}, ${5:[int \\\$session_mode]})';},
	{display = 'oci_define_by_name'; insert = '(${1:resource \\\$statement}, ${2:string \\\$column_name}, ${3:mixed \\\$variable}, ${4:[int \\\$type = SQLT_CHR]})';},
	{display = 'oci_error'; insert = '(${1:[resource \\\$resource]})';},
	{display = 'oci_execute'; insert = '(${1:resource \\\$statement}, ${2:[int \\\$mode = OCI_COMMIT_ON_SUCCESS]})';},
	{display = 'oci_fetch'; insert = '(${1:resource \\\$statement})';},
	{display = 'oci_fetch_all'; insert = '(${1:resource \\\$statement}, ${2:array \\\$output}, ${3:[int \\\$skip]}, ${4:[int \\\$maxrows = -1]}, ${5:[int \\\$flags =  + ]})';},
	{display = 'oci_fetch_array'; insert = '(${1:resource \\\$statement}, ${2:[int \\\$mode]})';},
	{display = 'oci_fetch_assoc'; insert = '(${1:resource \\\$statement})';},
	{display = 'oci_fetch_object'; insert = '(${1:resource \\\$statement})';},
	{display = 'oci_fetch_row'; insert = '(${1:resource \\\$statement})';},
	{display = 'oci_field_is_null'; insert = '(${1:resource \\\$statement}, ${2:mixed \\\$field})';},
	{display = 'oci_field_name'; insert = '(${1:resource \\\$statement}, ${2:int \\\$field})';},
	{display = 'oci_field_precision'; insert = '(${1:resource \\\$statement}, ${2:int \\\$field})';},
	{display = 'oci_field_scale'; insert = '(${1:resource \\\$statement}, ${2:int \\\$field})';},
	{display = 'oci_field_size'; insert = '(${1:resource \\\$statement}, ${2:mixed \\\$field})';},
	{display = 'oci_field_type'; insert = '(${1:resource \\\$statement}, ${2:int \\\$field})';},
	{display = 'oci_field_type_raw'; insert = '(${1:resource \\\$statement}, ${2:int \\\$field})';},
	{display = 'oci_free_statement'; insert = '(${1:resource \\\$statement})';},
	{display = 'oci_internal_debug'; insert = '(${1:bool \\\$onoff})';},
	{display = 'oci_lob_copy'; insert = '(${1:OCI-Lob \\\$lob_to}, ${2:OCI-Lob \\\$lob_from}, ${3:[int \\\$length]})';},
	{display = 'oci_lob_is_equal'; insert = '(${1:OCI-Lob \\\$lob1}, ${2:OCI-Lob \\\$lob2})';},
	{display = 'oci_new_collection'; insert = '(${1:resource \\\$connection}, ${2:string \\\$tdo}, ${3:[string \\\$schema]})';},
	{display = 'oci_new_connect'; insert = '(${1:string \\\$username}, ${2:string \\\$password}, ${3:[string \\\$connection_string]}, ${4:[string \\\$character_set]}, ${5:[int \\\$session_mode]})';},
	{display = 'oci_new_cursor'; insert = '(${1:resource \\\$connection})';},
	{display = 'oci_new_descriptor'; insert = '(${1:resource \\\$connection}, ${2:[int \\\$type = OCI_DTYPE_LOB]})';},
	{display = 'oci_num_fields'; insert = '(${1:resource \\\$statement})';},
	{display = 'oci_num_rows'; insert = '(${1:resource \\\$statement})';},
	{display = 'oci_parse'; insert = '(${1:resource \\\$connection}, ${2:string \\\$sql_text})';},
	{display = 'oci_password_change'; insert = '(${1:resource \\\$connection}, ${2:string \\\$username}, ${3:string \\\$old_password}, ${4:string \\\$new_password}, ${5:string \\\$dbname})';},
	{display = 'oci_pconnect'; insert = '(${1:string \\\$username}, ${2:string \\\$password}, ${3:[string \\\$connection_string]}, ${4:[string \\\$character_set]}, ${5:[int \\\$session_mode]})';},
	{display = 'oci_result'; insert = '(${1:resource \\\$statement}, ${2:mixed \\\$field})';},
	{display = 'oci_rollback'; insert = '(${1:resource \\\$connection})';},
	{display = 'oci_server_version'; insert = '(${1:resource \\\$connection})';},
	{display = 'oci_set_action'; insert = '(${1:resource \\\$connection}, ${2:string \\\$action_name})';},
	{display = 'oci_set_client_identifier'; insert = '(${1:resource \\\$connection}, ${2:string \\\$client_identifier})';},
	{display = 'oci_set_client_info'; insert = '(${1:resource \\\$connection}, ${2:string \\\$client_info})';},
	{display = 'oci_set_edition'; insert = '(${1:string \\\$edition})';},
	{display = 'oci_set_module_name'; insert = '(${1:resource \\\$connection}, ${2:string \\\$module_name})';},
	{display = 'oci_set_prefetch'; insert = '(${1:resource \\\$statement}, ${2:int \\\$rows})';},
	{display = 'oci_statement_type'; insert = '(${1:resource \\\$statement})';},
	{display = 'ocibindbyname'; insert = '()';},
	{display = 'ocicancel'; insert = '()';},
	{display = 'ocicloselob'; insert = '()';},
	{display = 'ocicollappend'; insert = '()';},
	{display = 'ocicollassign'; insert = '()';},
	{display = 'ocicollassignelem'; insert = '()';},
	{display = 'ocicollgetelem'; insert = '()';},
	{display = 'ocicollmax'; insert = '()';},
	{display = 'ocicollsize'; insert = '()';},
	{display = 'ocicolltrim'; insert = '()';},
	{display = 'ocicolumnisnull'; insert = '()';},
	{display = 'ocicolumnname'; insert = '()';},
	{display = 'ocicolumnprecision'; insert = '()';},
	{display = 'ocicolumnscale'; insert = '()';},
	{display = 'ocicolumnsize'; insert = '()';},
	{display = 'ocicolumntype'; insert = '()';},
	{display = 'ocicolumntyperaw'; insert = '()';},
	{display = 'ocicommit'; insert = '()';},
	{display = 'ocidefinebyname'; insert = '()';},
	{display = 'ocierror'; insert = '()';},
	{display = 'ociexecute'; insert = '()';},
	{display = 'ocifetch'; insert = '()';},
	{display = 'ocifetchinto'; insert = '(${1:resource \\\$statement}, ${2:array \\\$result}, ${3:[int \\\$mode =  + ]})';},
	{display = 'ocifetchstatement'; insert = '()';},
	{display = 'ocifreecollection'; insert = '()';},
	{display = 'ocifreecursor'; insert = '()';},
	{display = 'ocifreedesc'; insert = '()';},
	{display = 'ocifreestatement'; insert = '()';},
	{display = 'ociinternaldebug'; insert = '()';},
	{display = 'ociloadlob'; insert = '()';},
	{display = 'ocilogoff'; insert = '()';},
	{display = 'ocilogon'; insert = '()';},
	{display = 'ocinewcollection'; insert = '()';},
	{display = 'ocinewcursor'; insert = '()';},
	{display = 'ocinewdescriptor'; insert = '()';},
	{display = 'ocinlogon'; insert = '()';},
	{display = 'ocinumcols'; insert = '()';},
	{display = 'ociparse'; insert = '()';},
	{display = 'ociplogon'; insert = '()';},
	{display = 'ociresult'; insert = '()';},
	{display = 'ocirollback'; insert = '()';},
	{display = 'ocirowcount'; insert = '()';},
	{display = 'ocisavelob'; insert = '()';},
	{display = 'ocisavelobfile'; insert = '()';},
	{display = 'ociserverversion'; insert = '()';},
	{display = 'ocisetprefetch'; insert = '()';},
	{display = 'ocistatementtype'; insert = '()';},
	{display = 'ociwritelobtofile'; insert = '()';},
	{display = 'ociwritetemporarylob'; insert = '()';},
	{display = 'octdec'; insert = '(${1:string \\\$octal_string})';},
	{display = 'odbc_autocommit'; insert = '(${1:resource \\\$connection_id}, ${2:[bool \\\$OnOff = false]})';},
	{display = 'odbc_binmode'; insert = '(${1:resource \\\$result_id}, ${2:int \\\$mode})';},
	{display = 'odbc_close'; insert = '(${1:resource \\\$connection_id})';},
	{display = 'odbc_close_all'; insert = '()';},
	{display = 'odbc_columnprivileges'; insert = '(${1:resource \\\$connection_id}, ${2:string \\\$qualifier}, ${3:string \\\$owner}, ${4:string \\\$table_name}, ${5:string \\\$column_name})';},
	{display = 'odbc_columns'; insert = '(${1:resource \\\$connection_id}, ${2:[string \\\$qualifier]}, ${3:[string \\\$schema]}, ${4:[string \\\$table_name]}, ${5:[string \\\$column_name]})';},
	{display = 'odbc_commit'; insert = '(${1:resource \\\$connection_id})';},
	{display = 'odbc_connect'; insert = '(${1:string \\\$dsn}, ${2:string \\\$user}, ${3:string \\\$password}, ${4:[int \\\$cursor_type]})';},
	{display = 'odbc_cursor'; insert = '(${1:resource \\\$result_id})';},
	{display = 'odbc_data_source'; insert = '(${1:resource \\\$connection_id}, ${2:int \\\$fetch_type})';},
	{display = 'odbc_do'; insert = '()';},
	{display = 'odbc_error'; insert = '(${1:[resource \\\$connection_id]})';},
	{display = 'odbc_errormsg'; insert = '(${1:[resource \\\$connection_id]})';},
	{display = 'odbc_exec'; insert = '(${1:resource \\\$connection_id}, ${2:string \\\$query_string}, ${3:[int \\\$flags]})';},
	{display = 'odbc_execute'; insert = '(${1:resource \\\$result_id}, ${2:[array \\\$parameters_array]})';},
	{display = 'odbc_fetch_array'; insert = '(${1:resource \\\$result}, ${2:[int \\\$rownumber]})';},
	{display = 'odbc_fetch_into'; insert = '(${1:resource \\\$result_id}, ${2:array \\\$result_array}, ${3:[int \\\$rownumber]})';},
	{display = 'odbc_fetch_object'; insert = '(${1:resource \\\$result}, ${2:[int \\\$rownumber]})';},
	{display = 'odbc_fetch_row'; insert = '(${1:resource \\\$result_id}, ${2:[int \\\$row_number]})';},
	{display = 'odbc_field_len'; insert = '(${1:resource \\\$result_id}, ${2:int \\\$field_number})';},
	{display = 'odbc_field_name'; insert = '(${1:resource \\\$result_id}, ${2:int \\\$field_number})';},
	{display = 'odbc_field_num'; insert = '(${1:resource \\\$result_id}, ${2:string \\\$field_name})';},
	{display = 'odbc_field_precision'; insert = '()';},
	{display = 'odbc_field_scale'; insert = '(${1:resource \\\$result_id}, ${2:int \\\$field_number})';},
	{display = 'odbc_field_type'; insert = '(${1:resource \\\$result_id}, ${2:int \\\$field_number})';},
	{display = 'odbc_foreignkeys'; insert = '(${1:resource \\\$connection_id}, ${2:string \\\$pk_qualifier}, ${3:string \\\$pk_owner}, ${4:string \\\$pk_table}, ${5:string \\\$fk_qualifier}, ${6:string \\\$fk_owner}, ${7:string \\\$fk_table})';},
	{display = 'odbc_free_result'; insert = '(${1:resource \\\$result_id})';},
	{display = 'odbc_gettypeinfo'; insert = '(${1:resource \\\$connection_id}, ${2:[int \\\$data_type]})';},
	{display = 'odbc_longreadlen'; insert = '(${1:resource \\\$result_id}, ${2:int \\\$length})';},
	{display = 'odbc_next_result'; insert = '(${1:resource \\\$result_id})';},
	{display = 'odbc_num_fields'; insert = '(${1:resource \\\$result_id})';},
	{display = 'odbc_num_rows'; insert = '(${1:resource \\\$result_id})';},
	{display = 'odbc_pconnect'; insert = '(${1:string \\\$dsn}, ${2:string \\\$user}, ${3:string \\\$password}, ${4:[int \\\$cursor_type]})';},
	{display = 'odbc_prepare'; insert = '(${1:resource \\\$connection_id}, ${2:string \\\$query_string})';},
	{display = 'odbc_primarykeys'; insert = '(${1:resource \\\$connection_id}, ${2:string \\\$qualifier}, ${3:string \\\$owner}, ${4:string \\\$table})';},
	{display = 'odbc_procedurecolumns'; insert = '(${1:resource \\\$connection_id}, ${2:string \\\$qualifier}, ${3:string \\\$owner}, ${4:string \\\$proc}, ${5:string \\\$column})';},
	{display = 'odbc_procedures'; insert = '(${1:resource \\\$connection_id}, ${2:string \\\$qualifier}, ${3:string \\\$owner}, ${4:string \\\$name})';},
	{display = 'odbc_result'; insert = '(${1:resource \\\$result_id}, ${2:mixed \\\$field})';},
	{display = 'odbc_result_all'; insert = '(${1:resource \\\$result_id}, ${2:[string \\\$format]})';},
	{display = 'odbc_rollback'; insert = '(${1:resource \\\$connection_id})';},
	{display = 'odbc_setoption'; insert = '(${1:resource \\\$id}, ${2:int \\\$function}, ${3:int \\\$option}, ${4:int \\\$param})';},
	{display = 'odbc_specialcolumns'; insert = '(${1:resource \\\$connection_id}, ${2:int \\\$type}, ${3:string \\\$qualifier}, ${4:string \\\$owner}, ${5:string \\\$table}, ${6:int \\\$scope}, ${7:int \\\$nullable})';},
	{display = 'odbc_statistics'; insert = '(${1:resource \\\$connection_id}, ${2:string \\\$qualifier}, ${3:string \\\$owner}, ${4:string \\\$table_name}, ${5:int \\\$unique}, ${6:int \\\$accuracy})';},
	{display = 'odbc_tableprivileges'; insert = '(${1:resource \\\$connection_id}, ${2:string \\\$qualifier}, ${3:string \\\$owner}, ${4:string \\\$name})';},
	{display = 'odbc_tables'; insert = '(${1:resource \\\$connection_id}, ${2:[string \\\$qualifier]}, ${3:[string \\\$owner]}, ${4:[string \\\$name]}, ${5:[string \\\$types]})';},
	{display = 'opendir'; insert = '(${1:string \\\$path}, ${2:[resource \\\$context]})';},
	{display = 'openlog'; insert = '(${1:string \\\$ident}, ${2:int \\\$option}, ${3:int \\\$facility})';},
	{display = 'openssl_cipher_iv_length'; insert = '(${1:string \\\$method})';},
	{display = 'openssl_csr_export'; insert = '(${1:resource \\\$csr}, ${2:string \\\$out}, ${3:[bool \\\$notext = true]})';},
	{display = 'openssl_csr_export_to_file'; insert = '(${1:resource \\\$csr}, ${2:string \\\$outfilename}, ${3:[bool \\\$notext = true]})';},
	{display = 'openssl_csr_get_public_key'; insert = '(${1:mixed \\\$csr}, ${2:[bool \\\$use_shortnames = true]})';},
	{display = 'openssl_csr_get_subject'; insert = '(${1:mixed \\\$csr}, ${2:[bool \\\$use_shortnames = true]})';},
	{display = 'openssl_csr_new'; insert = '(${1:array \\\$dn}, ${2:resource \\\$privkey}, ${3:[array \\\$configargs]}, ${4:[array \\\$extraattribs]})';},
	{display = 'openssl_csr_sign'; insert = '(${1:mixed \\\$csr}, ${2:mixed \\\$cacert}, ${3:mixed \\\$priv_key}, ${4:int \\\$days}, ${5:[array \\\$configargs]}, ${6:[int \\\$serial]})';},
	{display = 'openssl_decrypt'; insert = '(${1:string \\\$data}, ${2:string \\\$method}, ${3:string \\\$password}, ${4:[bool \\\$raw_input = false]}, ${5:[string \\\$iv = \"\"]})';},
	{display = 'openssl_dh_compute_key'; insert = '(${1:string \\\$pub_key}, ${2:resource \\\$dh_key})';},
	{display = 'openssl_digest'; insert = '(${1:string \\\$data}, ${2:string \\\$method}, ${3:[bool \\\$raw_output = false]})';},
	{display = 'openssl_encrypt'; insert = '(${1:string \\\$data}, ${2:string \\\$method}, ${3:string \\\$password}, ${4:[bool \\\$raw_output = false]}, ${5:[string \\\$iv = \"\"]})';},
	{display = 'openssl_error_string'; insert = '()';},
	{display = 'openssl_free_key'; insert = '(${1:resource \\\$key_identifier})';},
	{display = 'openssl_get_cipher_methods'; insert = '(${1:[bool \\\$aliases = false]})';},
	{display = 'openssl_get_md_methods'; insert = '(${1:[bool \\\$aliases = false]})';},
	{display = 'openssl_get_privatekey'; insert = '()';},
	{display = 'openssl_get_publickey'; insert = '()';},
	{display = 'openssl_open'; insert = '(${1:string \\\$sealed_data}, ${2:string \\\$open_data}, ${3:string \\\$env_key}, ${4:mixed \\\$priv_key_id}, ${5:[string \\\$method]})';},
	{display = 'openssl_pkcs12_export'; insert = '(${1:mixed \\\$x509}, ${2:string \\\$out}, ${3:mixed \\\$priv_key}, ${4:string \\\$pass}, ${5:[array \\\$args]})';},
	{display = 'openssl_pkcs12_export_to_file'; insert = '(${1:mixed \\\$x509}, ${2:string \\\$filename}, ${3:mixed \\\$priv_key}, ${4:string \\\$pass}, ${5:[array \\\$args]})';},
	{display = 'openssl_pkcs12_read'; insert = '(${1:string \\\$pkcs12}, ${2:array \\\$certs}, ${3:string \\\$pass})';},
	{display = 'openssl_pkcs7_decrypt'; insert = '(${1:string \\\$infilename}, ${2:string \\\$outfilename}, ${3:mixed \\\$recipcert}, ${4:[mixed \\\$recipkey]})';},
	{display = 'openssl_pkcs7_encrypt'; insert = '(${1:string \\\$infile}, ${2:string \\\$outfile}, ${3:mixed \\\$recipcerts}, ${4:array \\\$headers}, ${5:[int \\\$flags]}, ${6:[int \\\$cipherid = OPENSSL_CIPHER_RC2_40]})';},
	{display = 'openssl_pkcs7_sign'; insert = '(${1:string \\\$infilename}, ${2:string \\\$outfilename}, ${3:mixed \\\$signcert}, ${4:mixed \\\$privkey}, ${5:array \\\$headers}, ${6:[int \\\$flags = PKCS7_DETACHED]}, ${7:[string \\\$extracerts]})';},
	{display = 'openssl_pkcs7_verify'; insert = '(${1:string \\\$filename}, ${2:int \\\$flags}, ${3:[string \\\$outfilename]}, ${4:[array \\\$cainfo]}, ${5:[string \\\$extracerts]}, ${6:[string \\\$content]})';},
	{display = 'openssl_pkey_export'; insert = '(${1:mixed \\\$key}, ${2:string \\\$out}, ${3:[string \\\$passphrase]}, ${4:[array \\\$configargs]})';},
	{display = 'openssl_pkey_export_to_file'; insert = '(${1:mixed \\\$key}, ${2:string \\\$outfilename}, ${3:[string \\\$passphrase]}, ${4:[array \\\$configargs]})';},
	{display = 'openssl_pkey_free'; insert = '(${1:resource \\\$key})';},
	{display = 'openssl_pkey_get_details'; insert = '(${1:resource \\\$key})';},
	{display = 'openssl_pkey_get_private'; insert = '(${1:mixed \\\$key}, ${2:[string \\\$passphrase = \"\"]})';},
	{display = 'openssl_pkey_get_public'; insert = '(${1:mixed \\\$certificate})';},
	{display = 'openssl_pkey_new'; insert = '(${1:[array \\\$configargs]})';},
	{display = 'openssl_private_decrypt'; insert = '(${1:string \\\$data}, ${2:string \\\$decrypted}, ${3:mixed \\\$key}, ${4:[int \\\$padding = OPENSSL_PKCS1_PADDING]})';},
	{display = 'openssl_private_encrypt'; insert = '(${1:string \\\$data}, ${2:string \\\$crypted}, ${3:mixed \\\$key}, ${4:[int \\\$padding = OPENSSL_PKCS1_PADDING]})';},
	{display = 'openssl_public_decrypt'; insert = '(${1:string \\\$data}, ${2:string \\\$decrypted}, ${3:mixed \\\$key}, ${4:[int \\\$padding = OPENSSL_PKCS1_PADDING]})';},
	{display = 'openssl_public_encrypt'; insert = '(${1:string \\\$data}, ${2:string \\\$crypted}, ${3:mixed \\\$key}, ${4:[int \\\$padding = OPENSSL_PKCS1_PADDING]})';},
	{display = 'openssl_random_pseudo_bytes'; insert = '(${1:int \\\$length}, ${2:[bool \\\$crypto_strong]})';},
	{display = 'openssl_seal'; insert = '(${1:string \\\$data}, ${2:string \\\$sealed_data}, ${3:array \\\$env_keys}, ${4:array \\\$pub_key_ids}, ${5:[string \\\$method]})';},
	{display = 'openssl_sign'; insert = '(${1:string \\\$data}, ${2:string \\\$signature}, ${3:mixed \\\$priv_key_id}, ${4:[int \\\$signature_alg = OPENSSL_ALGO_SHA1]})';},
	{display = 'openssl_verify'; insert = '(${1:string \\\$data}, ${2:string \\\$signature}, ${3:mixed \\\$pub_key_id}, ${4:[int \\\$signature_alg = OPENSSL_ALGO_SHA1]})';},
	{display = 'openssl_x509_check_private_key'; insert = '(${1:mixed \\\$cert}, ${2:mixed \\\$key})';},
	{display = 'openssl_x509_checkpurpose'; insert = '(${1:mixed \\\$x509cert}, ${2:int \\\$purpose}, ${3:[array \\\$cainfo = array()]}, ${4:[string \\\$untrustedfile]})';},
	{display = 'openssl_x509_export'; insert = '(${1:mixed \\\$x509}, ${2:string \\\$output}, ${3:[bool \\\$notext]})';},
	{display = 'openssl_x509_export_to_file'; insert = '(${1:mixed \\\$x509}, ${2:string \\\$outfilename}, ${3:[bool \\\$notext]})';},
	{display = 'openssl_x509_free'; insert = '(${1:resource \\\$x509cert})';},
	{display = 'openssl_x509_parse'; insert = '(${1:mixed \\\$x509cert}, ${2:[bool \\\$shortnames = true]})';},
	{display = 'openssl_x509_read'; insert = '(${1:mixed \\\$x509certdata})';},
	{display = 'ord'; insert = '(${1:string \\\$string})';},
	{display = 'output_add_rewrite_var'; insert = '(${1:string \\\$name}, ${2:string \\\$value})';},
	{display = 'output_reset_rewrite_vars'; insert = '()';},
	{display = 'overload'; insert = '(${1:string \\\$class_name})';},
	{display = 'pack'; insert = '(${1:string \\\$format}, ${2:[mixed \\\$args]}, ${3:[mixed ...]})';},
	{display = 'parse_ini_file'; insert = '(${1:string \\\$filename}, ${2:[bool \\\$process_sections = false]}, ${3:[int \\\$scanner_mode = INI_SCANNER_NORMAL]})';},
	{display = 'parse_ini_string'; insert = '(${1:string \\\$ini}, ${2:[bool \\\$process_sections = false]}, ${3:[int \\\$scanner_mode = INI_SCANNER_NORMAL]})';},
	{display = 'parse_str'; insert = '(${1:string \\\$str}, ${2:[array \\\$arr]})';},
	{display = 'parse_url'; insert = '(${1:string \\\$url}, ${2:[int \\\$component = -1]})';},
	{display = 'passthru'; insert = '(${1:string \\\$command}, ${2:[int \\\$return_var]})';},
	{display = 'pathinfo'; insert = '(${1:string \\\$path}, ${2:[int \\\$options = PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME]})';},
	{display = 'pclose'; insert = '(${1:resource \\\$handle})';},
	{display = 'pcntl_alarm'; insert = '(${1:int \\\$seconds})';},
	{display = 'pcntl_exec'; insert = '(${1:string \\\$path}, ${2:[array \\\$args]}, ${3:[array \\\$envs]})';},
	{display = 'pcntl_fork'; insert = '()';},
	{display = 'pcntl_getpriority'; insert = '(${1:[int \\\$pid = getmypid()]}, ${2:[int \\\$process_identifier = PRIO_PROCESS]})';},
	{display = 'pcntl_setpriority'; insert = '(${1:int \\\$priority}, ${2:[int \\\$pid = getmypid()]}, ${3:[int \\\$process_identifier = PRIO_PROCESS]})';},
	{display = 'pcntl_signal'; insert = '(${1:int \\\$signo}, ${2:callback \\\$handler}, ${3:[bool \\\$restart_syscalls = true]})';},
	{display = 'pcntl_signal_dispatch'; insert = '()';},
	{display = 'pcntl_sigprocmask'; insert = '(${1:int \\\$how}, ${2:array \\\$set}, ${3:[array \\\$oldset]})';},
	{display = 'pcntl_sigtimedwait'; insert = '(${1:array \\\$set}, ${2:[array \\\$siginfo]}, ${3:[int \\\$seconds]}, ${4:[int \\\$nanoseconds]})';},
	{display = 'pcntl_sigwaitinfo'; insert = '(${1:array \\\$set}, ${2:[array \\\$siginfo]})';},
	{display = 'pcntl_wait'; insert = '(${1:int \\\$status}, ${2:[int \\\$options]})';},
	{display = 'pcntl_waitpid'; insert = '(${1:int \\\$pid}, ${2:int \\\$status}, ${3:[int \\\$options]})';},
	{display = 'pcntl_wexitstatus'; insert = '(${1:int \\\$status})';},
	{display = 'pcntl_wifexited'; insert = '(${1:int \\\$status})';},
	{display = 'pcntl_wifsignaled'; insert = '(${1:int \\\$status})';},
	{display = 'pcntl_wifstopped'; insert = '(${1:int \\\$status})';},
	{display = 'pcntl_wstopsig'; insert = '(${1:int \\\$status})';},
	{display = 'pcntl_wtermsig'; insert = '(${1:int \\\$status})';},
	{display = 'pfsockopen'; insert = '(${1:string \\\$hostname}, ${2:[int \\\$port = -1]}, ${3:[int \\\$errno]}, ${4:[string \\\$errstr]}, ${5:[float \\\$timeout = ini_get(\"default_socket_timeout\")]})';},
	{display = 'pg_affected_rows'; insert = '(${1:resource \\\$result})';},
	{display = 'pg_cancel_query'; insert = '(${1:resource \\\$connection})';},
	{display = 'pg_client_encoding'; insert = '(${1:[resource \\\$connection]})';},
	{display = 'pg_close'; insert = '(${1:[resource \\\$connection]})';},
	{display = 'pg_connect'; insert = '(${1:string \\\$connection_string}, ${2:[int \\\$connect_type]})';},
	{display = 'pg_connection_busy'; insert = '(${1:resource \\\$connection})';},
	{display = 'pg_connection_reset'; insert = '(${1:resource \\\$connection})';},
	{display = 'pg_connection_status'; insert = '(${1:resource \\\$connection})';},
	{display = 'pg_convert'; insert = '(${1:resource \\\$connection}, ${2:string \\\$table_name}, ${3:array \\\$assoc_array}, ${4:[int \\\$options]})';},
	{display = 'pg_copy_from'; insert = '(${1:resource \\\$connection}, ${2:string \\\$table_name}, ${3:array \\\$rows}, ${4:[string \\\$delimiter]}, ${5:[string \\\$null_as]})';},
	{display = 'pg_copy_to'; insert = '(${1:resource \\\$connection}, ${2:string \\\$table_name}, ${3:[string \\\$delimiter]}, ${4:[string \\\$null_as]})';},
	{display = 'pg_dbname'; insert = '(${1:[resource \\\$connection]})';},
	{display = 'pg_delete'; insert = '(${1:resource \\\$connection}, ${2:string \\\$table_name}, ${3:array \\\$assoc_array}, ${4:[int \\\$options = PGSQL_DML_EXEC]})';},
	{display = 'pg_end_copy'; insert = '(${1:[resource \\\$connection]})';},
	{display = 'pg_escape_bytea'; insert = '(${1:[resource \\\$connection]}, ${2:string \\\$data})';},
	{display = 'pg_escape_string'; insert = '(${1:[resource \\\$connection]}, ${2:string \\\$data})';},
	{display = 'pg_execute'; insert = '(${1:[resource \\\$connection]}, ${2:string \\\$stmtname}, ${3:array \\\$params})';},
	{display = 'pg_fetch_all'; insert = '(${1:resource \\\$result})';},
	{display = 'pg_fetch_all_columns'; insert = '(${1:resource \\\$result}, ${2:[int \\\$column]})';},
	{display = 'pg_fetch_array'; insert = '(${1:resource \\\$result}, ${2:[int \\\$row]}, ${3:[int \\\$result_type = PGSQL_BOTH]})';},
	{display = 'pg_fetch_assoc'; insert = '(${1:resource \\\$result}, ${2:[int \\\$row]})';},
	{display = 'pg_fetch_object'; insert = '(${1:resource \\\$result}, ${2:[int \\\$row]}, ${3:[int \\\$result_type = PGSQL_ASSOC]}, ${4:[string \\\$class_name]}, ${5:[array \\\$params]})';},
	{display = 'pg_fetch_result'; insert = '(${1:resource \\\$result}, ${2:int \\\$row}, ${3:mixed \\\$field})';},
	{display = 'pg_fetch_row'; insert = '(${1:resource \\\$result}, ${2:[int \\\$row]})';},
	{display = 'pg_field_is_null'; insert = '(${1:resource \\\$result}, ${2:int \\\$row}, ${3:mixed \\\$field})';},
	{display = 'pg_field_name'; insert = '(${1:resource \\\$result}, ${2:int \\\$field_number})';},
	{display = 'pg_field_num'; insert = '(${1:resource \\\$result}, ${2:string \\\$field_name})';},
	{display = 'pg_field_prtlen'; insert = '(${1:resource \\\$result}, ${2:int \\\$row_number}, ${3:mixed \\\$field_name_or_number})';},
	{display = 'pg_field_size'; insert = '(${1:resource \\\$result}, ${2:int \\\$field_number})';},
	{display = 'pg_field_table'; insert = '(${1:resource \\\$result}, ${2:int \\\$field_number}, ${3:[bool \\\$oid_only = false]})';},
	{display = 'pg_field_type'; insert = '(${1:resource \\\$result}, ${2:int \\\$field_number})';},
	{display = 'pg_field_type_oid'; insert = '(${1:resource \\\$result}, ${2:int \\\$field_number})';},
	{display = 'pg_free_result'; insert = '(${1:resource \\\$result})';},
	{display = 'pg_get_notify'; insert = '(${1:resource \\\$connection}, ${2:[int \\\$result_type]})';},
	{display = 'pg_get_pid'; insert = '(${1:resource \\\$connection})';},
	{display = 'pg_get_result'; insert = '(${1:[resource \\\$connection]})';},
	{display = 'pg_host'; insert = '(${1:[resource \\\$connection]})';},
	{display = 'pg_insert'; insert = '(${1:resource \\\$connection}, ${2:string \\\$table_name}, ${3:array \\\$assoc_array}, ${4:[int \\\$options = PGSQL_DML_EXEC]})';},
	{display = 'pg_last_error'; insert = '(${1:[resource \\\$connection]})';},
	{display = 'pg_last_notice'; insert = '(${1:resource \\\$connection})';},
	{display = 'pg_last_oid'; insert = '(${1:resource \\\$result})';},
	{display = 'pg_lo_close'; insert = '(${1:resource \\\$large_object})';},
	{display = 'pg_lo_create'; insert = '(${1:[resource \\\$connection]}, ${2:mixed \\\$object_id})';},
	{display = 'pg_lo_export'; insert = '(${1:[resource \\\$connection]}, ${2:int \\\$oid}, ${3:string \\\$pathname})';},
	{display = 'pg_lo_import'; insert = '(${1:[resource \\\$connection]}, ${2:string \\\$pathname}, ${3:[mixed \\\$object_id]})';},
	{display = 'pg_lo_open'; insert = '(${1:resource \\\$connection}, ${2:int \\\$oid}, ${3:string \\\$mode})';},
	{display = 'pg_lo_read'; insert = '(${1:resource \\\$large_object}, ${2:[int \\\$len = 8192]})';},
	{display = 'pg_lo_read_all'; insert = '(${1:resource \\\$large_object})';},
	{display = 'pg_lo_seek'; insert = '(${1:resource \\\$large_object}, ${2:int \\\$offset}, ${3:[int \\\$whence = PGSQL_SEEK_CUR]})';},
	{display = 'pg_lo_tell'; insert = '(${1:resource \\\$large_object})';},
	{display = 'pg_lo_unlink'; insert = '(${1:resource \\\$connection}, ${2:int \\\$oid})';},
	{display = 'pg_lo_write'; insert = '(${1:resource \\\$large_object}, ${2:string \\\$data}, ${3:[int \\\$len]})';},
	{display = 'pg_meta_data'; insert = '(${1:resource \\\$connection}, ${2:string \\\$table_name})';},
	{display = 'pg_num_fields'; insert = '(${1:resource \\\$result})';},
	{display = 'pg_num_rows'; insert = '(${1:resource \\\$result})';},
	{display = 'pg_options'; insert = '(${1:[resource \\\$connection]})';},
	{display = 'pg_parameter_status'; insert = '(${1:[resource \\\$connection]}, ${2:string \\\$param_name})';},
	{display = 'pg_pconnect'; insert = '(${1:string \\\$connection_string}, ${2:[int \\\$connect_type]})';},
	{display = 'pg_ping'; insert = '(${1:[resource \\\$connection]})';},
	{display = 'pg_port'; insert = '(${1:[resource \\\$connection]})';},
	{display = 'pg_prepare'; insert = '(${1:[resource \\\$connection]}, ${2:string \\\$stmtname}, ${3:string \\\$query})';},
	{display = 'pg_put_line'; insert = '(${1:[resource \\\$connection]}, ${2:string \\\$data})';},
	{display = 'pg_query'; insert = '(${1:[resource \\\$connection]}, ${2:string \\\$query})';},
	{display = 'pg_query_params'; insert = '(${1:[resource \\\$connection]}, ${2:string \\\$query}, ${3:array \\\$params})';},
	{display = 'pg_result_error'; insert = '(${1:resource \\\$result})';},
	{display = 'pg_result_error_field'; insert = '(${1:resource \\\$result}, ${2:int \\\$fieldcode})';},
	{display = 'pg_result_seek'; insert = '(${1:resource \\\$result}, ${2:int \\\$offset})';},
	{display = 'pg_result_status'; insert = '(${1:resource \\\$result}, ${2:[int \\\$type = PGSQL_STATUS_LONG]})';},
	{display = 'pg_select'; insert = '(${1:resource \\\$connection}, ${2:string \\\$table_name}, ${3:array \\\$assoc_array}, ${4:[int \\\$options = PGSQL_DML_EXEC]})';},
	{display = 'pg_send_execute'; insert = '(${1:resource \\\$connection}, ${2:string \\\$stmtname}, ${3:array \\\$params})';},
	{display = 'pg_send_prepare'; insert = '(${1:resource \\\$connection}, ${2:string \\\$stmtname}, ${3:string \\\$query})';},
	{display = 'pg_send_query'; insert = '(${1:resource \\\$connection}, ${2:string \\\$query})';},
	{display = 'pg_send_query_params'; insert = '(${1:resource \\\$connection}, ${2:string \\\$query}, ${3:array \\\$params})';},
	{display = 'pg_set_client_encoding'; insert = '(${1:[resource \\\$connection]}, ${2:string \\\$encoding})';},
	{display = 'pg_set_error_verbosity'; insert = '(${1:[resource \\\$connection]}, ${2:int \\\$verbosity})';},
	{display = 'pg_trace'; insert = '(${1:string \\\$pathname}, ${2:[string \\\$mode = \"w\"]}, ${3:[resource \\\$connection]})';},
	{display = 'pg_transaction_status'; insert = '(${1:resource \\\$connection})';},
	{display = 'pg_tty'; insert = '(${1:[resource \\\$connection]})';},
	{display = 'pg_unescape_bytea'; insert = '(${1:string \\\$data})';},
	{display = 'pg_untrace'; insert = '(${1:[resource \\\$connection]})';},
	{display = 'pg_update'; insert = '(${1:resource \\\$connection}, ${2:string \\\$table_name}, ${3:array \\\$data}, ${4:array \\\$condition}, ${5:[int \\\$options = PGSQL_DML_EXEC]})';},
	{display = 'pg_version'; insert = '(${1:[resource \\\$connection]})';},
	{display = 'php_check_syntax'; insert = '(${1:string \\\$filename}, ${2:[string \\\$error_message]})';},
	{display = 'php_ini_loaded_file'; insert = '()';},
	{display = 'php_ini_scanned_files'; insert = '()';},
	{display = 'php_logo_guid'; insert = '()';},
	{display = 'php_sapi_name'; insert = '()';},
	{display = 'php_strip_whitespace'; insert = '(${1:string \\\$filename})';},
	{display = 'php_uname'; insert = '(${1:[string \\\$mode = \"a\"]})';},
	{display = 'phpcredits'; insert = '(${1:[int \\\$flag = CREDITS_ALL]})';},
	{display = 'phpinfo'; insert = '(${1:[int \\\$what = INFO_ALL]})';},
	{display = 'phpversion'; insert = '(${1:[string \\\$extension]})';},
	{display = 'pi'; insert = '()';},
	{display = 'png2wbmp'; insert = '(${1:string \\\$pngname}, ${2:string \\\$wbmpname}, ${3:int \\\$dest_height}, ${4:int \\\$dest_width}, ${5:int \\\$threshold})';},
	{display = 'popen'; insert = '(${1:string \\\$command}, ${2:string \\\$mode})';},
	{display = 'pos'; insert = '()';},
	{display = 'posix_access'; insert = '(${1:string \\\$file}, ${2:[int \\\$mode = POSIX_F_OK]})';},
	{display = 'posix_ctermid'; insert = '()';},
	{display = 'posix_errno'; insert = '()';},
	{display = 'posix_get_last_error'; insert = '()';},
	{display = 'posix_getcwd'; insert = '()';},
	{display = 'posix_getegid'; insert = '()';},
	{display = 'posix_geteuid'; insert = '()';},
	{display = 'posix_getgid'; insert = '()';},
	{display = 'posix_getgrgid'; insert = '(${1:int \\\$gid})';},
	{display = 'posix_getgrnam'; insert = '(${1:string \\\$name})';},
	{display = 'posix_getgroups'; insert = '()';},
	{display = 'posix_getlogin'; insert = '()';},
	{display = 'posix_getpgid'; insert = '(${1:int \\\$pid})';},
	{display = 'posix_getpgrp'; insert = '()';},
	{display = 'posix_getpid'; insert = '()';},
	{display = 'posix_getppid'; insert = '()';},
	{display = 'posix_getpwnam'; insert = '(${1:string \\\$username})';},
	{display = 'posix_getpwuid'; insert = '(${1:int \\\$uid})';},
	{display = 'posix_getrlimit'; insert = '()';},
	{display = 'posix_getsid'; insert = '(${1:int \\\$pid})';},
	{display = 'posix_getuid'; insert = '()';},
	{display = 'posix_initgroups'; insert = '(${1:string \\\$name}, ${2:int \\\$base_group_id})';},
	{display = 'posix_isatty'; insert = '(${1:int \\\$fd})';},
	{display = 'posix_kill'; insert = '(${1:int \\\$pid}, ${2:int \\\$sig})';},
	{display = 'posix_mkfifo'; insert = '(${1:string \\\$pathname}, ${2:int \\\$mode})';},
	{display = 'posix_mknod'; insert = '(${1:string \\\$pathname}, ${2:int \\\$mode}, ${3:[int \\\$major]}, ${4:[int \\\$minor]})';},
	{display = 'posix_setegid'; insert = '(${1:int \\\$gid})';},
	{display = 'posix_seteuid'; insert = '(${1:int \\\$uid})';},
	{display = 'posix_setgid'; insert = '(${1:int \\\$gid})';},
	{display = 'posix_setpgid'; insert = '(${1:int \\\$pid}, ${2:int \\\$pgid})';},
	{display = 'posix_setsid'; insert = '()';},
	{display = 'posix_setuid'; insert = '(${1:int \\\$uid})';},
	{display = 'posix_strerror'; insert = '(${1:int \\\$errno})';},
	{display = 'posix_times'; insert = '()';},
	{display = 'posix_ttyname'; insert = '(${1:int \\\$fd})';},
	{display = 'posix_uname'; insert = '()';},
	{display = 'pow'; insert = '(${1:number \\\$base}, ${2:number \\\$exp})';},
	{display = 'preg_filter'; insert = '(${1:mixed \\\$pattern}, ${2:mixed \\\$replacement}, ${3:mixed \\\$subject}, ${4:[int \\\$limit = -1]}, ${5:[int \\\$count]})';},
	{display = 'preg_grep'; insert = '(${1:string \\\$pattern}, ${2:array \\\$input}, ${3:[int \\\$flags]})';},
	{display = 'preg_last_error'; insert = '()';},
	{display = 'preg_match'; insert = '(${1:string \\\$pattern}, ${2:string \\\$subject}, ${3:[array \\\$matches]}, ${4:[int \\\$flags]}, ${5:[int \\\$offset]})';},
	{display = 'preg_match_all'; insert = '(${1:string \\\$pattern}, ${2:string \\\$subject}, ${3:array \\\$matches}, ${4:[int \\\$flags]}, ${5:[int \\\$offset]})';},
	{display = 'preg_quote'; insert = '(${1:string \\\$str}, ${2:[string \\\$delimiter]})';},
	{display = 'preg_replace'; insert = '(${1:mixed \\\$pattern}, ${2:mixed \\\$replacement}, ${3:mixed \\\$subject}, ${4:[int \\\$limit = -1]}, ${5:[int \\\$count]})';},
	{display = 'preg_replace_callback'; insert = '(${1:mixed \\\$pattern}, ${2:callback \\\$callback}, ${3:mixed \\\$subject}, ${4:[int \\\$limit = -1]}, ${5:[int \\\$count]})';},
	{display = 'preg_split'; insert = '(${1:string \\\$pattern}, ${2:string \\\$subject}, ${3:[int \\\$limit = -1]}, ${4:[int \\\$flags]})';},
	{display = 'prev'; insert = '(${1:array \\\$array})';},
	{display = 'print'; insert = '(${1:string \\\$arg})';},
	{display = 'print_r'; insert = '(${1:mixed \\\$expression}, ${2:[bool \\\$return = false]})';},
	{display = 'printf'; insert = '(${1:string \\\$format}, ${2:[mixed \\\$args]}, ${3:[mixed ...]})';},
	{display = 'proc_close'; insert = '(${1:resource \\\$process})';},
	{display = 'proc_get_status'; insert = '(${1:resource \\\$process})';},
	{display = 'proc_nice'; insert = '(${1:int \\\$increment})';},
	{display = 'proc_open'; insert = '(${1:string \\\$cmd}, ${2:array \\\$descriptorspec}, ${3:array \\\$pipes}, ${4:[string \\\$cwd]}, ${5:[array \\\$env]}, ${6:[array \\\$other_options]})';},
	{display = 'proc_terminate'; insert = '(${1:resource \\\$process}, ${2:[int \\\$signal = 15]})';},
	{display = 'property_exists'; insert = '(${1:mixed \\\$class}, ${2:string \\\$property})';},
	{display = 'pspell_add_to_personal'; insert = '(${1:int \\\$dictionary_link}, ${2:string \\\$word})';},
	{display = 'pspell_add_to_session'; insert = '(${1:int \\\$dictionary_link}, ${2:string \\\$word})';},
	{display = 'pspell_check'; insert = '(${1:int \\\$dictionary_link}, ${2:string \\\$word})';},
	{display = 'pspell_clear_session'; insert = '(${1:int \\\$dictionary_link})';},
	{display = 'pspell_config_create'; insert = '(${1:string \\\$language}, ${2:[string \\\$spelling]}, ${3:[string \\\$jargon]}, ${4:[string \\\$encoding]})';},
	{display = 'pspell_config_data_dir'; insert = '(${1:int \\\$conf}, ${2:string \\\$directory})';},
	{display = 'pspell_config_dict_dir'; insert = '(${1:int \\\$conf}, ${2:string \\\$directory})';},
	{display = 'pspell_config_ignore'; insert = '(${1:int \\\$dictionary_link}, ${2:int \\\$n})';},
	{display = 'pspell_config_mode'; insert = '(${1:int \\\$dictionary_link}, ${2:int \\\$mode})';},
	{display = 'pspell_config_personal'; insert = '(${1:int \\\$dictionary_link}, ${2:string \\\$file})';},
	{display = 'pspell_config_repl'; insert = '(${1:int \\\$dictionary_link}, ${2:string \\\$file})';},
	{display = 'pspell_config_runtogether'; insert = '(${1:int \\\$dictionary_link}, ${2:bool \\\$flag})';},
	{display = 'pspell_config_save_repl'; insert = '(${1:int \\\$dictionary_link}, ${2:bool \\\$flag})';},
	{display = 'pspell_new'; insert = '(${1:string \\\$language}, ${2:[string \\\$spelling]}, ${3:[string \\\$jargon]}, ${4:[string \\\$encoding]}, ${5:[int \\\$mode]})';},
	{display = 'pspell_new_config'; insert = '(${1:int \\\$config})';},
	{display = 'pspell_new_personal'; insert = '(${1:string \\\$personal}, ${2:string \\\$language}, ${3:[string \\\$spelling]}, ${4:[string \\\$jargon]}, ${5:[string \\\$encoding]}, ${6:[int \\\$mode]})';},
	{display = 'pspell_save_wordlist'; insert = '(${1:int \\\$dictionary_link})';},
	{display = 'pspell_store_replacement'; insert = '(${1:int \\\$dictionary_link}, ${2:string \\\$misspelled}, ${3:string \\\$correct})';},
	{display = 'pspell_suggest'; insert = '(${1:int \\\$dictionary_link}, ${2:string \\\$word})';},
	{display = 'putenv'; insert = '(${1:string \\\$setting})';},
	{display = 'quoted_printable_decode'; insert = '(${1:string \\\$str})';},
	{display = 'quoted_printable_encode'; insert = '(${1:string \\\$str})';},
	{display = 'quotemeta'; insert = '(${1:string \\\$str})';},
	{display = 'rad2deg'; insert = '(${1:float \\\$number})';},
	{display = 'rand'; insert = '(${1:int \\\$min}, ${2:int \\\$max})';},
	{display = 'range'; insert = '(${1:mixed \\\$start}, ${2:mixed \\\$limit}, ${3:[number \\\$step = 1]})';},
	{display = 'rawurldecode'; insert = '(${1:string \\\$str})';},
	{display = 'rawurlencode'; insert = '(${1:string \\\$str})';},
	{display = 'read_exif_data'; insert = '()';},
	{display = 'readdir'; insert = '(${1:[resource \\\$dir_handle]})';},
	{display = 'readfile'; insert = '(${1:string \\\$filename}, ${2:[bool \\\$use_include_path = false]}, ${3:[resource \\\$context]})';},
	{display = 'readgzfile'; insert = '(${1:string \\\$filename}, ${2:[int \\\$use_include_path]})';},
	{display = 'readline'; insert = '(${1:[string \\\$prompt]})';},
	{display = 'readline_add_history'; insert = '(${1:string \\\$line})';},
	{display = 'readline_callback_handler_install'; insert = '(${1:string \\\$prompt}, ${2:callback \\\$callback})';},
	{display = 'readline_callback_handler_remove'; insert = '()';},
	{display = 'readline_callback_read_char'; insert = '()';},
	{display = 'readline_clear_history'; insert = '()';},
	{display = 'readline_completion_function'; insert = '(${1:callback \\\$function})';},
	{display = 'readline_info'; insert = '(${1:[string \\\$varname]}, ${2:[string \\\$newvalue]})';},
	{display = 'readline_list_history'; insert = '()';},
	{display = 'readline_on_new_line'; insert = '()';},
	{display = 'readline_read_history'; insert = '(${1:[string \\\$filename]})';},
	{display = 'readline_redisplay'; insert = '()';},
	{display = 'readline_write_history'; insert = '(${1:[string \\\$filename]})';},
	{display = 'readlink'; insert = '(${1:string \\\$path})';},
	{display = 'realpath'; insert = '(${1:string \\\$path})';},
	{display = 'realpath_cache_get'; insert = '()';},
	{display = 'realpath_cache_size'; insert = '()';},
	{display = 'recode'; insert = '()';},
	{display = 'recode_file'; insert = '(${1:string \\\$request}, ${2:resource \\\$input}, ${3:resource \\\$output})';},
	{display = 'recode_string'; insert = '(${1:string \\\$request}, ${2:string \\\$string})';},
	{display = 'register_shutdown_function'; insert = '(${1:callback \\\$function}, ${2:[mixed \\\$parameter]}, ${3:[mixed ...]})';},
	{display = 'register_tick_function'; insert = '(${1:callback \\\$function}, ${2:[mixed \\\$arg]}, ${3:[mixed ...]})';},
	{display = 'rename'; insert = '(${1:string \\\$oldname}, ${2:string \\\$newname}, ${3:[resource \\\$context]})';},
	{display = 'require'; insert = '(${1:string \\\$path})';},
	{display = 'require_once'; insert = '(${1:string \\\$path})';},
	{display = 'reset'; insert = '(${1:array \\\$array})';},
	{display = 'resourcebundle_count'; insert = '(${1:ResourceBundle \\\$r})';},
	{display = 'resourcebundle_create'; insert = '(${1:string \\\$locale}, ${2:string \\\$bundlename}, ${3:[bool \\\$fallback]})';},
	{display = 'resourcebundle_get'; insert = '(${1:string|int \\\$index}, ${2:ResourceBundle \\\$r})';},
	{display = 'resourcebundle_get_error_code'; insert = '(${1:ResourceBundle \\\$r})';},
	{display = 'resourcebundle_get_error_message'; insert = '(${1:ResourceBundle \\\$r})';},
	{display = 'resourcebundle_locales'; insert = '(${1:ResourceBundle \\\$r})';},
	{display = 'restore_error_handler'; insert = '()';},
	{display = 'restore_exception_handler'; insert = '()';},
	{display = 'restore_include_path'; insert = '()';},
	{display = 'rewind'; insert = '(${1:resource \\\$handle})';},
	{display = 'rewinddir'; insert = '(${1:[resource \\\$dir_handle]})';},
	{display = 'rmdir'; insert = '(${1:string \\\$dirname}, ${2:[resource \\\$context]})';},
	{display = 'round'; insert = '(${1:float \\\$val}, ${2:[int \\\$precision]}, ${3:[int \\\$mode = PHP_ROUND_HALF_UP]})';},
	{display = 'rrd_create'; insert = '(${1:string \\\$filename}, ${2:array \\\$options})';},
	{display = 'rrd_error'; insert = '()';},
	{display = 'rrd_fetch'; insert = '(${1:string \\\$filename}, ${2:array \\\$options})';},
	{display = 'rrd_first'; insert = '(${1:string \\\$file}, ${2:[int \\\$raaindex]})';},
	{display = 'rrd_graph'; insert = '(${1:string \\\$filename}, ${2:array \\\$options})';},
	{display = 'rrd_info'; insert = '(${1:string \\\$filename})';},
	{display = 'rrd_last'; insert = '(${1:string \\\$filename})';},
	{display = 'rrd_lastupdate'; insert = '(${1:string \\\$filename})';},
	{display = 'rrd_restore'; insert = '(${1:string \\\$xml_file}, ${2:string \\\$rrd_file}, ${3:[array \\\$options]})';},
	{display = 'rrd_tune'; insert = '(${1:string \\\$filename}, ${2:array \\\$options})';},
	{display = 'rrd_update'; insert = '(${1:string \\\$filename}, ${2:array \\\$options})';},
	{display = 'rrd_xport'; insert = '(${1:array \\\$options})';},
	{display = 'rsort'; insert = '(${1:array \\\$array}, ${2:[int \\\$sort_flags = SORT_REGULAR]})';},
	{display = 'rtrim'; insert = '(${1:string \\\$str}, ${2:[string \\\$charlist]})';},
	{display = 'scandir'; insert = '(${1:string \\\$directory}, ${2:[int \\\$sorting_order]}, ${3:[resource \\\$context]})';},
	{display = 'sem_acquire'; insert = '(${1:resource \\\$sem_identifier})';},
	{display = 'sem_get'; insert = '(${1:int \\\$key}, ${2:[int \\\$max_acquire = 1]}, ${3:[int \\\$perm = 0666]}, ${4:[int \\\$auto_release = 1]})';},
	{display = 'sem_release'; insert = '(${1:resource \\\$sem_identifier})';},
	{display = 'sem_remove'; insert = '(${1:resource \\\$sem_identifier})';},
	{display = 'serialize'; insert = '(${1:mixed \\\$value})';},
	{display = 'session_cache_expire'; insert = '(${1:[string \\\$new_cache_expire]})';},
	{display = 'session_cache_limiter'; insert = '(${1:[string \\\$cache_limiter]})';},
	{display = 'session_commit'; insert = '()';},
	{display = 'session_decode'; insert = '(${1:string \\\$data})';},
	{display = 'session_destroy'; insert = '()';},
	{display = 'session_encode'; insert = '()';},
	{display = 'session_get_cookie_params'; insert = '()';},
	{display = 'session_id'; insert = '(${1:[string \\\$id]})';},
	{display = 'session_is_registered'; insert = '(${1:string \\\$name})';},
	{display = 'session_module_name'; insert = '(${1:[string \\\$module]})';},
	{display = 'session_name'; insert = '(${1:[string \\\$name]})';},
	{display = 'session_regenerate_id'; insert = '(${1:[bool \\\$delete_old_session = false]})';},
	{display = 'session_register'; insert = '(${1:mixed \\\$name}, ${2:[mixed ...]})';},
	{display = 'session_save_path'; insert = '(${1:[string \\\$path]})';},
	{display = 'session_set_cookie_params'; insert = '(${1:int \\\$lifetime}, ${2:[string \\\$path]}, ${3:[string \\\$domain]}, ${4:[bool \\\$secure = false]}, ${5:[bool \\\$httponly = false]})';},
	{display = 'session_set_save_handler'; insert = '(${1:callback \\\$open}, ${2:callback \\\$close}, ${3:callback \\\$read}, ${4:callback \\\$write}, ${5:callback \\\$destroy}, ${6:callback \\\$gc})';},
	{display = 'session_start'; insert = '()';},
	{display = 'session_unregister'; insert = '(${1:string \\\$name})';},
	{display = 'session_unset'; insert = '()';},
	{display = 'session_write_close'; insert = '()';},
	{display = 'set_error_handler'; insert = '(${1:callback \\\$error_handler}, ${2:[int \\\$error_types = E_ALL | E_STRICT]})';},
	{display = 'set_exception_handler'; insert = '(${1:callback \\\$exception_handler})';},
	{display = 'set_file_buffer'; insert = '()';},
	{display = 'set_include_path'; insert = '(${1:string \\\$new_include_path})';},
	{display = 'set_magic_quotes_runtime'; insert = '(${1:bool \\\$new_setting})';},
	{display = 'set_socket_blocking'; insert = '()';},
	{display = 'set_time_limit'; insert = '(${1:int \\\$seconds})';},
	{display = 'setcookie'; insert = '(${1:string \\\$name}, ${2:[string \\\$value]}, ${3:[int \\\$expire]}, ${4:[string \\\$path]}, ${5:[string \\\$domain]}, ${6:[bool \\\$secure = false]}, ${7:[bool \\\$httponly = false]})';},
	{display = 'setlocale'; insert = '(${1:int \\\$category}, ${2:array \\\$locale}, ${3:[string ...]})';},
	{display = 'setproctitle'; insert = '(${1:string \\\$title})';},
	{display = 'setrawcookie'; insert = '(${1:string \\\$name}, ${2:[string \\\$value]}, ${3:[int \\\$expire]}, ${4:[string \\\$path]}, ${5:[string \\\$domain]}, ${6:[bool \\\$secure = false]}, ${7:[bool \\\$httponly = false]})';},
	{display = 'setthreadtitle'; insert = '(${1:string \\\$title})';},
	{display = 'settype'; insert = '(${1:mixed \\\$var}, ${2:string \\\$type})';},
	{display = 'sha1'; insert = '(${1:string \\\$str}, ${2:[bool \\\$raw_output = false]})';},
	{display = 'sha1_file'; insert = '(${1:string \\\$filename}, ${2:[bool \\\$raw_output = false]})';},
	{display = 'shell_exec'; insert = '(${1:string \\\$cmd})';},
	{display = 'shm_attach'; insert = '(${1:int \\\$key}, ${2:[int \\\$memsize]}, ${3:[int \\\$perm = 0666]})';},
	{display = 'shm_detach'; insert = '(${1:resource \\\$shm_identifier})';},
	{display = 'shm_get_var'; insert = '(${1:resource \\\$shm_identifier}, ${2:int \\\$variable_key})';},
	{display = 'shm_has_var'; insert = '(${1:resource \\\$shm_identifier}, ${2:int \\\$variable_key})';},
	{display = 'shm_put_var'; insert = '(${1:resource \\\$shm_identifier}, ${2:int \\\$variable_key}, ${3:mixed \\\$variable})';},
	{display = 'shm_remove'; insert = '(${1:resource \\\$shm_identifier})';},
	{display = 'shm_remove_var'; insert = '(${1:resource \\\$shm_identifier}, ${2:int \\\$variable_key})';},
	{display = 'shmop_close'; insert = '(${1:int \\\$shmid})';},
	{display = 'shmop_delete'; insert = '(${1:int \\\$shmid})';},
	{display = 'shmop_open'; insert = '(${1:int \\\$key}, ${2:string \\\$flags}, ${3:int \\\$mode}, ${4:int \\\$size})';},
	{display = 'shmop_read'; insert = '(${1:int \\\$shmid}, ${2:int \\\$start}, ${3:int \\\$count})';},
	{display = 'shmop_size'; insert = '(${1:int \\\$shmid})';},
	{display = 'shmop_write'; insert = '(${1:int \\\$shmid}, ${2:string \\\$data}, ${3:int \\\$offset})';},
	{display = 'show_source'; insert = '()';},
	{display = 'shuffle'; insert = '(${1:array \\\$array})';},
	{display = 'similar_text'; insert = '(${1:string \\\$first}, ${2:string \\\$second}, ${3:[float \\\$percent]})';},
	{display = 'simplexml_import_dom'; insert = '(${1:DOMNode \\\$node}, ${2:[string \\\$class_name = \"SimpleXMLElement\"]})';},
	{display = 'simplexml_load_file'; insert = '(${1:string \\\$filename}, ${2:[string \\\$class_name = \"SimpleXMLElement\"]}, ${3:[int \\\$options]}, ${4:[string \\\$ns]}, ${5:[bool \\\$is_prefix = false]})';},
	{display = 'simplexml_load_string'; insert = '(${1:string \\\$data}, ${2:[string \\\$class_name = \"SimpleXMLElement\"]}, ${3:[int \\\$options]}, ${4:[string \\\$ns]}, ${5:[bool \\\$is_prefix = false]})';},
	{display = 'sin'; insert = '(${1:float \\\$arg})';},
	{display = 'sinh'; insert = '(${1:float \\\$arg})';},
	{display = 'sizeof'; insert = '()';},
	{display = 'sleep'; insert = '(${1:int \\\$seconds})';},
	{display = 'snmp2_get'; insert = '(${1:string \\\$host}, ${2:string \\\$community}, ${3:string \\\$object_id}, ${4:[string \\\$timeout = 1000000]}, ${5:[string \\\$retries = 5]})';},
	{display = 'snmp2_getnext'; insert = '(${1:string \\\$host}, ${2:string \\\$community}, ${3:string \\\$object_id}, ${4:[string \\\$timeout = 1000000]}, ${5:[string \\\$retries = 5]})';},
	{display = 'snmp2_real_walk'; insert = '(${1:string \\\$host}, ${2:string \\\$community}, ${3:string \\\$object_id}, ${4:[string \\\$timeout = 1000000]}, ${5:[string \\\$retries = 5]})';},
	{display = 'snmp2_set'; insert = '(${1:string \\\$host}, ${2:string \\\$community}, ${3:string \\\$object_id}, ${4:string \\\$type}, ${5:string \\\$value}, ${6:[string \\\$timeout = 1000000]}, ${7:[string \\\$retries = 5]})';},
	{display = 'snmp2_walk'; insert = '(${1:string \\\$host}, ${2:string \\\$community}, ${3:string \\\$object_id}, ${4:[string \\\$timeout = 1000000]}, ${5:[string \\\$retries = 5]})';},
	{display = 'snmp3_get'; insert = '(${1:string \\\$host}, ${2:string \\\$sec_name}, ${3:string \\\$sec_level}, ${4:string \\\$auth_protocol}, ${5:string \\\$auth_passphrase}, ${6:string \\\$priv_protocol}, ${7:string \\\$priv_passphrase}, ${8:string \\\$object_id}, ${9:[string \\\$timeout = 1000000]}, ${10:[string \\\$retries = 5]})';},
	{display = 'snmp3_getnext'; insert = '(${1:string \\\$host}, ${2:string \\\$sec_name}, ${3:string \\\$sec_level}, ${4:string \\\$auth_protocol}, ${5:string \\\$auth_passphrase}, ${6:string \\\$priv_protocol}, ${7:string \\\$priv_passphrase}, ${8:string \\\$object_id}, ${9:[string \\\$timeout = 1000000]}, ${10:[string \\\$retries = 5]})';},
	{display = 'snmp3_real_walk'; insert = '(${1:string \\\$host}, ${2:string \\\$sec_name}, ${3:string \\\$sec_level}, ${4:string \\\$auth_protocol}, ${5:string \\\$auth_passphrase}, ${6:string \\\$priv_protocol}, ${7:string \\\$priv_passphrase}, ${8:string \\\$object_id}, ${9:[string \\\$timeout = 1000000]}, ${10:[string \\\$retries = 5]})';},
	{display = 'snmp3_set'; insert = '(${1:string \\\$host}, ${2:string \\\$sec_name}, ${3:string \\\$sec_level}, ${4:string \\\$auth_protocol}, ${5:string \\\$auth_passphrase}, ${6:string \\\$priv_protocol}, ${7:string \\\$priv_passphrase}, ${8:string \\\$object_id}, ${9:string \\\$type}, ${10:string \\\$value}, ${11:[int \\\$timeout = 1000000]}, ${12:[int \\\$retries = 5]})';},
	{display = 'snmp3_walk'; insert = '(${1:string \\\$host}, ${2:string \\\$sec_name}, ${3:string \\\$sec_level}, ${4:string \\\$auth_protocol}, ${5:string \\\$auth_passphrase}, ${6:string \\\$priv_protocol}, ${7:string \\\$priv_passphrase}, ${8:string \\\$object_id}, ${9:[string \\\$timeout = 1000000]}, ${10:[string \\\$retries = 5]})';},
	{display = 'snmp_get_quick_print'; insert = '()';},
	{display = 'snmp_get_valueretrieval'; insert = '()';},
	{display = 'snmp_read_mib'; insert = '(${1:string \\\$filename})';},
	{display = 'snmp_set_enum_print'; insert = '(${1:int \\\$enum_print})';},
	{display = 'snmp_set_oid_numeric_print'; insert = '(${1:int \\\$oid_format})';},
	{display = 'snmp_set_oid_output_format'; insert = '(${1:int \\\$oid_format})';},
	{display = 'snmp_set_quick_print'; insert = '(${1:bool \\\$quick_print})';},
	{display = 'snmp_set_valueretrieval'; insert = '(${1:int \\\$method})';},
	{display = 'snmpget'; insert = '(${1:string \\\$hostname}, ${2:string \\\$community}, ${3:string \\\$object_id}, ${4:[int \\\$timeout = 1000000]}, ${5:[int \\\$retries = 5]})';},
	{display = 'snmpgetnext'; insert = '(${1:string \\\$host}, ${2:string \\\$community}, ${3:string \\\$object_id}, ${4:[int \\\$timeout = 1000000]}, ${5:[int \\\$retries = 5]})';},
	{display = 'snmprealwalk'; insert = '(${1:string \\\$host}, ${2:string \\\$community}, ${3:string \\\$object_id}, ${4:[int \\\$timeout = 1000000]}, ${5:[int \\\$retries = 5]})';},
	{display = 'snmpset'; insert = '(${1:string \\\$host}, ${2:string \\\$community}, ${3:string \\\$object_id}, ${4:string \\\$type}, ${5:mixed \\\$value}, ${6:[int \\\$timeout = 1000000]}, ${7:[int \\\$retries = 5]})';},
	{display = 'snmpwalk'; insert = '(${1:string \\\$hostname}, ${2:string \\\$community}, ${3:string \\\$object_id}, ${4:[int \\\$timeout = 1000000]}, ${5:[int \\\$retries = 5]})';},
	{display = 'snmpwalkoid'; insert = '(${1:string \\\$hostname}, ${2:string \\\$community}, ${3:string \\\$object_id}, ${4:[int \\\$timeout = 1000000]}, ${5:[int \\\$retries = 5]})';},
	{display = 'socket_accept'; insert = '(${1:resource \\\$socket})';},
	{display = 'socket_bind'; insert = '(${1:resource \\\$socket}, ${2:string \\\$address}, ${3:[int \\\$port]})';},
	{display = 'socket_clear_error'; insert = '(${1:[resource \\\$socket]})';},
	{display = 'socket_close'; insert = '(${1:resource \\\$socket})';},
	{display = 'socket_connect'; insert = '(${1:resource \\\$socket}, ${2:string \\\$address}, ${3:[int \\\$port]})';},
	{display = 'socket_create'; insert = '(${1:int \\\$domain}, ${2:int \\\$type}, ${3:int \\\$protocol})';},
	{display = 'socket_create_listen'; insert = '(${1:int \\\$port}, ${2:[int \\\$backlog = 128]})';},
	{display = 'socket_create_pair'; insert = '(${1:int \\\$domain}, ${2:int \\\$type}, ${3:int \\\$protocol}, ${4:array \\\$fd})';},
	{display = 'socket_get_option'; insert = '(${1:resource \\\$socket}, ${2:int \\\$level}, ${3:int \\\$optname})';},
	{display = 'socket_get_status'; insert = '()';},
	{display = 'socket_getpeername'; insert = '(${1:resource \\\$socket}, ${2:string \\\$address}, ${3:[int \\\$port]})';},
	{display = 'socket_getsockname'; insert = '(${1:resource \\\$socket}, ${2:string \\\$addr}, ${3:[int \\\$port]})';},
	{display = 'socket_last_error'; insert = '(${1:[resource \\\$socket]})';},
	{display = 'socket_listen'; insert = '(${1:resource \\\$socket}, ${2:[int \\\$backlog]})';},
	{display = 'socket_read'; insert = '(${1:resource \\\$socket}, ${2:int \\\$length}, ${3:[int \\\$type = PHP_BINARY_READ]})';},
	{display = 'socket_recv'; insert = '(${1:resource \\\$socket}, ${2:string \\\$buf}, ${3:int \\\$len}, ${4:int \\\$flags})';},
	{display = 'socket_recvfrom'; insert = '(${1:resource \\\$socket}, ${2:string \\\$buf}, ${3:int \\\$len}, ${4:int \\\$flags}, ${5:string \\\$name}, ${6:[int \\\$port]})';},
	{display = 'socket_select'; insert = '(${1:array \\\$read}, ${2:array \\\$write}, ${3:array \\\$except}, ${4:int \\\$tv_sec}, ${5:[int \\\$tv_usec]})';},
	{display = 'socket_send'; insert = '(${1:resource \\\$socket}, ${2:string \\\$buf}, ${3:int \\\$len}, ${4:int \\\$flags})';},
	{display = 'socket_sendto'; insert = '(${1:resource \\\$socket}, ${2:string \\\$buf}, ${3:int \\\$len}, ${4:int \\\$flags}, ${5:string \\\$addr}, ${6:[int \\\$port]})';},
	{display = 'socket_set_block'; insert = '(${1:resource \\\$socket})';},
	{display = 'socket_set_blocking'; insert = '()';},
	{display = 'socket_set_nonblock'; insert = '(${1:resource \\\$socket})';},
	{display = 'socket_set_option'; insert = '(${1:resource \\\$socket}, ${2:int \\\$level}, ${3:int \\\$optname}, ${4:mixed \\\$optval})';},
	{display = 'socket_set_timeout'; insert = '()';},
	{display = 'socket_shutdown'; insert = '(${1:resource \\\$socket}, ${2:[int \\\$how = 2]})';},
	{display = 'socket_strerror'; insert = '(${1:int \\\$errno})';},
	{display = 'socket_write'; insert = '(${1:resource \\\$socket}, ${2:string \\\$buffer}, ${3:[int \\\$length]})';},
	{display = 'sort'; insert = '(${1:array \\\$array}, ${2:[int \\\$sort_flags = SORT_REGULAR]})';},
	{display = 'soundex'; insert = '(${1:string \\\$str})';},
	{display = 'spl_autoload'; insert = '(${1:string \\\$class_name}, ${2:[string \\\$file_extensions = spl_autoload_extensions()]})';},
	{display = 'spl_autoload_call'; insert = '(${1:string \\\$class_name})';},
	{display = 'spl_autoload_extensions'; insert = '(${1:[string \\\$file_extensions]})';},
	{display = 'spl_autoload_functions'; insert = '()';},
	{display = 'spl_autoload_register'; insert = '(${1:[callback \\\$autoload_function]}, ${2:[bool \\\$throw = true]}, ${3:[bool \\\$prepend = false]})';},
	{display = 'spl_autoload_unregister'; insert = '(${1:mixed \\\$autoload_function})';},
	{display = 'spl_classes'; insert = '()';},
	{display = 'spl_object_hash'; insert = '(${1:object \\\$obj})';},
	{display = 'split'; insert = '(${1:string \\\$pattern}, ${2:string \\\$string}, ${3:[int \\\$limit = -1]})';},
	{display = 'spliti'; insert = '(${1:string \\\$pattern}, ${2:string \\\$string}, ${3:[int \\\$limit = -1]})';},
	{display = 'sprintf'; insert = '(${1:string \\\$format}, ${2:[mixed \\\$args]}, ${3:[mixed ...]})';},
	{display = 'sql_regcase'; insert = '(${1:string \\\$string})';},
	{display = 'sqlite_array_query'; insert = '(${1:resource \\\$dbhandle}, ${2:string \\\$query}, ${3:[int \\\$result_type = SQLITE_BOTH]}, ${4:[bool \\\$decode_binary = true]})';},
	{display = 'sqlite_busy_timeout'; insert = '(${1:resource \\\$dbhandle}, ${2:int \\\$milliseconds})';},
	{display = 'sqlite_changes'; insert = '(${1:resource \\\$dbhandle})';},
	{display = 'sqlite_close'; insert = '(${1:resource \\\$dbhandle})';},
	{display = 'sqlite_column'; insert = '(${1:resource \\\$result}, ${2:mixed \\\$index_or_name}, ${3:[bool \\\$decode_binary = true]})';},
	{display = 'sqlite_create_aggregate'; insert = '(${1:resource \\\$dbhandle}, ${2:string \\\$function_name}, ${3:callback \\\$step_func}, ${4:callback \\\$finalize_func}, ${5:[int \\\$num_args = -1]})';},
	{display = 'sqlite_create_function'; insert = '(${1:resource \\\$dbhandle}, ${2:string \\\$function_name}, ${3:callback \\\$callback}, ${4:[int \\\$num_args = -1]})';},
	{display = 'sqlite_current'; insert = '(${1:resource \\\$result}, ${2:[int \\\$result_type = SQLITE_BOTH]}, ${3:[bool \\\$decode_binary = true]})';},
	{display = 'sqlite_error_string'; insert = '(${1:int \\\$error_code})';},
	{display = 'sqlite_escape_string'; insert = '(${1:string \\\$item})';},
	{display = 'sqlite_exec'; insert = '(${1:resource \\\$dbhandle}, ${2:string \\\$query}, ${3:[string \\\$error_msg]})';},
	{display = 'sqlite_factory'; insert = '(${1:string \\\$filename}, ${2:[int \\\$mode = 0666]}, ${3:[string \\\$error_message]})';},
	{display = 'sqlite_fetch_all'; insert = '(${1:resource \\\$result}, ${2:[int \\\$result_type = SQLITE_BOTH]}, ${3:[bool \\\$decode_binary = true]})';},
	{display = 'sqlite_fetch_array'; insert = '(${1:resource \\\$result}, ${2:[int \\\$result_type = SQLITE_BOTH]}, ${3:[bool \\\$decode_binary = true]})';},
	{display = 'sqlite_fetch_column_types'; insert = '(${1:string \\\$table_name}, ${2:resource \\\$dbhandle}, ${3:[int \\\$result_type = SQLITE_ASSOC]})';},
	{display = 'sqlite_fetch_object'; insert = '(${1:resource \\\$result}, ${2:[string \\\$class_name]}, ${3:[array \\\$ctor_params]}, ${4:[bool \\\$decode_binary = true]})';},
	{display = 'sqlite_fetch_single'; insert = '(${1:resource \\\$result}, ${2:[bool \\\$decode_binary = true]})';},
	{display = 'sqlite_fetch_string'; insert = '()';},
	{display = 'sqlite_field_name'; insert = '(${1:resource \\\$result}, ${2:int \\\$field_index})';},
	{display = 'sqlite_has_more'; insert = '(${1:resource \\\$result})';},
	{display = 'sqlite_has_prev'; insert = '(${1:resource \\\$result})';},
	{display = 'sqlite_key'; insert = '(${1:resource \\\$result})';},
	{display = 'sqlite_last_error'; insert = '(${1:resource \\\$dbhandle})';},
	{display = 'sqlite_last_insert_rowid'; insert = '(${1:resource \\\$dbhandle})';},
	{display = 'sqlite_libencoding'; insert = '()';},
	{display = 'sqlite_libversion'; insert = '()';},
	{display = 'sqlite_next'; insert = '(${1:resource \\\$result})';},
	{display = 'sqlite_num_fields'; insert = '(${1:resource \\\$result})';},
	{display = 'sqlite_num_rows'; insert = '(${1:resource \\\$result})';},
	{display = 'sqlite_open'; insert = '(${1:string \\\$filename}, ${2:[int \\\$mode = 0666]}, ${3:[string \\\$error_message]})';},
	{display = 'sqlite_popen'; insert = '(${1:string \\\$filename}, ${2:[int \\\$mode = 0666]}, ${3:[string \\\$error_message]})';},
	{display = 'sqlite_prev'; insert = '(${1:resource \\\$result})';},
	{display = 'sqlite_query'; insert = '(${1:resource \\\$dbhandle}, ${2:string \\\$query}, ${3:[int \\\$result_type = SQLITE_BOTH]}, ${4:[string \\\$error_msg]})';},
	{display = 'sqlite_rewind'; insert = '(${1:resource \\\$result})';},
	{display = 'sqlite_seek'; insert = '(${1:resource \\\$result}, ${2:int \\\$rownum})';},
	{display = 'sqlite_single_query'; insert = '(${1:resource \\\$db}, ${2:string \\\$query}, ${3:[bool \\\$first_row_only]}, ${4:[bool \\\$decode_binary]})';},
	{display = 'sqlite_udf_decode_binary'; insert = '(${1:string \\\$data})';},
	{display = 'sqlite_udf_encode_binary'; insert = '(${1:string \\\$data})';},
	{display = 'sqlite_unbuffered_query'; insert = '(${1:resource \\\$dbhandle}, ${2:string \\\$query}, ${3:[int \\\$result_type = SQLITE_BOTH]}, ${4:[string \\\$error_msg]})';},
	{display = 'sqlite_valid'; insert = '(${1:resource \\\$result})';},
	{display = 'sqrt'; insert = '(${1:float \\\$arg})';},
	{display = 'srand'; insert = '(${1:[int \\\$seed]})';},
	{display = 'sscanf'; insert = '(${1:string \\\$str}, ${2:string \\\$format}, ${3:[mixed ...]})';},
	{display = 'stat'; insert = '(${1:string \\\$filename})';},
	{display = 'stats_absolute_deviation'; insert = '(${1:array \\\$a})';},
	{display = 'stats_cdf_beta'; insert = '(${1:float \\\$par1}, ${2:float \\\$par2}, ${3:float \\\$par3}, ${4:int \\\$which})';},
	{display = 'stats_cdf_binomial'; insert = '(${1:float \\\$par1}, ${2:float \\\$par2}, ${3:float \\\$par3}, ${4:int \\\$which})';},
	{display = 'stats_cdf_cauchy'; insert = '(${1:float \\\$par1}, ${2:float \\\$par2}, ${3:float \\\$par3}, ${4:int \\\$which})';},
	{display = 'stats_cdf_chisquare'; insert = '(${1:float \\\$par1}, ${2:float \\\$par2}, ${3:int \\\$which})';},
	{display = 'stats_cdf_exponential'; insert = '(${1:float \\\$par1}, ${2:float \\\$par2}, ${3:int \\\$which})';},
	{display = 'stats_cdf_f'; insert = '(${1:float \\\$par1}, ${2:float \\\$par2}, ${3:float \\\$par3}, ${4:int \\\$which})';},
	{display = 'stats_cdf_gamma'; insert = '(${1:float \\\$par1}, ${2:float \\\$par2}, ${3:float \\\$par3}, ${4:int \\\$which})';},
	{display = 'stats_cdf_laplace'; insert = '(${1:float \\\$par1}, ${2:float \\\$par2}, ${3:float \\\$par3}, ${4:int \\\$which})';},
	{display = 'stats_cdf_logistic'; insert = '(${1:float \\\$par1}, ${2:float \\\$par2}, ${3:float \\\$par3}, ${4:int \\\$which})';},
	{display = 'stats_cdf_negative_binomial'; insert = '(${1:float \\\$par1}, ${2:float \\\$par2}, ${3:float \\\$par3}, ${4:int \\\$which})';},
	{display = 'stats_cdf_noncentral_chisquare'; insert = '(${1:float \\\$par1}, ${2:float \\\$par2}, ${3:float \\\$par3}, ${4:int \\\$which})';},
	{display = 'stats_cdf_noncentral_f'; insert = '(${1:float \\\$par1}, ${2:float \\\$par2}, ${3:float \\\$par3}, ${4:float \\\$par4}, ${5:int \\\$which})';},
	{display = 'stats_cdf_poisson'; insert = '(${1:float \\\$par1}, ${2:float \\\$par2}, ${3:int \\\$which})';},
	{display = 'stats_cdf_t'; insert = '(${1:float \\\$par1}, ${2:float \\\$par2}, ${3:int \\\$which})';},
	{display = 'stats_cdf_uniform'; insert = '(${1:float \\\$par1}, ${2:float \\\$par2}, ${3:float \\\$par3}, ${4:int \\\$which})';},
	{display = 'stats_cdf_weibull'; insert = '(${1:float \\\$par1}, ${2:float \\\$par2}, ${3:float \\\$par3}, ${4:int \\\$which})';},
	{display = 'stats_covariance'; insert = '(${1:array \\\$a}, ${2:array \\\$b})';},
	{display = 'stats_den_uniform'; insert = '(${1:float \\\$x}, ${2:float \\\$a}, ${3:float \\\$b})';},
	{display = 'stats_dens_beta'; insert = '(${1:float \\\$x}, ${2:float \\\$a}, ${3:float \\\$b})';},
	{display = 'stats_dens_cauchy'; insert = '(${1:float \\\$x}, ${2:float \\\$ave}, ${3:float \\\$stdev})';},
	{display = 'stats_dens_chisquare'; insert = '(${1:float \\\$x}, ${2:float \\\$dfr})';},
	{display = 'stats_dens_exponential'; insert = '(${1:float \\\$x}, ${2:float \\\$scale})';},
	{display = 'stats_dens_f'; insert = '(${1:float \\\$x}, ${2:float \\\$dfr1}, ${3:float \\\$dfr2})';},
	{display = 'stats_dens_gamma'; insert = '(${1:float \\\$x}, ${2:float \\\$shape}, ${3:float \\\$scale})';},
	{display = 'stats_dens_laplace'; insert = '(${1:float \\\$x}, ${2:float \\\$ave}, ${3:float \\\$stdev})';},
	{display = 'stats_dens_logistic'; insert = '(${1:float \\\$x}, ${2:float \\\$ave}, ${3:float \\\$stdev})';},
	{display = 'stats_dens_negative_binomial'; insert = '(${1:float \\\$x}, ${2:float \\\$n}, ${3:float \\\$pi})';},
	{display = 'stats_dens_normal'; insert = '(${1:float \\\$x}, ${2:float \\\$ave}, ${3:float \\\$stdev})';},
	{display = 'stats_dens_pmf_binomial'; insert = '(${1:float \\\$x}, ${2:float \\\$n}, ${3:float \\\$pi})';},
	{display = 'stats_dens_pmf_hypergeometric'; insert = '(${1:float \\\$n1}, ${2:float \\\$n2}, ${3:float \\\$N1}, ${4:float \\\$N2})';},
	{display = 'stats_dens_pmf_poisson'; insert = '(${1:float \\\$x}, ${2:float \\\$lb})';},
	{display = 'stats_dens_t'; insert = '(${1:float \\\$x}, ${2:float \\\$dfr})';},
	{display = 'stats_dens_weibull'; insert = '(${1:float \\\$x}, ${2:float \\\$a}, ${3:float \\\$b})';},
	{display = 'stats_harmonic_mean'; insert = '(${1:array \\\$a})';},
	{display = 'stats_kurtosis'; insert = '(${1:array \\\$a})';},
	{display = 'stats_rand_gen_beta'; insert = '(${1:float \\\$a}, ${2:float \\\$b})';},
	{display = 'stats_rand_gen_chisquare'; insert = '(${1:float \\\$df})';},
	{display = 'stats_rand_gen_exponential'; insert = '(${1:float \\\$av})';},
	{display = 'stats_rand_gen_f'; insert = '(${1:float \\\$dfn}, ${2:float \\\$dfd})';},
	{display = 'stats_rand_gen_funiform'; insert = '(${1:float \\\$low}, ${2:float \\\$high})';},
	{display = 'stats_rand_gen_gamma'; insert = '(${1:float \\\$a}, ${2:float \\\$r})';},
	{display = 'stats_rand_gen_ibinomial'; insert = '(${1:int \\\$n}, ${2:float \\\$pp})';},
	{display = 'stats_rand_gen_ibinomial_negative'; insert = '(${1:int \\\$n}, ${2:float \\\$p})';},
	{display = 'stats_rand_gen_int'; insert = '()';},
	{display = 'stats_rand_gen_ipoisson'; insert = '(${1:float \\\$mu})';},
	{display = 'stats_rand_gen_iuniform'; insert = '(${1:int \\\$low}, ${2:int \\\$high})';},
	{display = 'stats_rand_gen_noncenral_chisquare'; insert = '(${1:float \\\$df}, ${2:float \\\$xnonc})';},
	{display = 'stats_rand_gen_noncentral_f'; insert = '(${1:float \\\$dfn}, ${2:float \\\$dfd}, ${3:float \\\$xnonc})';},
	{display = 'stats_rand_gen_noncentral_t'; insert = '(${1:float \\\$df}, ${2:float \\\$xnonc})';},
	{display = 'stats_rand_gen_normal'; insert = '(${1:float \\\$av}, ${2:float \\\$sd})';},
	{display = 'stats_rand_gen_t'; insert = '(${1:float \\\$df})';},
	{display = 'stats_rand_get_seeds'; insert = '()';},
	{display = 'stats_rand_phrase_to_seeds'; insert = '(${1:string \\\$phrase})';},
	{display = 'stats_rand_ranf'; insert = '()';},
	{display = 'stats_rand_setall'; insert = '(${1:int \\\$iseed1}, ${2:int \\\$iseed2})';},
	{display = 'stats_skew'; insert = '(${1:array \\\$a})';},
	{display = 'stats_standard_deviation'; insert = '(${1:array \\\$a}, ${2:[bool \\\$sample = false]})';},
	{display = 'stats_stat_binomial_coef'; insert = '(${1:int \\\$x}, ${2:int \\\$n})';},
	{display = 'stats_stat_correlation'; insert = '(${1:array \\\$arr1}, ${2:array \\\$arr2})';},
	{display = 'stats_stat_gennch'; insert = '(${1:int \\\$n})';},
	{display = 'stats_stat_independent_t'; insert = '(${1:array \\\$arr1}, ${2:array \\\$arr2})';},
	{display = 'stats_stat_innerproduct'; insert = '(${1:array \\\$arr1}, ${2:array \\\$arr2})';},
	{display = 'stats_stat_noncentral_t'; insert = '(${1:float \\\$par1}, ${2:float \\\$par2}, ${3:float \\\$par3}, ${4:int \\\$which})';},
	{display = 'stats_stat_paired_t'; insert = '(${1:array \\\$arr1}, ${2:array \\\$arr2})';},
	{display = 'stats_stat_percentile'; insert = '(${1:float \\\$df}, ${2:float \\\$xnonc})';},
	{display = 'stats_stat_powersum'; insert = '(${1:array \\\$arr}, ${2:float \\\$power})';},
	{display = 'stats_variance'; insert = '(${1:array \\\$a}, ${2:[bool \\\$sample = false]})';},
	{display = 'str_getcsv'; insert = '(${1:string \\\$input}, ${2:[string \\\$delimiter = \',\']}, ${3:[string \\\$enclosure = \'\"\']}, ${4:[string \\\$escape = \'\\\\\\\\\']})';},
	{display = 'str_ireplace'; insert = '(${1:mixed \\\$search}, ${2:mixed \\\$replace}, ${3:mixed \\\$subject}, ${4:[int \\\$count]})';},
	{display = 'str_pad'; insert = '(${1:string \\\$input}, ${2:int \\\$pad_length}, ${3:[string \\\$pad_string = \" \"]}, ${4:[int \\\$pad_type = STR_PAD_RIGHT]})';},
	{display = 'str_repeat'; insert = '(${1:string \\\$input}, ${2:int \\\$multiplier})';},
	{display = 'str_replace'; insert = '(${1:mixed \\\$search}, ${2:mixed \\\$replace}, ${3:mixed \\\$subject}, ${4:[int \\\$count]})';},
	{display = 'str_rot13'; insert = '(${1:string \\\$str})';},
	{display = 'str_shuffle'; insert = '(${1:string \\\$str})';},
	{display = 'str_split'; insert = '(${1:string \\\$string}, ${2:[int \\\$split_length = 1]})';},
	{display = 'str_word_count'; insert = '(${1:string \\\$string}, ${2:[int \\\$format]}, ${3:[string \\\$charlist]})';},
	{display = 'strcasecmp'; insert = '(${1:string \\\$str1}, ${2:string \\\$str2})';},
	{display = 'strchr'; insert = '()';},
	{display = 'strcmp'; insert = '(${1:string \\\$str1}, ${2:string \\\$str2})';},
	{display = 'strcoll'; insert = '(${1:string \\\$str1}, ${2:string \\\$str2})';},
	{display = 'strcspn'; insert = '(${1:string \\\$str1}, ${2:string \\\$str2}, ${3:[int \\\$start]}, ${4:[int \\\$length]})';},
	{display = 'streamWrapper'; insert = '()';},
	{display = 'stream_bucket_append'; insert = '(${1:resource \\\$brigade}, ${2:resource \\\$bucket})';},
	{display = 'stream_bucket_make_writeable'; insert = '(${1:resource \\\$brigade})';},
	{display = 'stream_bucket_new'; insert = '(${1:resource \\\$stream}, ${2:string \\\$buffer})';},
	{display = 'stream_bucket_prepend'; insert = '(${1:resource \\\$brigade}, ${2:resource \\\$bucket})';},
	{display = 'stream_context_create'; insert = '(${1:[array \\\$options]}, ${2:[array \\\$params]})';},
	{display = 'stream_context_get_default'; insert = '(${1:[array \\\$options]})';},
	{display = 'stream_context_get_options'; insert = '(${1:resource \\\$stream_or_context})';},
	{display = 'stream_context_get_params'; insert = '(${1:resource \\\$stream_or_context})';},
	{display = 'stream_context_set_default'; insert = '(${1:array \\\$options})';},
	{display = 'stream_context_set_option'; insert = '(${1:resource \\\$stream_or_context}, ${2:string \\\$wrapper}, ${3:string \\\$option}, ${4:mixed \\\$value}, ${5:array \\\$options})';},
	{display = 'stream_context_set_params'; insert = '(${1:resource \\\$stream_or_context}, ${2:array \\\$params})';},
	{display = 'stream_copy_to_stream'; insert = '(${1:resource \\\$source}, ${2:resource \\\$dest}, ${3:[int \\\$maxlength = -1]}, ${4:[int \\\$offset]})';},
	{display = 'stream_encoding'; insert = '(${1:resource \\\$stream}, ${2:[string \\\$encoding]})';},
	{display = 'stream_filter_append'; insert = '(${1:resource \\\$stream}, ${2:string \\\$filtername}, ${3:[int \\\$read_write]}, ${4:[mixed \\\$params]})';},
	{display = 'stream_filter_prepend'; insert = '(${1:resource \\\$stream}, ${2:string \\\$filtername}, ${3:[int \\\$read_write]}, ${4:[mixed \\\$params]})';},
	{display = 'stream_filter_register'; insert = '(${1:string \\\$filtername}, ${2:string \\\$classname})';},
	{display = 'stream_filter_remove'; insert = '(${1:resource \\\$stream_filter})';},
	{display = 'stream_get_contents'; insert = '(${1:resource \\\$handle}, ${2:[int \\\$maxlength = -1]}, ${3:[int \\\$offset = -1]})';},
	{display = 'stream_get_filters'; insert = '()';},
	{display = 'stream_get_line'; insert = '(${1:resource \\\$handle}, ${2:int \\\$length}, ${3:[string \\\$ending]})';},
	{display = 'stream_get_meta_data'; insert = '(${1:resource \\\$stream})';},
	{display = 'stream_get_transports'; insert = '()';},
	{display = 'stream_get_wrappers'; insert = '()';},
	{display = 'stream_is_local'; insert = '(${1:mixed \\\$stream_or_url})';},
	{display = 'stream_notification_callback'; insert = '(${1:int \\\$notification_code}, ${2:int \\\$severity}, ${3:string \\\$message}, ${4:int \\\$message_code}, ${5:int \\\$bytes_transferred}, ${6:int \\\$bytes_max})';},
	{display = 'stream_register_wrapper'; insert = '()';},
	{display = 'stream_resolve_include_path'; insert = '(${1:string \\\$filename})';},
	{display = 'stream_select'; insert = '(${1:array \\\$read}, ${2:array \\\$write}, ${3:array \\\$except}, ${4:int \\\$tv_sec}, ${5:[int \\\$tv_usec]})';},
	{display = 'stream_set_blocking'; insert = '(${1:resource \\\$stream}, ${2:int \\\$mode})';},
	{display = 'stream_set_read_buffer'; insert = '(${1:resource \\\$stream}, ${2:int \\\$buffer})';},
	{display = 'stream_set_timeout'; insert = '(${1:resource \\\$stream}, ${2:int \\\$seconds}, ${3:[int \\\$microseconds]})';},
	{display = 'stream_set_write_buffer'; insert = '(${1:resource \\\$stream}, ${2:int \\\$buffer})';},
	{display = 'stream_socket_accept'; insert = '(${1:resource \\\$server_socket}, ${2:[float \\\$timeout = ini_get(\"default_socket_timeout\")]}, ${3:[string \\\$peername]})';},
	{display = 'stream_socket_client'; insert = '(${1:string \\\$remote_socket}, ${2:[int \\\$errno]}, ${3:[string \\\$errstr]}, ${4:[float \\\$timeout = ini_get(\"default_socket_timeout\")]}, ${5:[int \\\$flags = STREAM_CLIENT_CONNECT]}, ${6:[resource \\\$context]})';},
	{display = 'stream_socket_enable_crypto'; insert = '(${1:resource \\\$stream}, ${2:bool \\\$enable}, ${3:[int \\\$crypto_type]}, ${4:[resource \\\$session_stream]})';},
	{display = 'stream_socket_get_name'; insert = '(${1:resource \\\$handle}, ${2:bool \\\$want_peer})';},
	{display = 'stream_socket_pair'; insert = '(${1:int \\\$domain}, ${2:int \\\$type}, ${3:int \\\$protocol})';},
	{display = 'stream_socket_recvfrom'; insert = '(${1:resource \\\$socket}, ${2:int \\\$length}, ${3:[int \\\$flags]}, ${4:[string \\\$address]})';},
	{display = 'stream_socket_sendto'; insert = '(${1:resource \\\$socket}, ${2:string \\\$data}, ${3:[int \\\$flags]}, ${4:[string \\\$address]})';},
	{display = 'stream_socket_server'; insert = '(${1:string \\\$local_socket}, ${2:[int \\\$errno]}, ${3:[string \\\$errstr]}, ${4:[int \\\$flags = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN]}, ${5:[resource \\\$context]})';},
	{display = 'stream_socket_shutdown'; insert = '(${1:resource \\\$stream}, ${2:int \\\$how})';},
	{display = 'stream_supports_lock'; insert = '(${1:resource \\\$stream})';},
	{display = 'stream_wrapper_register'; insert = '(${1:string \\\$protocol}, ${2:string \\\$classname}, ${3:[int \\\$flags]})';},
	{display = 'stream_wrapper_restore'; insert = '(${1:string \\\$protocol})';},
	{display = 'stream_wrapper_unregister'; insert = '(${1:string \\\$protocol})';},
	{display = 'strftime'; insert = '(${1:string \\\$format}, ${2:[int \\\$timestamp = time()]})';},
	{display = 'strip_tags'; insert = '(${1:string \\\$str}, ${2:[string \\\$allowable_tags]})';},
	{display = 'stripcslashes'; insert = '(${1:string \\\$str})';},
	{display = 'stripos'; insert = '(${1:string \\\$haystack}, ${2:string \\\$needle}, ${3:[int \\\$offset]})';},
	{display = 'stripslashes'; insert = '(${1:string \\\$str})';},
	{display = 'stristr'; insert = '(${1:string \\\$haystack}, ${2:mixed \\\$needle}, ${3:[bool \\\$before_needle = false]})';},
	{display = 'strlen'; insert = '(${1:string \\\$string})';},
	{display = 'strnatcasecmp'; insert = '(${1:string \\\$str1}, ${2:string \\\$str2})';},
	{display = 'strnatcmp'; insert = '(${1:string \\\$str1}, ${2:string \\\$str2})';},
	{display = 'strncasecmp'; insert = '(${1:string \\\$str1}, ${2:string \\\$str2}, ${3:int \\\$len})';},
	{display = 'strncmp'; insert = '(${1:string \\\$str1}, ${2:string \\\$str2}, ${3:int \\\$len})';},
	{display = 'strpbrk'; insert = '(${1:string \\\$haystack}, ${2:string \\\$char_list})';},
	{display = 'strpos'; insert = '(${1:string \\\$haystack}, ${2:mixed \\\$needle}, ${3:[int \\\$offset]})';},
	{display = 'strptime'; insert = '(${1:string \\\$date}, ${2:string \\\$format})';},
	{display = 'strrchr'; insert = '(${1:string \\\$haystack}, ${2:mixed \\\$needle})';},
	{display = 'strrev'; insert = '(${1:string \\\$string})';},
	{display = 'strripos'; insert = '(${1:string \\\$haystack}, ${2:string \\\$needle}, ${3:[int \\\$offset]})';},
	{display = 'strrpos'; insert = '(${1:string \\\$haystack}, ${2:string \\\$needle}, ${3:[int \\\$offset]})';},
	{display = 'strspn'; insert = '(${1:string \\\$subject}, ${2:string \\\$mask}, ${3:[int \\\$start]}, ${4:[int \\\$length]})';},
	{display = 'strstr'; insert = '(${1:string \\\$haystack}, ${2:mixed \\\$needle}, ${3:[bool \\\$before_needle = false]})';},
	{display = 'strtok'; insert = '(${1:string \\\$str}, ${2:string \\\$token})';},
	{display = 'strtolower'; insert = '(${1:string \\\$str})';},
	{display = 'strtotime'; insert = '(${1:string \\\$time}, ${2:[int \\\$now]})';},
	{display = 'strtoupper'; insert = '(${1:string \\\$string})';},
	{display = 'strtr'; insert = '(${1:string \\\$str}, ${2:string \\\$from}, ${3:string \\\$to}, ${4:array \\\$replace_pairs})';},
	{display = 'strval'; insert = '(${1:mixed \\\$var})';},
	{display = 'substr'; insert = '(${1:string \\\$string}, ${2:int \\\$start}, ${3:[int \\\$length]})';},
	{display = 'substr_compare'; insert = '(${1:string \\\$main_str}, ${2:string \\\$str}, ${3:int \\\$offset}, ${4:[int \\\$length]}, ${5:[bool \\\$case_insensitivity = false]})';},
	{display = 'substr_count'; insert = '(${1:string \\\$haystack}, ${2:string \\\$needle}, ${3:[int \\\$offset]}, ${4:[int \\\$length]})';},
	{display = 'substr_replace'; insert = '(${1:mixed \\\$string}, ${2:mixed \\\$replacement}, ${3:mixed \\\$start}, ${4:[mixed \\\$length]})';},
	{display = 'sybase_affected_rows'; insert = '(${1:[resource \\\$link_identifier]})';},
	{display = 'sybase_close'; insert = '(${1:[resource \\\$link_identifier]})';},
	{display = 'sybase_connect'; insert = '(${1:[string \\\$servername]}, ${2:[string \\\$username]}, ${3:[string \\\$password]}, ${4:[string \\\$charset]}, ${5:[string \\\$appname]}, ${6:[bool \\\$new = false]})';},
	{display = 'sybase_data_seek'; insert = '(${1:resource \\\$result_identifier}, ${2:int \\\$row_number})';},
	{display = 'sybase_deadlock_retry_count'; insert = '(${1:int \\\$retry_count})';},
	{display = 'sybase_fetch_array'; insert = '(${1:resource \\\$result})';},
	{display = 'sybase_fetch_assoc'; insert = '(${1:resource \\\$result})';},
	{display = 'sybase_fetch_field'; insert = '(${1:resource \\\$result}, ${2:[int \\\$field_offset = -1]})';},
	{display = 'sybase_fetch_object'; insert = '(${1:resource \\\$result}, ${2:[mixed \\\$object]})';},
	{display = 'sybase_fetch_row'; insert = '(${1:resource \\\$result})';},
	{display = 'sybase_field_seek'; insert = '(${1:resource \\\$result}, ${2:int \\\$field_offset})';},
	{display = 'sybase_free_result'; insert = '(${1:resource \\\$result})';},
	{display = 'sybase_get_last_message'; insert = '()';},
	{display = 'sybase_min_client_severity'; insert = '(${1:int \\\$severity})';},
	{display = 'sybase_min_error_severity'; insert = '(${1:int \\\$severity})';},
	{display = 'sybase_min_message_severity'; insert = '(${1:int \\\$severity})';},
	{display = 'sybase_min_server_severity'; insert = '(${1:int \\\$severity})';},
	{display = 'sybase_num_fields'; insert = '(${1:resource \\\$result})';},
	{display = 'sybase_num_rows'; insert = '(${1:resource \\\$result})';},
	{display = 'sybase_pconnect'; insert = '(${1:[string \\\$servername]}, ${2:[string \\\$username]}, ${3:[string \\\$password]}, ${4:[string \\\$charset]}, ${5:[string \\\$appname]})';},
	{display = 'sybase_query'; insert = '(${1:string \\\$query}, ${2:[resource \\\$link_identifier]})';},
	{display = 'sybase_result'; insert = '(${1:resource \\\$result}, ${2:int \\\$row}, ${3:mixed \\\$field})';},
	{display = 'sybase_select_db'; insert = '(${1:string \\\$database_name}, ${2:[resource \\\$link_identifier]})';},
	{display = 'sybase_set_message_handler'; insert = '(${1:callback \\\$handler}, ${2:[resource \\\$link_identifier]})';},
	{display = 'sybase_unbuffered_query'; insert = '(${1:string \\\$query}, ${2:resource \\\$link_identifier}, ${3:[bool \\\$store_result]})';},
	{display = 'symlink'; insert = '(${1:string \\\$target}, ${2:string \\\$link})';},
	{display = 'sys_get_temp_dir'; insert = '()';},
	{display = 'sys_getloadavg'; insert = '()';},
	{display = 'syslog'; insert = '(${1:int \\\$priority}, ${2:string \\\$message})';},
	{display = 'system'; insert = '(${1:string \\\$command}, ${2:[int \\\$return_var]})';},
	{display = 'tan'; insert = '(${1:float \\\$arg})';},
	{display = 'tanh'; insert = '(${1:float \\\$arg})';},
	{display = 'tempnam'; insert = '(${1:string \\\$dir}, ${2:string \\\$prefix})';},
	{display = 'textdomain'; insert = '(${1:string \\\$text_domain})';},
	{display = 'tidy'; insert = '(${1:[string \\\$filename]}, ${2:[mixed \\\$config]}, ${3:[string \\\$encoding]}, ${4:[bool \\\$use_include_path]})';},
	{display = 'tidy_access_count'; insert = '(${1:tidy \\\$object})';},
	{display = 'tidy_clean_repair'; insert = '(${1:tidy \\\$object})';},
	{display = 'tidy_config_count'; insert = '(${1:tidy \\\$object})';},
	{display = 'tidy_diagnose'; insert = '(${1:tidy \\\$object})';},
	{display = 'tidy_error_count'; insert = '(${1:tidy \\\$object})';},
	{display = 'tidy_get_body'; insert = '(${1:tidy \\\$object})';},
	{display = 'tidy_get_config'; insert = '(${1:tidy \\\$object})';},
	{display = 'tidy_get_error_buffer'; insert = '(${1:tidy \\\$object})';},
	{display = 'tidy_get_head'; insert = '(${1:tidy \\\$object})';},
	{display = 'tidy_get_html'; insert = '(${1:tidy \\\$object})';},
	{display = 'tidy_get_html_ver'; insert = '(${1:tidy \\\$object})';},
	{display = 'tidy_get_opt_doc'; insert = '(${1:string \\\$optname}, ${2:tidy \\\$object})';},
	{display = 'tidy_get_output'; insert = '(${1:tidy \\\$object})';},
	{display = 'tidy_get_release'; insert = '()';},
	{display = 'tidy_get_root'; insert = '(${1:tidy \\\$object})';},
	{display = 'tidy_get_status'; insert = '(${1:tidy \\\$object})';},
	{display = 'tidy_getopt'; insert = '(${1:string \\\$option}, ${2:tidy \\\$object})';},
	{display = 'tidy_is_xhtml'; insert = '(${1:tidy \\\$object})';},
	{display = 'tidy_is_xml'; insert = '(${1:tidy \\\$object})';},
	{display = 'tidy_load_config'; insert = '(${1:string \\\$filename}, ${2:string \\\$encoding})';},
	{display = 'tidy_parse_file'; insert = '(${1:string \\\$filename}, ${2:[mixed \\\$config]}, ${3:[string \\\$encoding]}, ${4:[bool \\\$use_include_path = false]})';},
	{display = 'tidy_parse_string'; insert = '(${1:string \\\$input}, ${2:[mixed \\\$config]}, ${3:[string \\\$encoding]})';},
	{display = 'tidy_repair_file'; insert = '(${1:string \\\$filename}, ${2:[mixed \\\$config]}, ${3:[string \\\$encoding]}, ${4:[bool \\\$use_include_path = false]})';},
	{display = 'tidy_repair_string'; insert = '(${1:string \\\$data}, ${2:[mixed \\\$config]}, ${3:[string \\\$encoding]})';},
	{display = 'tidy_reset_config'; insert = '()';},
	{display = 'tidy_save_config'; insert = '(${1:string \\\$filename})';},
	{display = 'tidy_set_encoding'; insert = '(${1:string \\\$encoding})';},
	{display = 'tidy_setopt'; insert = '(${1:string \\\$option}, ${2:mixed \\\$value})';},
	{display = 'tidy_warning_count'; insert = '(${1:tidy \\\$object})';},
	{display = 'time'; insert = '()';},
	{display = 'time_nanosleep'; insert = '(${1:int \\\$seconds}, ${2:int \\\$nanoseconds})';},
	{display = 'time_sleep_until'; insert = '(${1:float \\\$timestamp})';},
	{display = 'timezone_abbreviations_list'; insert = '()';},
	{display = 'timezone_identifiers_list'; insert = '()';},
	{display = 'timezone_location_get'; insert = '()';},
	{display = 'timezone_name_from_abbr'; insert = '(${1:string \\\$abbr}, ${2:[int \\\$gmtOffset = -1]}, ${3:[int \\\$isdst = -1]})';},
	{display = 'timezone_name_get'; insert = '()';},
	{display = 'timezone_offset_get'; insert = '()';},
	{display = 'timezone_open'; insert = '()';},
	{display = 'timezone_transitions_get'; insert = '()';},
	{display = 'timezone_version_get'; insert = '()';},
	{display = 'tmpfile'; insert = '()';},
	{display = 'token_get_all'; insert = '(${1:string \\\$source})';},
	{display = 'token_name'; insert = '(${1:int \\\$token})';},
	{display = 'touch'; insert = '(${1:string \\\$filename}, ${2:[int \\\$time = time()]}, ${3:[int \\\$atime]})';},
	{display = 'transliterator_create'; insert = '(${1:string \\\$id}, ${2:[int \\\$direction]})';},
	{display = 'transliterator_create_from_rules'; insert = '(${1:string \\\$rules}, ${2:[int \\\$direction]}, ${3:string \\\$id})';},
	{display = 'transliterator_create_inverse'; insert = '()';},
	{display = 'transliterator_get_error_code'; insert = '()';},
	{display = 'transliterator_get_error_message'; insert = '()';},
	{display = 'transliterator_list_ids'; insert = '()';},
	{display = 'transliterator_transliterate'; insert = '(${1:string \\\$subject}, ${2:[string \\\$start]}, ${3:[string \\\$end]})';},
	{display = 'trigger_error'; insert = '(${1:string \\\$error_msg}, ${2:[int \\\$error_type = E_USER_NOTICE]})';},
	{display = 'trim'; insert = '(${1:string \\\$str}, ${2:[string \\\$charlist]})';},
	{display = 'uasort'; insert = '(${1:array \\\$array}, ${2:callback \\\$cmp_function})';},
	{display = 'ucfirst'; insert = '(${1:string \\\$str})';},
	{display = 'ucwords'; insert = '(${1:string \\\$str})';},
	{display = 'uksort'; insert = '(${1:array \\\$array}, ${2:callback \\\$cmp_function})';},
	{display = 'umask'; insert = '(${1:[int \\\$mask]})';},
	{display = 'uniqid'; insert = '(${1:[string \\\$prefix = \"\"]}, ${2:[bool \\\$more_entropy = false]})';},
	{display = 'unixtojd'; insert = '(${1:[int \\\$timestamp = time()]})';},
	{display = 'unlink'; insert = '(${1:string \\\$filename}, ${2:[resource \\\$context]})';},
	{display = 'unpack'; insert = '(${1:string \\\$format}, ${2:string \\\$data})';},
	{display = 'unregister_tick_function'; insert = '(${1:string \\\$function_name})';},
	{display = 'unserialize'; insert = '(${1:string \\\$str})';},
	{display = 'unset'; insert = '(${1:mixed \\\$var}, ${2:[mixed ...]})';},
	{display = 'urldecode'; insert = '(${1:string \\\$str})';},
	{display = 'urlencode'; insert = '(${1:string \\\$str})';},
	{display = 'use_soap_error_handler'; insert = '(${1:[bool \\\$handler = true]})';},
	{display = 'user_error'; insert = '()';},
	{display = 'usleep'; insert = '(${1:int \\\$micro_seconds})';},
	{display = 'usort'; insert = '(${1:array \\\$array}, ${2:callback \\\$cmp_function})';},
	{display = 'utf8_decode'; insert = '(${1:string \\\$data})';},
	{display = 'utf8_encode'; insert = '(${1:string \\\$data})';},
	{display = 'var_dump'; insert = '(${1:mixed \\\$expression}, ${2:[mixed ...]})';},
	{display = 'var_export'; insert = '(${1:mixed \\\$expression}, ${2:[bool \\\$return = false]})';},
	{display = 'variant_abs'; insert = '(${1:mixed \\\$val})';},
	{display = 'variant_add'; insert = '(${1:mixed \\\$left}, ${2:mixed \\\$right})';},
	{display = 'variant_and'; insert = '(${1:mixed \\\$left}, ${2:mixed \\\$right})';},
	{display = 'variant_cast'; insert = '(${1:variant \\\$variant}, ${2:int \\\$type})';},
	{display = 'variant_cat'; insert = '(${1:mixed \\\$left}, ${2:mixed \\\$right})';},
	{display = 'variant_cmp'; insert = '(${1:mixed \\\$left}, ${2:mixed \\\$right}, ${3:[int \\\$lcid]}, ${4:[int \\\$flags]})';},
	{display = 'variant_date_from_timestamp'; insert = '(${1:int \\\$timestamp})';},
	{display = 'variant_date_to_timestamp'; insert = '(${1:variant \\\$variant})';},
	{display = 'variant_div'; insert = '(${1:mixed \\\$left}, ${2:mixed \\\$right})';},
	{display = 'variant_eqv'; insert = '(${1:mixed \\\$left}, ${2:mixed \\\$right})';},
	{display = 'variant_fix'; insert = '(${1:mixed \\\$variant})';},
	{display = 'variant_get_type'; insert = '(${1:variant \\\$variant})';},
	{display = 'variant_idiv'; insert = '(${1:mixed \\\$left}, ${2:mixed \\\$right})';},
	{display = 'variant_imp'; insert = '(${1:mixed \\\$left}, ${2:mixed \\\$right})';},
	{display = 'variant_int'; insert = '(${1:mixed \\\$variant})';},
	{display = 'variant_mod'; insert = '(${1:mixed \\\$left}, ${2:mixed \\\$right})';},
	{display = 'variant_mul'; insert = '(${1:mixed \\\$left}, ${2:mixed \\\$right})';},
	{display = 'variant_neg'; insert = '(${1:mixed \\\$variant})';},
	{display = 'variant_not'; insert = '(${1:mixed \\\$variant})';},
	{display = 'variant_or'; insert = '(${1:mixed \\\$left}, ${2:mixed \\\$right})';},
	{display = 'variant_pow'; insert = '(${1:mixed \\\$left}, ${2:mixed \\\$right})';},
	{display = 'variant_round'; insert = '(${1:mixed \\\$variant}, ${2:int \\\$decimals})';},
	{display = 'variant_set'; insert = '(${1:variant \\\$variant}, ${2:mixed \\\$value})';},
	{display = 'variant_set_type'; insert = '(${1:variant \\\$variant}, ${2:int \\\$type})';},
	{display = 'variant_sub'; insert = '(${1:mixed \\\$left}, ${2:mixed \\\$right})';},
	{display = 'variant_xor'; insert = '(${1:mixed \\\$left}, ${2:mixed \\\$right})';},
	{display = 'version_compare'; insert = '(${1:string \\\$version1}, ${2:string \\\$version2}, ${3:[string \\\$operator]})';},
	{display = 'vfprintf'; insert = '(${1:resource \\\$handle}, ${2:string \\\$format}, ${3:array \\\$args})';},
	{display = 'virtual'; insert = '(${1:string \\\$filename})';},
	{display = 'vprintf'; insert = '(${1:string \\\$format}, ${2:array \\\$args})';},
	{display = 'vsprintf'; insert = '(${1:string \\\$format}, ${2:array \\\$args})';},
	{display = 'wddx_add_vars'; insert = '(${1:resource \\\$packet_id}, ${2:mixed \\\$var_name}, ${3:[mixed ...]})';},
	{display = 'wddx_deserialize'; insert = '(${1:string \\\$packet})';},
	{display = 'wddx_packet_end'; insert = '(${1:resource \\\$packet_id})';},
	{display = 'wddx_packet_start'; insert = '(${1:[string \\\$comment]})';},
	{display = 'wddx_serialize_value'; insert = '(${1:mixed \\\$var}, ${2:[string \\\$comment]})';},
	{display = 'wddx_serialize_vars'; insert = '(${1:mixed \\\$var_name}, ${2:[mixed ...]})';},
	{display = 'wordwrap'; insert = '(${1:string \\\$str}, ${2:[int \\\$width = 75]}, ${3:[string \\\$break = \"\\\\n\"]}, ${4:[bool \\\$cut = false]})';},
	{display = 'xhprof_disable'; insert = '()';},
	{display = 'xhprof_enable'; insert = '(${1:[int \\\$flags]}, ${2:[array \\\$options]})';},
	{display = 'xhprof_sample_disable'; insert = '()';},
	{display = 'xhprof_sample_enable'; insert = '()';},
	{display = 'xml_error_string'; insert = '(${1:int \\\$code})';},
	{display = 'xml_get_current_byte_index'; insert = '(${1:resource \\\$parser})';},
	{display = 'xml_get_current_column_number'; insert = '(${1:resource \\\$parser})';},
	{display = 'xml_get_current_line_number'; insert = '(${1:resource \\\$parser})';},
	{display = 'xml_get_error_code'; insert = '(${1:resource \\\$parser})';},
	{display = 'xml_parse'; insert = '(${1:resource \\\$parser}, ${2:string \\\$data}, ${3:[bool \\\$is_final = false]})';},
	{display = 'xml_parse_into_struct'; insert = '(${1:resource \\\$parser}, ${2:string \\\$data}, ${3:array \\\$values}, ${4:[array \\\$index]})';},
	{display = 'xml_parser_create'; insert = '(${1:[string \\\$encoding]})';},
	{display = 'xml_parser_create_ns'; insert = '(${1:[string \\\$encoding]}, ${2:[string \\\$separator = \':\']})';},
	{display = 'xml_parser_free'; insert = '(${1:resource \\\$parser})';},
	{display = 'xml_parser_get_option'; insert = '(${1:resource \\\$parser}, ${2:int \\\$option})';},
	{display = 'xml_parser_set_option'; insert = '(${1:resource \\\$parser}, ${2:int \\\$option}, ${3:mixed \\\$value})';},
	{display = 'xml_set_character_data_handler'; insert = '(${1:resource \\\$parser}, ${2:callback \\\$handler})';},
	{display = 'xml_set_default_handler'; insert = '(${1:resource \\\$parser}, ${2:callback \\\$handler})';},
	{display = 'xml_set_element_handler'; insert = '(${1:resource \\\$parser}, ${2:callback \\\$start_element_handler}, ${3:callback \\\$end_element_handler})';},
	{display = 'xml_set_end_namespace_decl_handler'; insert = '(${1:resource \\\$parser}, ${2:callback \\\$handler})';},
	{display = 'xml_set_external_entity_ref_handler'; insert = '(${1:resource \\\$parser}, ${2:callback \\\$handler})';},
	{display = 'xml_set_notation_decl_handler'; insert = '(${1:resource \\\$parser}, ${2:callback \\\$handler})';},
	{display = 'xml_set_object'; insert = '(${1:resource \\\$parser}, ${2:object \\\$object})';},
	{display = 'xml_set_processing_instruction_handler'; insert = '(${1:resource \\\$parser}, ${2:callback \\\$handler})';},
	{display = 'xml_set_start_namespace_decl_handler'; insert = '(${1:resource \\\$parser}, ${2:callback \\\$handler})';},
	{display = 'xml_set_unparsed_entity_decl_handler'; insert = '(${1:resource \\\$parser}, ${2:callback \\\$handler})';},
	{display = 'xmlrpc_decode'; insert = '(${1:string \\\$xml}, ${2:[string \\\$encoding = \"iso-8859-1\"]})';},
	{display = 'xmlrpc_decode_request'; insert = '(${1:string \\\$xml}, ${2:string \\\$method}, ${3:[string \\\$encoding]})';},
	{display = 'xmlrpc_encode'; insert = '(${1:mixed \\\$value})';},
	{display = 'xmlrpc_encode_request'; insert = '(${1:string \\\$method}, ${2:mixed \\\$params}, ${3:[array \\\$output_options]})';},
	{display = 'xmlrpc_get_type'; insert = '(${1:mixed \\\$value})';},
	{display = 'xmlrpc_is_fault'; insert = '(${1:array \\\$arg})';},
	{display = 'xmlrpc_parse_method_descriptions'; insert = '(${1:string \\\$xml})';},
	{display = 'xmlrpc_server_add_introspection_data'; insert = '(${1:resource \\\$server}, ${2:array \\\$desc})';},
	{display = 'xmlrpc_server_call_method'; insert = '(${1:resource \\\$server}, ${2:string \\\$xml}, ${3:mixed \\\$user_data}, ${4:[array \\\$output_options]})';},
	{display = 'xmlrpc_server_create'; insert = '()';},
	{display = 'xmlrpc_server_destroy'; insert = '(${1:resource \\\$server})';},
	{display = 'xmlrpc_server_register_introspection_callback'; insert = '(${1:resource \\\$server}, ${2:string \\\$function})';},
	{display = 'xmlrpc_server_register_method'; insert = '(${1:resource \\\$server}, ${2:string \\\$method_name}, ${3:string \\\$function})';},
	{display = 'xmlrpc_set_type'; insert = '(${1:string \\\$value}, ${2:string \\\$type})';},
	{display = 'xmlwriter_end_attribute'; insert = '(${1:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_end_cdata'; insert = '(${1:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_end_comment'; insert = '(${1:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_end_document'; insert = '(${1:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_end_dtd'; insert = '(${1:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_end_dtd_attlist'; insert = '(${1:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_end_dtd_element'; insert = '(${1:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_end_dtd_entity'; insert = '(${1:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_end_element'; insert = '(${1:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_end_pi'; insert = '(${1:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_flush'; insert = '(${1:[bool \\\$empty = true]}, ${2:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_full_end_element'; insert = '(${1:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_open_memory'; insert = '()';},
	{display = 'xmlwriter_open_uri'; insert = '(${1:string \\\$uri})';},
	{display = 'xmlwriter_output_memory'; insert = '(${1:[bool \\\$flush = true]}, ${2:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_set_indent'; insert = '(${1:bool \\\$indent}, ${2:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_set_indent_string'; insert = '(${1:string \\\$indentString}, ${2:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_start_attribute'; insert = '(${1:string \\\$name}, ${2:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_start_attribute_ns'; insert = '(${1:string \\\$prefix}, ${2:string \\\$name}, ${3:string \\\$uri}, ${4:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_start_cdata'; insert = '(${1:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_start_comment'; insert = '(${1:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_start_document'; insert = '(${1:[string \\\$version]}, ${2:[string \\\$encoding]}, ${3:[string \\\$standalone]}, ${4:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_start_dtd'; insert = '(${1:string \\\$qualifiedName}, ${2:[string \\\$publicId]}, ${3:[string \\\$systemId]}, ${4:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_start_dtd_attlist'; insert = '(${1:string \\\$name}, ${2:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_start_dtd_element'; insert = '(${1:string \\\$qualifiedName}, ${2:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_start_dtd_entity'; insert = '(${1:string \\\$name}, ${2:bool \\\$isparam}, ${3:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_start_element'; insert = '(${1:string \\\$name}, ${2:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_start_element_ns'; insert = '(${1:string \\\$prefix}, ${2:string \\\$name}, ${3:string \\\$uri}, ${4:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_start_pi'; insert = '(${1:string \\\$target}, ${2:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_text'; insert = '(${1:string \\\$content}, ${2:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_write_attribute'; insert = '(${1:string \\\$name}, ${2:string \\\$value}, ${3:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_write_attribute_ns'; insert = '(${1:string \\\$prefix}, ${2:string \\\$name}, ${3:string \\\$uri}, ${4:string \\\$content}, ${5:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_write_cdata'; insert = '(${1:string \\\$content}, ${2:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_write_comment'; insert = '(${1:string \\\$content}, ${2:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_write_dtd'; insert = '(${1:string \\\$name}, ${2:[string \\\$publicId]}, ${3:[string \\\$systemId]}, ${4:[string \\\$subset]}, ${5:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_write_dtd_attlist'; insert = '(${1:string \\\$name}, ${2:string \\\$content}, ${3:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_write_dtd_element'; insert = '(${1:string \\\$name}, ${2:string \\\$content}, ${3:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_write_dtd_entity'; insert = '(${1:string \\\$name}, ${2:string \\\$content}, ${3:bool \\\$pe}, ${4:string \\\$pubid}, ${5:string \\\$sysid}, ${6:string \\\$ndataid}, ${7:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_write_element'; insert = '(${1:string \\\$name}, ${2:[string \\\$content]}, ${3:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_write_element_ns'; insert = '(${1:string \\\$prefix}, ${2:string \\\$name}, ${3:string \\\$uri}, ${4:[string \\\$content]}, ${5:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_write_pi'; insert = '(${1:string \\\$target}, ${2:string \\\$content}, ${3:resource \\\$xmlwriter})';},
	{display = 'xmlwriter_write_raw'; insert = '(${1:string \\\$content}, ${2:resource \\\$xmlwriter})';},
	{display = 'xpath_eval'; insert = '()';},
	{display = 'xpath_eval_expression'; insert = '()';},
	{display = 'xpath_new_context'; insert = '(${1:domdocument \\\$dom_document})';},
	{display = 'xpath_register_ns'; insert = '(${1:XPathContext \\\$xpath_context}, ${2:string \\\$prefix}, ${3:string \\\$uri})';},
	{display = 'xpath_register_ns_auto'; insert = '(${1:XPathContext \\\$xpath_context}, ${2:[object \\\$context_node]})';},
	{display = 'xptr_eval'; insert = '()';},
	{display = 'xptr_new_context'; insert = '()';},
	{display = 'xslt_backend_info'; insert = '()';},
	{display = 'xslt_backend_name'; insert = '()';},
	{display = 'xslt_backend_version'; insert = '()';},
	{display = 'xslt_create'; insert = '()';},
	{display = 'xslt_errno'; insert = '(${1:resource \\\$xh})';},
	{display = 'xslt_error'; insert = '(${1:resource \\\$xh})';},
	{display = 'xslt_free'; insert = '(${1:resource \\\$xh})';},
	{display = 'xslt_getopt'; insert = '(${1:resource \\\$processor})';},
	{display = 'xslt_process'; insert = '(${1:resource \\\$xh}, ${2:string \\\$xmlcontainer}, ${3:string \\\$xslcontainer}, ${4:[string \\\$resultcontainer]}, ${5:[array \\\$arguments]}, ${6:[array \\\$parameters]})';},
	{display = 'xslt_set_base'; insert = '(${1:resource \\\$xh}, ${2:string \\\$uri})';},
	{display = 'xslt_set_encoding'; insert = '(${1:resource \\\$xh}, ${2:string \\\$encoding})';},
	{display = 'xslt_set_error_handler'; insert = '(${1:resource \\\$xh}, ${2:mixed \\\$handler})';},
	{display = 'xslt_set_log'; insert = '(${1:resource \\\$xh}, ${2:[mixed \\\$log]})';},
	{display = 'xslt_set_object'; insert = '(${1:resource \\\$processor}, ${2:object \\\$obj})';},
	{display = 'xslt_set_sax_handler'; insert = '(${1:resource \\\$xh}, ${2:array \\\$handlers})';},
	{display = 'xslt_set_sax_handlers'; insert = '(${1:resource \\\$processor}, ${2:array \\\$handlers})';},
	{display = 'xslt_set_scheme_handler'; insert = '(${1:resource \\\$xh}, ${2:array \\\$handlers})';},
	{display = 'xslt_set_scheme_handlers'; insert = '(${1:resource \\\$xh}, ${2:array \\\$handlers})';},
	{display = 'xslt_setopt'; insert = '(${1:resource \\\$processor}, ${2:int \\\$newmask})';},
	{display = 'zend_logo_guid'; insert = '()';},
	{display = 'zend_thread_id'; insert = '()';},
	{display = 'zend_version'; insert = '()';},
	{display = 'zip_close'; insert = '(${1:resource \\\$zip})';},
	{display = 'zip_entry_close'; insert = '(${1:resource \\\$zip_entry})';},
	{display = 'zip_entry_compressedsize'; insert = '(${1:resource \\\$zip_entry})';},
	{display = 'zip_entry_compressionmethod'; insert = '(${1:resource \\\$zip_entry})';},
	{display = 'zip_entry_filesize'; insert = '(${1:resource \\\$zip_entry})';},
	{display = 'zip_entry_name'; insert = '(${1:resource \\\$zip_entry})';},
	{display = 'zip_entry_open'; insert = '(${1:resource \\\$zip}, ${2:resource \\\$zip_entry}, ${3:[string \\\$mode]})';},
	{display = 'zip_entry_read'; insert = '(${1:resource \\\$zip_entry}, ${2:[int \\\$length]})';},
	{display = 'zip_open'; insert = '(${1:string \\\$filename})';},
	{display = 'zip_read'; insert = '(${1:resource \\\$zip})';},
	{display = 'zlib_get_coding_type'; insert = '()';}
)
