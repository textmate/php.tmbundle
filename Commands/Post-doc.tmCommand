<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin/ruby

next_line = STDIN.read.to_a[ENV['TM_LINE_NUMBER'].to_i..-1].join("\n").strip[/.+$/]

puts '/**'

@tags = []
type = ''
author = true

def tag(tag, default, trailing = nil)
  @tags &lt;&lt; {:tag =&gt; tag, :default =&gt; default, :trailing =&gt; trailing}
end

case next_line
when /(class|interface) /
  type = $&amp;
  tag 'package', 'default'
when /function\s*(\w+)\((.*)\)/
  function_name, args = $1, $2
  type = 'function'
  args.split(/,/).each do |arg|
    arg.strip =~ /(?:(\w+)\s*)?\$([A-z0-9]+)/
    tag 'param', $1 || 'string', "\\$" + $2
  end
  tag 'return', 'void' unless function_name == '__construct'
when /const|define/
  type = 'constant'
  author = false
when /var|p(ublic|rivate|rotected)\s*\$/
  type = 'variable'
  tag 'var', 'string'
  author = false
end

puts " * ${1:undocumented #{type}}"
puts ' *' if @tags.size &gt; 0 or author

placeholder = 1
@tags.each do |tag|
  placeholder += 1
  if tag[:trailing]
    puts " * @#{tag[:tag]} ${#{placeholder}:#{tag[:default]}} #{tag[:trailing] } \$#{placeholder += 1}"
  else
    puts " * @#{tag[:tag]} ${#{placeholder}:#{tag[:default]}}"
  end
end

puts ' * @author ${PHPDOC_AUTHOR:$TM_FULLNAME}$' + (placeholder + 1).to_s if author
print ' */$0'</string>
	<key>fallbackInput</key>
	<string>scope</string>
	<key>input</key>
	<string>document</string>
	<key>name</key>
	<string>Post-doc</string>
	<key>output</key>
	<string>insertAsSnippet</string>
	<key>scope</key>
	<string>source.php</string>
	<key>tabTrigger</key>
	<string>doc</string>
	<key>uuid</key>
	<string>94D8B40B-9F49-4B6D-90B5-DBFF5FB36590</string>
</dict>
</plist>
